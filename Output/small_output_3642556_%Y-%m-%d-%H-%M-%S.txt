True
[09/08 00:21:57 detectron2]: Rank of current process: 0. World size: 1
[09/08 00:21:57 detectron2]: Full config saved to checkpoints/coco/1725751316/base/config.yaml
[09/08 00:21:58 detectron2]: [Refine] n = 24, Î± = 0.1
[09/08 00:22:12 d2.data.build]: Removed 13846 images with no usable annotations. 68937 images left.
[09/08 00:22:12 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=1333, sample_style='choice'), RandomFlip()]
[09/08 00:22:12 d2.data.build]: Using training sampler TrainingSampler
[09/08 00:22:12 d2.data.common]: Serializing 68937 elements to byte tensors and concatenating them all ...
[09/08 00:22:12 d2.data.common]: Serialized dataset takes 30.91 MiB
Traceback (most recent call last):
  File "main.py", line 31, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 82, in launch
    main_func(*args)
  File "main.py", line 24, in main
    trainer = Trainer(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 396, in __init__
    self.register_hooks(self.build_hooks())
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 463, in build_hooks
    ret.append(hooks.PeriodicWriter(self.build_writers(), period=20))
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 475, in build_writers
    return default_writers(self.cfg.OUTPUT_DIR, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 248, in default_writers
    TensorboardXWriter(output_dir),
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/utils/events.py", line 145, in __init__
    from torch.utils.tensorboard import SummaryWriter
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/tensorboard/__init__.py", line 4, in <module>
    LooseVersion = distutils.version.LooseVersion
AttributeError: module 'distutils' has no attribute 'version'
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/users/acr23hk/paper/fsod-dc/tools/ckpt_surgery.py", line 128, in <module>
    main(args)
  File "/users/acr23hk/paper/fsod-dc/tools/ckpt_surgery.py", line 83, in main
    sd = torch.load(inp_path, map_location="cpu")
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/serialization.py", line 594, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/serialization.py", line 230, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/serialization.py", line 211, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: '/users/acr23hk/paper/fsod-dc/checkpoints/coco/1725751316/base/model_final.pth'
[09/08 00:22:16 detectron2]: Rank of current process: 0. World size: 1
[09/08 00:22:16 detectron2]: Full config saved to checkpoints/coco/1725751316/fsod/1shot/seed0/config.yaml
[09/08 00:22:17 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
Traceback (most recent call last):
  File "main.py", line 31, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 82, in launch
    main_func(*args)
  File "main.py", line 24, in main
    trainer = Trainer(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 376, in __init__
    model = self.build_model(cfg)
  File "/users/acr23hk/paper/fsod-dc/src/engine/trainer.py", line 33, in build_model
    model = build_model(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/meta_arch/build.py", line 22, in build_model
    model = META_ARCH_REGISTRY.get(meta_arch)(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 25, in from_config
    ret = super().from_config(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 76, in from_config
    "roi_heads": build_roi_heads(cfg, backbone.output_shape()),
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 43, in build_roi_heads
    return ROI_HEADS_REGISTRY.get(name)(cfg, input_shape)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/roi_heads.py", line 74, in from_config
    ret["box_predictor"] = (
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/calibrate.py", line 124, in from_config
    supp_feats, mask = extract_support_rois(pkl.dumps(cfg))
  File "/users/acr23hk/paper/fsod-dc/src/modeling/calibrate.py", line 37, in extract_support_rois
    DetectionCheckpointer(backbone).resume_or_load("./pretrain/R-101.pkl")
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 227, in resume_or_load
    return self.load(path, checkpointables=[])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/checkpoint/detection_checkpoint.py", line 52, in load
    ret = super().load(path, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 155, in load
    checkpoint = self._load_file(path)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/checkpoint/detection_checkpoint.py", line 62, in _load_file
    data = pickle.load(f, encoding="latin1")
_pickle.UnpicklingError: A load persistent id instruction was encountered,
but no persistent_load function was specified.
[09/08 00:22:18 detectron2]: Rank of current process: 0. World size: 1
[09/08 00:22:18 detectron2]: Full config saved to checkpoints/coco/1725751316/fsod/1shot/seed1/config.yaml
[09/08 00:22:19 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
Traceback (most recent call last):
  File "main.py", line 31, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 82, in launch
    main_func(*args)
  File "main.py", line 24, in main
    trainer = Trainer(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 376, in __init__
    model = self.build_model(cfg)
  File "/users/acr23hk/paper/fsod-dc/src/engine/trainer.py", line 33, in build_model
    model = build_model(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/meta_arch/build.py", line 22, in build_model
    model = META_ARCH_REGISTRY.get(meta_arch)(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 25, in from_config
    ret = super().from_config(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 76, in from_config
    "roi_heads": build_roi_heads(cfg, backbone.output_shape()),
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 43, in build_roi_heads
    return ROI_HEADS_REGISTRY.get(name)(cfg, input_shape)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/roi_heads.py", line 74, in from_config
    ret["box_predictor"] = (
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/calibrate.py", line 124, in from_config
    supp_feats, mask = extract_support_rois(pkl.dumps(cfg))
  File "/users/acr23hk/paper/fsod-dc/src/modeling/calibrate.py", line 37, in extract_support_rois
    DetectionCheckpointer(backbone).resume_or_load("./pretrain/R-101.pkl")
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 227, in resume_or_load
    return self.load(path, checkpointables=[])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/checkpoint/detection_checkpoint.py", line 52, in load
    ret = super().load(path, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 155, in load
    checkpoint = self._load_file(path)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/checkpoint/detection_checkpoint.py", line 62, in _load_file
    data = pickle.load(f, encoding="latin1")
_pickle.UnpicklingError: A load persistent id instruction was encountered,
but no persistent_load function was specified.
[09/08 00:22:20 detectron2]: Rank of current process: 0. World size: 1
[09/08 00:22:20 detectron2]: Full config saved to checkpoints/coco/1725751316/fsod/1shot/seed2/config.yaml
[09/08 00:22:21 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
Traceback (most recent call last):
  File "main.py", line 31, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 82, in launch
    main_func(*args)
  File "main.py", line 24, in main
    trainer = Trainer(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 376, in __init__
    model = self.build_model(cfg)
  File "/users/acr23hk/paper/fsod-dc/src/engine/trainer.py", line 33, in build_model
    model = build_model(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/meta_arch/build.py", line 22, in build_model
    model = META_ARCH_REGISTRY.get(meta_arch)(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 25, in from_config
    ret = super().from_config(cfg)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 76, in from_config
    "roi_heads": build_roi_heads(cfg, backbone.output_shape()),
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 43, in build_roi_heads
    return ROI_HEADS_REGISTRY.get(name)(cfg, input_shape)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/roi_heads.py", line 74, in from_config
    ret["box_predictor"] = (
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 189, in wrapped
    explicit_args = _get_args_from_config(from_config_func, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/config/config.py", line 245, in _get_args_from_config
    ret = from_config_func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/calibrate.py", line 124, in from_config
    supp_feats, mask = extract_support_rois(pkl.dumps(cfg))
  File "/users/acr23hk/paper/fsod-dc/src/modeling/calibrate.py", line 37, in extract_support_rois
    DetectionCheckpointer(backbone).resume_or_load("./pretrain/R-101.pkl")
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 227, in resume_or_load
    return self.load(path, checkpointables=[])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/checkpoint/detection_checkpoint.py", line 52, in load
    ret = super().load(path, *args, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 155, in load
    checkpoint = self._load_file(path)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/checkpoint/detection_checkpoint.py", line 62, in _load_file
    data = pickle.load(f, encoding="latin1")
_pickle.UnpicklingError: A load persistent id instruction was encountered,
but no persistent_load function was specified.
