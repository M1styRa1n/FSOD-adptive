save to: /users/acr23hk/paper/fsod-dc/dataset/check/voc/1726356812/base1/model_final-fsod.pth
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/setuptools/_distutils/version.py
[09/17 12:03:42 detectron2]: Rank of current process: 0. World size: 4
[09/17 12:03:42 detectron2]: Full config saved to checkpoints/voc/1726571009/fsod1/1shot/seed1/config.yaml
[09/17 12:03:43 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
[09/17 12:03:43 fvcore.common.checkpoint]: Reading a file from 'torchvision'
[09/17 12:03:49 detectron2]: Loss: 0.0000
[09/17 12:03:49 detectron2]: [CLS] Use dropout: p = 0.8
[09/17 12:03:49 d2.data.build]: Removed 0 images with no usable annotations. 20 images left.
[09/17 12:03:49 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 12:03:49 d2.data.build]: Using training sampler TrainingSampler
[09/17 12:03:49 d2.data.common]: Serializing 20 elements to byte tensors and concatenating them all ...
[09/17 12:03:49 d2.data.common]: Serialized dataset takes 0.01 MiB
[09/17 12:03:49 fvcore.common.checkpoint]: [Checkpointer] Loading from dataset/check/voc/1726356812/base1/model_final-fsod.pth ...
WARNING [09/17 12:03:49 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
roi_heads.box_predictor.fc.weight
roi_heads.box_predictor.fsup
[09/17 12:03:49 d2.engine.train_loop]: Starting training from iteration 0
{'proposal_boxes': Boxes(tensor([[  76.2115,  612.0656,  373.6905,  884.4816],
        [   0.0000,  628.4796,  503.7365,  888.0000],
        [  87.1805,  554.1096,  391.9305,  846.5810],
        ...,
        [ 856.4265,  386.9505, 1170.7930,  566.3948],
        [1132.7178,  363.9715, 1209.6455,  503.2850],
        [1155.3264,  193.4879, 1234.0837,  290.5366]], device='cuda:3')), 'objectness_logits': tensor([-1.0299e-01,  1.9097e+00,  8.9476e-01, -1.1266e-01, -1.5281e+00,
         2.3026e+01, -2.2911e+00,  1.3249e+00, -9.0633e-01,  2.5115e+00,
        -7.9822e-01, -2.1499e+00, -4.5955e-01,  2.6379e+00, -1.5238e+00,
        -1.0271e+00, -2.3387e+00,  2.7611e+00,  5.4329e-01,  1.3053e+00,
         2.5931e+00, -1.8285e+00,  4.3751e+00, -2.7876e+00, -1.0654e+00,
        -1.2013e+00,  2.1659e+00, -2.5625e-01, -2.3978e+00,  7.1526e-01,
        -1.2465e-01, -2.5034e+00, -8.5316e-01,  2.4060e+00, -2.3475e+00,
        -1.7632e+00, -2.0325e+00,  2.4567e+00, -1.0994e+00, -1.7013e+00,
        -2.6034e+00, -1.9673e+00, -1.9256e+00, -1.3002e+00, -1.6599e-01,
        -1.4544e+00, -2.6845e+00, -1.7470e+00, -7.1831e-01, -1.5132e+00,
        -1.5727e+00,  6.9192e-01, -3.5141e-01, -8.4252e-01, -2.3950e+00,
        -2.0238e+00,  1.2678e+00, -2.2223e+00, -1.3003e+00, -2.5030e+00,
        -1.8971e+00,  2.7317e-01, -1.8659e+00, -1.5852e+00, -2.7651e+00,
        -2.7450e+00, -1.8340e+00, -2.3203e+00, -1.6335e+00, -1.9974e+00,
        -1.8773e+00, -2.5936e+00, -1.6222e+00, -8.9669e-01, -2.5838e-01,
        -6.2300e-01, -2.1636e+00, -2.4633e+00, -8.2937e-01, -2.5013e+00,
        -2.5068e+00, -2.0162e+00, -2.4668e-02,  2.3074e+00, -2.7521e+00,
        -2.1667e+00, -3.7695e-01, -2.0346e+00, -1.4065e+00, -1.3081e+00,
        -1.2775e+00, -7.7381e-01, -1.8562e+00,  2.2128e-01, -7.8457e-01,
         1.2672e+00, -2.0248e+00, -2.7692e+00, -1.6266e+00, -2.2139e+00,
        -2.0632e+00,  1.7348e-02, -1.9175e+00, -2.5756e+00, -7.9971e-01,
        -1.2164e+00, -3.2562e-01, -2.1325e+00, -2.3057e+00, -1.7122e+00,
         1.1452e+00, -4.8501e-01, -2.4125e+00, -1.0320e-01, -1.0474e+00,
        -2.7034e+00, -2.6452e+00, -2.1118e+00, -2.7224e+00, -5.0453e-01,
        -1.0158e+00, -1.7199e+00, -2.7682e+00, -1.6216e+00,  3.9398e+00,
        -1.3515e+00,  2.3257e+00, -2.7255e+00, -2.3395e+00, -1.5307e+00,
        -2.6735e+00, -1.0315e+00, -8.7349e-01, -2.7188e+00, -2.2315e+00,
        -2.0907e+00, -6.5939e-01, -1.6750e+00,  6.6179e-02, -1.3264e+00,
        -2.0172e+00, -7.0414e-01,  1.7580e+00, -1.4907e+00,  1.1230e+00,
         5.4163e-01, -1.4189e-01, -2.3291e+00, -3.5319e-01, -2.6519e+00,
        -1.6693e+00, -2.1937e+00, -1.8807e+00, -5.3939e-01, -2.1691e+00,
        -2.9372e-01,  1.3651e+00, -1.3560e+00,  1.5064e+00,  2.8330e+00,
         1.5044e+00,  1.2109e+00, -1.4771e+00, -1.2609e+00, -1.0958e+00,
        -2.6301e+00, -1.6169e+00, -1.0272e+00, -1.7700e+00, -2.5107e+00,
        -1.4453e+00, -2.4467e+00, -1.2361e+00, -2.6082e+00, -1.6939e+00,
        -1.0305e+00, -2.6166e+00,  1.2670e+00, -2.0527e+00, -4.6507e-01,
        -5.0374e-01, -2.5057e+00, -2.0273e+00,  1.7416e+00,  3.0091e+00,
         1.4484e+00,  2.3000e+00,  1.7208e+00, -1.5665e+00, -1.3136e+00,
        -1.0166e+00,  1.1430e+00, -7.0932e-01, -4.8355e-01, -2.4447e+00,
        -2.1643e+00, -9.2286e-01,  1.5777e+00,  7.6031e-01,  2.0887e+00,
        -1.0822e+00, -1.7076e+00,  2.3421e+00, -2.7664e+00, -2.0806e+00,
        -2.5953e+00, -5.8694e-01,  3.8744e+00, -2.3113e+00,  5.6800e-01,
        -6.0749e-01, -4.6006e-01, -2.0273e+00, -2.6680e+00, -2.0930e+00,
        -2.3621e+00,  1.6283e+00, -1.1117e+00, -2.7257e+00, -8.6448e-01,
        -2.4941e+00, -9.8094e-02, -2.0115e+00, -2.3555e+00, -2.6110e+00,
        -1.0618e+00, -1.0465e+00, -3.6065e-01, -2.7384e+00, -7.4984e-01,
        -1.6019e+00, -5.4273e-01, -4.5324e-01, -7.4792e-01,  2.9986e+00,
        -6.4052e-01, -2.4836e+00, -4.2877e-01, -2.5902e+00, -4.0806e-02,
        -6.8074e-01,  1.7103e-01, -2.5631e+00,  1.4680e+00, -8.3347e-02,
        -1.0879e-02,  1.1109e+00, -1.9987e+00, -2.5457e+00,  2.0804e-01,
         5.3939e-01, -1.4842e+00, -1.2012e+00, -1.4966e+00, -2.8142e+00,
        -4.9580e-01, -2.1366e+00, -1.1595e+00, -1.9678e+00, -1.0936e+00,
        -1.4830e+00, -2.5136e+00,  3.6247e+00,  1.4099e+00, -1.7194e+00,
        -1.4488e+00, -2.1554e+00, -2.2031e+00, -1.2457e+00, -1.9085e+00,
        -1.9824e+00,  8.1844e-01, -2.7788e+00, -2.4982e+00, -1.2271e+00,
         1.5643e+00,  1.4958e-01,  2.3411e-01,  1.4821e-01,  1.9128e-01,
         1.8429e-01,  1.6885e+00, -2.5375e+00, -9.6859e-01, -2.3239e+00,
        -1.9967e+00,  7.1415e-01, -1.0968e-01, -1.0115e+00, -2.5385e+00,
        -2.2574e+00, -7.0872e-01, -1.9966e+00, -3.9895e-01,  9.2059e-01,
         1.7659e+00, -3.9796e-01, -1.6899e+00,  1.7107e+00, -2.7175e+00,
        -6.6414e-01, -1.8581e+00, -2.7280e+00, -4.2106e-01, -2.6164e+00,
        -2.7525e+00,  1.9471e+00, -2.4153e+00,  4.0642e-01, -2.7881e+00,
         1.2478e+00, -2.1490e+00, -1.5569e+00,  9.2026e-01, -2.7642e+00,
         2.4931e-01, -2.4643e+00, -6.1459e-01, -8.8408e-01, -2.6041e+00,
        -2.6933e+00, -3.7378e-01, -1.9872e+00,  7.6287e-01, -1.2223e+00,
         4.1214e-01,  3.4913e+00, -1.8302e+00, -2.5180e+00, -8.2132e-02,
        -1.2751e+00, -1.9001e+00,  1.1970e+00, -2.6795e+00, -2.4689e+00,
        -2.6505e+00, -1.8324e+00, -1.4081e+00,  8.7187e-01, -2.2635e+00,
        -1.7173e+00, -6.3129e-01, -1.4775e+00,  1.9246e-01, -1.0665e+00,
        -1.3669e+00,  3.2262e+00, -2.7095e+00, -5.6825e-01,  1.2136e+00,
        -2.3556e+00, -2.2345e+00,  8.4366e-01, -1.7078e+00, -1.9083e+00,
        -1.8552e-01, -3.8874e-01, -2.5552e+00, -2.3848e+00, -2.7730e+00,
        -1.1721e+00,  1.2142e+00, -6.7235e-01,  2.1053e+00, -2.6396e+00,
        -4.0960e-01,  1.8587e+00, -1.9046e+00, -8.4762e-01, -7.0925e-01,
        -1.6726e+00, -2.5016e+00, -2.2704e+00, -2.5915e+00, -1.5691e+00,
        -1.3931e+00, -2.4210e+00, -1.5901e+00, -7.2869e-01, -2.6265e+00,
        -2.2190e+00, -2.4766e+00,  1.5279e+00, -2.1291e+00, -6.8377e-01,
        -2.0840e+00, -2.4766e+00, -2.8211e+00, -2.4087e+00, -1.7700e-01,
        -2.4700e+00, -1.0649e+00, -2.2978e+00, -2.4766e+00, -1.3376e+00,
        -1.7671e+00, -1.6996e+00, -2.7983e+00, -2.1071e+00, -2.2209e+00,
        -2.1655e+00, -3.3662e-01, -4.2312e-02, -5.4517e-01, -4.6575e-01,
        -8.7874e-02, -2.5057e+00,  2.8964e+00,  2.7288e+00, -2.5843e+00,
        -1.1635e+00, -2.2330e+00, -2.6780e+00, -1.1189e+00,  1.9355e+00,
        -8.0286e-02,  2.1854e+00,  1.5516e+00, -3.4376e-01, -2.4097e+00,
        -1.5115e+00, -2.9048e-01, -2.2241e+00, -2.5436e+00,  6.6087e+00,
        -1.0013e+00, -1.1593e+00, -1.3084e+00, -1.3640e+00,  2.1204e+00,
        -1.3841e+00, -2.5983e+00, -2.2096e+00,  2.6445e-01,  2.0204e+00,
        -2.7097e+00, -1.8123e+00, -2.2485e-01, -1.6256e+00, -1.7031e+00,
        -2.2551e+00, -6.0606e-01, -1.5366e+00, -2.4307e+00, -1.1829e+00,
        -1.7649e+00, -2.3234e+00, -2.7481e+00, -2.4649e+00, -2.1685e+00,
        -2.7211e+00, -1.5392e-01, -2.3160e+00, -2.7958e+00, -1.7043e+00,
        -2.3636e+00, -2.3303e+00, -5.3220e-01, -2.6701e+00, -2.5462e+00,
        -2.0793e+00,  3.4973e-01,  1.7445e-01, -2.8040e+00, -2.2988e+00,
        -2.2813e+00, -6.6263e-01, -1.2943e+00, -2.2688e-01, -2.6946e+00,
         6.4832e-01, -7.4752e-01, -1.9330e+00, -1.1615e+00,  1.0650e+00,
        -2.6540e-01, -1.5131e+00, -1.9085e+00, -1.3303e+00, -1.6040e+00,
        -1.1276e+00, -1.2968e+00, -8.2508e-01, -1.9354e+00, -2.7951e+00,
         2.8411e-01, -2.1617e+00, -6.7659e-01, -1.2382e+00, -2.4402e+00,
        -1.5607e+00, -2.5700e+00, -9.7093e-01, -2.7857e-01, -7.3302e-01,
        -2.5281e+00, -2.1541e+00, -2.8215e+00, -1.4851e-01, -2.3249e+00,
        -2.4638e+00, -2.0360e+00, -3.1453e-01, -1.2976e+00, -7.6327e-01,
        -1.7058e+00,  2.5372e-01,  1.0108e+00, -1.9629e+00,  2.0758e+00,
        -2.4628e+00, -2.3141e+00], device='cuda:3'), 'gt_classes': tensor([19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
        19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:3'), 'gt_boxes': Boxes(tensor([[  0.0000, 541.3333, 322.5860, 888.0000],
        [  0.0000, 541.3333, 322.5860, 888.0000],
        [  0.0000, 541.3333, 322.5860, 888.0000],
        ...,
        [  0.0000, 541.3333, 322.5860, 888.0000],
        [  0.0000, 541.3333, 322.5860, 888.0000],
        [  0.0000, 541.3333, 322.5860, 888.0000]], device='cuda:3'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 28155) is killed by signal: Terminated. 
{'proposal_boxes': Boxes(tensor([[ 542.2480,  530.0024,  639.5679,  759.6858],
        [ 546.0480,  546.0480,  631.2960,  774.1440],
        [ 545.4172,  504.0007,  635.5587,  707.5312],
        ...,
        [ 884.7911,  444.7369, 1152.0000,  576.8423],
        [ 169.9202,    0.0000, 1094.1935,  408.5325],
        [ 538.8574,  431.6147,  587.2413,  512.8074]], device='cuda:2')), 'objectness_logits': tensor([-1.0401e+00,  2.3026e+01, -6.0963e-01, -1.3907e+00, -9.9452e-01,
        -7.1747e-01,  5.9993e-01,  6.8645e-01, -1.6244e+00,  4.7804e+00,
         2.5989e-01,  3.1735e+00,  2.9422e+00, -1.2569e+00, -2.0751e+00,
        -2.0182e+00, -1.3092e+00, -2.1575e+00, -1.5228e+00, -2.1155e+00,
        -5.8615e-01, -1.9005e-01,  2.9899e+00, -1.0560e+00, -4.3818e-01,
         2.0276e+00, -1.3906e+00, -1.2305e+00, -2.0920e+00,  2.9114e-02,
        -1.9745e+00, -1.6553e+00,  5.7303e-01,  1.0733e+00, -2.0291e+00,
        -2.0993e+00, -5.6679e-02, -2.0245e+00,  3.3103e+00, -4.5764e-01,
        -1.4454e+00,  3.8392e+00, -2.8550e-01,  2.1589e+00,  4.1141e-01,
        -1.6825e+00, -5.3124e-01, -1.8556e+00, -2.1430e+00, -1.9298e+00,
        -1.2017e+00, -1.3227e+00, -1.8046e+00, -1.7964e+00,  6.3717e-01,
        -1.1825e+00,  1.8922e+00, -2.0499e+00, -1.7293e+00, -8.0852e-01,
        -8.5292e-01,  6.3102e+00, -2.0427e+00, -1.8039e+00, -9.2681e-01,
         3.1070e+00, -2.0545e+00,  9.0913e-01, -1.7639e+00, -1.5089e+00,
        -4.7437e-01, -1.6897e+00,  6.5278e-01, -1.5128e-01, -2.0411e-01,
        -1.6679e+00,  1.9712e+00,  3.2158e+00, -1.7782e+00,  8.3244e-01,
         5.3661e-01, -4.1337e-01, -9.4242e-01,  6.3455e-01,  9.1010e-01,
         3.7833e+00, -1.1699e-01, -3.4976e-01,  9.1477e-01,  4.4442e-01,
        -1.3283e+00, -1.7636e+00, -1.0258e-01,  1.3067e+00,  1.1422e+00,
        -8.2809e-01,  1.5780e+00, -1.8520e-01,  1.7811e+00, -6.7300e-01,
         8.5413e-01, -1.1528e+00,  8.5670e-01, -7.5256e-01, -8.8056e-02,
         4.7316e+00, -2.0049e-01,  1.7603e+00, -3.4209e-03, -9.9191e-01,
        -1.5686e+00, -1.6463e+00, -1.2052e+00, -1.6054e+00, -7.2428e-02,
         1.6776e+00, -8.2230e-01, -1.4833e+00,  2.9221e-01,  1.8229e+00,
        -5.1982e-02,  1.0937e+00, -8.6424e-01, -5.9086e-01, -7.8776e-01,
        -2.0225e+00, -1.1948e+00, -4.9805e-01, -1.4961e+00, -1.8606e+00,
        -1.5962e+00, -1.4521e+00, -1.3998e+00, -1.9875e+00,  3.7543e-01,
        -1.9473e+00,  3.6012e-01, -3.6315e-01,  1.4661e+00,  1.2596e+00,
         1.9241e+00, -8.4165e-01,  8.6233e-01, -1.8656e+00,  3.2660e+00,
        -9.2782e-01, -5.0401e-01,  1.2743e-01,  1.1938e+00, -6.3073e-01,
        -1.6764e+00, -1.7760e+00, -1.2217e+00,  5.6458e+00, -2.6529e-01,
        -3.0087e-01, -5.9043e-01, -1.1169e+00, -1.6639e+00, -1.9064e+00,
        -1.3566e+00,  2.0814e+00,  6.0613e-01, -1.9200e+00, -1.3152e+00,
         1.3482e-01,  1.4076e+00, -2.0262e+00,  4.6262e-02, -4.7990e-01,
        -1.9077e+00,  8.3502e-01, -8.7369e-01, -1.6844e+00,  1.5521e+00,
        -1.0804e+00,  3.6874e+00,  1.0426e+00, -2.5830e-01,  3.9801e-01,
        -1.9593e+00,  5.2867e-01,  2.5854e+00, -5.5414e-02,  4.4059e+00,
         5.4060e-01,  1.9258e+00,  7.1711e-02,  1.0775e+00, -6.3202e-01,
         2.5104e+00,  6.2757e-01, -1.5967e+00, -3.0848e-01, -2.9918e-01,
         5.4851e-01,  1.1121e+00,  1.7728e+00,  1.2568e+00,  1.2675e+00,
        -1.7552e+00,  1.5578e+00,  1.2735e-01,  1.4753e+00, -1.4242e+00,
        -1.0631e+00,  2.4767e-01, -1.6644e+00, -4.4523e-01,  9.0690e-01,
         1.8277e+00, -2.0451e+00,  1.9969e+00, -1.0837e+00, -1.2841e+00,
        -1.0418e+00,  8.7060e-01, -1.2726e+00,  3.4552e+00, -5.7055e-01,
         3.9264e+00, -1.4673e+00,  2.6444e+00, -1.0647e+00, -2.0130e+00,
        -6.2025e-01, -1.3117e+00, -8.1692e-01,  2.6160e+00,  5.2334e-01,
         1.6250e+00, -1.8909e+00, -2.6559e-01,  1.2421e+00,  1.4614e+00,
         1.3367e+00, -8.2130e-01, -9.0124e-01, -1.7836e-01, -1.1317e+00,
        -1.8953e+00,  6.1859e+00, -1.1101e+00, -1.1852e+00, -2.7826e-01,
        -1.4826e+00,  1.3044e+00,  4.1320e+00,  9.7084e-01,  7.5834e+00,
         6.2748e+00,  5.1638e-01, -8.7345e-01, -7.2149e-01,  2.8703e+00,
         4.2067e+00, -1.5888e+00,  5.3588e-01, -9.1236e-01,  2.7761e+00,
         8.9000e-01,  2.0939e+00,  3.2936e+00, -2.1172e+00,  3.3614e-01,
        -4.6910e-01, -4.6766e-01, -4.0356e-01, -1.5471e+00,  4.8538e+00,
        -1.2198e+00,  2.0923e-02,  3.6197e-01, -1.4290e+00,  2.4981e+00,
         1.4944e+00, -1.7972e+00, -1.2640e-01, -2.1224e+00,  7.7006e-01,
        -1.7954e+00,  1.5277e-01, -1.0734e+00, -1.4373e+00,  4.4371e-01,
         3.3058e+00, -9.4417e-01, -7.0858e-02,  1.8467e+00, -9.3861e-01,
        -8.0451e-01, -1.8685e+00,  3.2052e+00, -1.2118e+00,  5.7338e+00,
        -1.7324e+00,  1.0116e+00, -4.8484e-01, -6.4720e-01,  5.3587e-01,
         1.9186e+00,  2.9358e-01,  3.5545e-01, -1.0831e+00,  1.7034e-02,
         3.1728e+00,  2.7221e+00, -7.3869e-01, -2.0151e+00,  9.8525e-01,
        -1.7020e+00, -2.0237e+00,  2.6048e+00, -1.4517e+00, -8.0030e-01,
        -1.6141e+00, -9.6439e-01, -4.3329e-01, -1.5380e+00,  2.8654e+00,
        -1.3779e+00,  1.8062e+00, -1.1050e+00, -5.6969e-01, -9.6933e-01,
        -9.4374e-01,  1.2917e+00, -1.8507e+00,  5.4821e+00, -1.9494e+00,
         2.2656e+00, -1.2466e-01, -3.8680e-01,  6.7543e-01,  1.4431e+00,
        -1.6990e+00,  2.9060e+00,  2.1509e+00,  1.7118e+00,  1.5722e+00,
        -2.2539e-01, -1.4433e+00, -1.4932e+00,  1.0284e+00, -1.0810e+00,
        -1.6887e-01,  1.0602e-01, -2.1541e+00,  3.6655e+00, -6.2070e-01,
        -2.1235e+00, -7.1383e-01, -1.4674e+00,  1.5793e+00, -2.1309e+00,
        -1.6824e+00,  5.7155e+00,  3.7111e+00, -1.7582e+00, -1.1124e-01,
         8.9071e-01,  2.1186e+00,  5.4361e+00,  1.0954e-01, -1.4932e+00,
        -3.3916e-01,  4.1859e+00, -2.0339e+00,  9.8974e-01,  1.4227e+00,
        -4.3382e-01,  4.3477e-02,  1.4156e+00,  2.0921e+00, -1.8820e+00,
        -1.1048e+00, -1.4231e+00, -7.2797e-01,  1.3305e+00, -1.6126e+00,
        -1.7062e+00,  5.3465e+00,  5.0254e-01, -1.5912e+00,  7.4865e-01,
         1.8218e+00, -1.5542e+00, -1.4156e+00, -1.9996e+00, -8.4334e-01,
        -4.5091e-02, -3.4607e-01,  2.8002e+00, -7.3534e-01, -8.6205e-01,
        -1.4996e+00, -7.7747e-01, -1.9479e+00, -1.2796e-01,  1.0771e+00,
        -3.0456e-01, -2.1118e+00,  2.0142e-01,  2.8861e+00, -8.9261e-01,
        -2.1036e+00, -2.1542e+00, -5.9290e-01,  4.4337e+00, -1.1971e+00,
        -7.3348e-03, -1.9970e+00, -1.0304e+00, -1.9325e+00,  1.5289e+00,
        -1.7167e+00, -1.3881e+00, -1.8832e+00,  3.9207e+00, -1.3867e+00,
        -1.1066e+00,  7.2888e-01, -1.6329e+00, -3.7725e-01, -2.1147e+00,
         3.3968e-01,  1.6160e+00,  5.3305e+00,  1.8003e-01,  1.3143e+00,
        -1.3643e+00, -5.4362e-01, -1.8453e+00, -2.1377e+00,  9.8002e-01,
        -9.0580e-01, -1.9817e+00, -9.2091e-01, -1.7388e+00,  2.7081e+00,
        -9.3384e-01,  4.4205e-01, -2.1210e+00, -7.6912e-01, -1.6683e+00,
         5.4971e+00, -1.3024e+00,  3.2599e+00,  6.0408e-01,  4.2405e+00,
        -7.8378e-02, -1.9357e+00,  2.9568e-01,  3.7385e-01, -5.2775e-01,
        -1.8542e+00, -1.2443e+00, -1.9075e+00, -1.8027e-02,  4.7511e+00,
         5.9271e+00, -2.5854e-01, -1.5623e+00, -2.0033e+00, -9.3168e-01,
        -2.0682e-01, -1.5732e+00,  1.5964e+00, -6.6357e-01,  2.4796e+00,
        -1.6533e+00, -1.9385e+00, -1.8208e+00, -8.9069e-01, -1.7870e+00,
         8.1762e-01,  2.1453e+00,  4.5216e+00, -1.7311e+00, -1.4036e-01,
        -1.0842e+00,  1.3406e+00, -6.1383e-02, -6.3023e-01, -1.2967e+00,
        -1.8361e+00, -1.3661e+00, -1.6027e+00,  1.0278e+00, -1.5471e+00,
         5.7822e+00, -1.7858e+00, -4.0570e-01, -1.7309e+00, -1.4973e+00,
        -5.9765e-01,  3.8111e-01,  7.7938e-01, -1.2740e+00,  1.8732e+00,
         1.0913e+00,  2.8079e+00, -1.5157e+00,  6.0897e-01, -4.5183e-01,
        -1.4925e+00,  2.2798e+00, -9.5423e-01, -1.9701e+00, -1.1195e-01,
         1.8302e+00, -6.3314e-01], device='cuda:2'), 'gt_classes': tensor([ 7,  7,  7,  7,  7, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:2'), 'gt_boxes': Boxes(tensor([[546.0480, 546.0480, 631.2960, 774.1440],
        [546.0480, 546.0480, 631.2960, 774.1440],
        [546.0480, 546.0480, 631.2960, 774.1440],
        ...,
        [546.0480, 546.0480, 631.2960, 774.1440],
        [546.0480, 546.0480, 631.2960, 774.1440],
        [546.0480, 546.0480, 631.2960, 774.1440]], device='cuda:2'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 28185) is killed by signal: Terminated. 
{'proposal_boxes': Boxes(tensor([[   0.0000,  108.8853,  915.3800,  928.0000],
        [   0.0000,   97.3226,  600.3933,  928.0000],
        [ 154.6182,  149.7422, 1164.3322,  890.7565],
        ...,
        [   0.0000,   99.3615,  253.0629,  395.9217],
        [ 489.2940,  177.3461,  788.9688,  435.2607],
        [ 919.4275,  776.5814,  972.5338,  846.1527]], device='cuda:0')), 'objectness_logits': tensor([ 2.3026e+01,  5.3216e+00,  5.4313e-01,  2.7302e+00,  2.5013e+00,
        -9.0590e-02,  4.8982e+00,  1.1840e+00,  2.8568e+00, -5.2776e-01,
        -9.7450e-01,  1.0975e-01,  1.7358e+00,  4.1695e+00,  2.3724e+00,
         1.6619e+00, -7.3892e-01, -1.4533e+00,  2.1986e+00,  5.2483e+00,
         4.1087e+00,  2.3221e+00,  4.4886e+00, -2.7850e+00, -1.0973e+00,
         3.6507e+00, -3.4755e-01, -2.1596e+00, -2.7779e+00, -2.7375e+00,
        -3.3681e+00, -2.9370e+00, -3.2259e+00, -8.6930e-01, -2.1901e+00,
        -2.9405e+00, -2.8590e+00, -2.8891e+00, -2.8901e+00, -1.8446e+00,
        -1.7364e+00, -3.4704e+00, -3.5627e+00, -2.4501e+00, -3.1188e+00,
        -3.2011e+00, -2.7568e+00, -2.8601e+00, -2.7747e+00, -3.3192e+00,
        -2.0060e+00, -3.5102e+00, -3.2504e+00, -2.4193e+00, -3.3924e+00,
         2.2332e+00, -1.0214e+00, -1.8467e+00,  8.2373e-02, -2.6260e+00,
        -3.0596e+00, -2.4415e+00, -3.1841e+00, -1.2072e+00, -2.8966e+00,
        -1.1641e+00, -3.2872e+00, -3.0174e+00, -1.8388e+00, -3.5622e+00,
        -1.8028e+00, -9.4464e-01, -2.4742e+00, -1.8158e+00, -1.4407e+00,
        -3.1269e+00, -2.7022e+00, -3.4194e+00, -1.4391e+00, -2.4562e+00,
        -2.7494e+00, -1.0405e+00, -2.9468e+00, -3.0696e+00, -2.1220e+00,
        -3.0983e+00, -3.5715e+00, -3.2366e+00, -3.5239e+00, -3.0905e+00,
        -3.4657e+00, -1.2619e+00, -2.9139e+00, -1.8519e+00,  2.8049e+00,
        -3.5039e+00, -2.8879e+00, -2.0126e+00,  2.7948e+00, -1.8944e+00,
        -3.4469e+00, -2.5610e+00, -3.2692e+00, -2.7628e+00,  2.9454e+00,
        -2.4561e+00, -2.9406e+00, -1.6487e+00, -2.1854e+00, -3.1807e+00,
        -1.5526e+00, -2.1380e+00, -3.2093e+00, -2.4073e+00, -2.9936e+00,
        -9.0658e-01, -2.2328e+00, -3.4175e+00, -3.0304e+00, -2.9569e+00,
        -3.4060e+00, -2.2324e+00, -2.4979e+00, -2.9714e+00, -2.3544e+00,
        -2.3245e+00, -2.4292e+00, -3.4979e+00, -3.7879e-01, -2.0272e+00,
        -1.8928e+00, -1.4749e+00, -3.0814e+00, -2.9114e+00, -2.8366e+00,
        -3.4230e+00, -3.2037e+00, -1.9947e+00, -3.5703e+00, -2.5282e+00,
        -2.3205e+00, -2.9319e+00, -3.0692e+00, -9.5219e-01, -3.2282e+00,
        -1.9039e+00, -3.4869e+00, -1.5408e+00, -2.2164e+00, -1.3120e+00,
        -7.4475e-01, -2.4278e+00, -2.3463e+00, -3.2100e+00, -2.8275e+00,
        -1.9671e+00, -2.1522e+00, -3.3955e+00, -3.4666e+00, -3.2331e+00,
        -1.8781e+00, -2.6232e+00, -3.2169e+00, -1.6116e+00, -2.1379e+00,
        -2.2784e-01, -2.1957e+00,  2.1456e+00, -3.3287e+00, -2.7249e+00,
        -3.2646e+00,  5.6404e-01, -1.8072e+00, -3.5455e+00, -3.1893e+00,
        -1.4929e+00, -1.3515e+00, -2.2433e+00,  2.9391e+00, -1.8174e+00,
        -3.2715e+00,  5.3875e-01,  2.6170e+00, -2.9155e+00, -2.1625e+00,
        -3.1355e+00, -2.7800e+00, -3.0546e+00, -2.7694e+00, -8.1563e-01,
        -1.6147e+00, -1.1016e+00,  6.4822e-02, -1.8536e+00, -7.7696e-01,
        -1.3647e+00,  1.1624e+00, -2.7417e+00,  1.7608e+00, -2.9924e+00,
        -3.5607e+00, -1.3229e+00,  1.4910e-02, -3.3750e+00, -1.8185e+00,
        -2.3151e-01, -3.7919e-01, -3.2647e+00, -2.8627e+00, -3.5369e+00,
        -3.1245e+00, -3.5132e+00, -1.0472e+00, -1.9221e+00, -3.0886e+00,
        -1.2575e+00, -3.3556e+00, -3.1519e+00, -3.2463e+00, -3.3942e+00,
        -1.9143e+00, -2.9799e+00, -3.1524e+00, -3.3446e+00, -3.4329e+00,
        -2.4035e+00, -3.4691e+00, -6.7741e-01,  3.9365e-01,  4.0222e-01,
        -3.4196e+00, -9.6147e-01, -1.6754e+00, -3.1101e+00, -1.3081e+00,
        -2.5608e+00, -3.2932e+00, -2.5405e+00, -3.0664e+00,  3.3181e+00,
         3.1475e+00, -2.8184e+00, -3.2517e+00, -3.1812e+00, -2.1537e+00,
        -3.4487e+00, -2.8143e+00, -2.1747e+00, -3.4236e+00, -2.4612e+00,
        -4.8059e-01, -1.4150e-01, -2.8070e+00, -1.0637e+00,  1.6404e-01,
        -3.1537e+00, -2.1810e+00,  5.4343e-01, -2.9582e+00, -3.0072e+00,
        -2.9107e+00,  2.7357e+00, -3.4914e+00, -2.9093e+00, -2.1511e+00,
         1.8250e+00, -2.5127e+00, -3.4930e+00, -2.3238e+00, -6.6760e-02,
        -3.2761e+00, -2.7891e+00, -1.9321e+00, -1.5381e+00, -3.0282e+00,
        -1.2450e+00, -3.2363e+00, -5.4920e-01, -2.1120e+00, -3.4843e+00,
        -3.3579e+00, -3.5581e+00, -1.9516e+00,  1.0721e-01, -2.7953e+00,
        -3.1222e+00, -3.4729e+00, -3.0770e+00,  1.7336e+00, -9.8977e-01,
        -1.5594e-01, -3.0889e+00, -2.9894e+00, -3.2792e+00,  2.9622e+00,
        -3.2586e+00, -3.3390e+00, -3.0154e+00, -3.2929e+00, -1.6154e+00,
        -1.7532e+00, -2.5433e+00, -2.9476e+00, -2.0496e+00, -2.1285e+00,
         2.1332e+00, -2.3369e+00, -2.6466e+00, -1.8399e+00, -2.8029e+00,
        -3.4036e+00, -1.0079e+00,  6.8946e-03, -2.6337e+00, -1.8042e+00,
        -3.5250e+00, -2.2105e+00, -3.5251e+00, -3.2269e+00, -2.2693e+00,
        -1.7718e+00, -2.5935e+00,  2.2674e+00, -8.0945e-01, -3.2182e+00,
        -2.8853e+00, -2.7243e+00, -3.1773e+00, -2.3950e+00, -1.9965e+00,
        -7.0107e-01,  5.2379e-01,  3.2699e-01, -1.6395e+00,  1.0268e+00,
        -3.5772e+00, -3.3256e-01, -2.3272e+00, -2.7123e+00,  2.0149e-01,
        -3.5453e+00, -2.5109e+00, -3.5000e+00, -3.3728e+00, -3.2252e+00,
        -1.3758e+00,  1.7473e+00, -3.5629e+00, -2.5212e+00, -2.8367e+00,
        -3.5177e+00, -2.8235e+00,  3.7904e-01, -3.3929e+00, -1.9014e+00,
         2.3882e+00, -3.3178e-01,  7.3594e-01, -3.5094e+00, -3.3339e+00,
        -3.5516e+00, -1.8132e+00, -2.6224e+00, -3.5629e+00, -3.0012e+00,
        -2.9053e+00, -3.1092e+00, -2.2395e+00, -2.8492e+00,  9.1071e-01,
         4.1604e-01, -6.2983e-01, -3.3262e+00, -3.4182e+00, -8.6413e-01,
        -3.5211e+00, -2.6987e+00, -2.8371e+00, -3.2581e+00, -1.5455e+00,
        -2.8258e+00, -2.8743e+00,  1.2650e+00, -2.8521e+00, -3.1165e+00,
        -3.4672e+00, -3.2823e+00, -1.7847e+00, -2.4190e+00, -2.5886e+00,
        -2.3542e+00, -2.9664e+00, -2.3039e+00, -2.7033e+00, -2.8670e+00,
        -2.5049e+00, -2.9614e+00, -1.1382e+00, -2.5094e-01, -2.6381e+00,
        -2.6060e+00, -2.6309e+00, -2.7182e+00, -2.8475e+00,  1.3542e+00,
        -4.8095e-01, -3.4453e+00, -2.3614e+00, -2.6552e+00, -3.4504e+00,
        -2.5458e+00,  1.4551e+00, -2.8290e+00, -3.3901e+00,  1.4560e+00,
         1.4330e+00, -2.6371e+00, -3.4422e+00, -3.2690e+00, -3.5681e+00,
        -2.2695e+00, -2.5642e+00, -2.6457e+00, -1.9078e+00, -2.6542e+00,
        -2.4552e+00, -3.0844e+00, -3.4231e+00,  1.1215e+00, -2.7764e+00,
         4.8881e+00, -6.9761e-01, -2.9715e+00,  1.1811e+00, -2.6854e+00,
        -3.4661e+00,  9.9798e-01, -3.2887e+00, -3.0089e+00,  6.0091e-01,
        -1.1119e+00, -2.5619e+00, -2.5439e+00, -2.2951e+00, -9.5075e-01,
        -1.6554e+00, -3.4900e+00, -3.2267e+00, -2.6605e+00, -3.0132e+00,
        -7.6996e-01, -1.7240e+00,  1.3543e+00, -3.4894e+00, -3.3538e+00,
        -3.0247e+00, -3.4896e+00, -1.3893e+00,  2.1205e+00, -2.6248e+00,
        -2.1340e+00, -3.3539e+00, -2.4286e+00, -3.4097e+00, -2.9125e+00,
        -2.5162e+00, -1.3869e-01, -2.2190e+00, -1.7472e+00, -2.8429e+00,
        -3.1141e+00, -2.0201e+00, -3.5177e+00, -2.5488e+00, -2.6709e+00,
        -3.5700e+00, -1.5895e+00, -3.4120e+00,  4.6317e+00, -3.5167e+00,
        -2.7107e+00, -3.7882e-01, -3.2071e+00, -3.2889e+00,  2.2747e+00,
         9.3696e-01, -3.2416e+00, -1.0556e+00, -2.4843e+00, -4.7270e-01,
        -3.3083e+00, -3.3999e+00, -2.7471e+00, -3.0944e+00, -2.8983e+00,
        -3.1396e+00, -3.0958e+00, -2.7205e+00, -1.6118e+00, -3.0568e+00,
        -1.1221e+00, -3.4759e+00, -2.7479e+00, -1.6749e+00, -2.7030e+00,
        -8.6052e-01,  3.1014e+00, -3.1133e+00, -3.4673e+00, -2.9768e+00,
        -1.2427e+00, -3.2380e+00], device='cuda:0'), 'gt_classes': tensor([18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
        18, 18, 18, 18, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:0'), 'gt_boxes': Boxes(tensor([[  0.0000, 108.8853, 915.3800, 928.0000],
        [  0.0000, 108.8853, 915.3800, 928.0000],
        [  0.0000, 108.8853, 915.3800, 928.0000],
        ...,
        [  0.0000, 108.8853, 915.3800, 928.0000],
        [  0.0000, 108.8853, 915.3800, 928.0000],
        [  0.0000, 108.8853, 915.3800, 928.0000]], device='cuda:0'))}
ERROR [09/17 12:04:01 d2.engine.train_loop]: Exception during training:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!
[09/17 12:04:01 d2.engine.hooks]: Total training time: 0:00:11 (0:00:00 on hooks)
[09/17 12:04:01 d2.utils.events]:  iter: 0    lr: N/A  max_mem: 3854M
{'proposal_boxes': Boxes(tensor([[ 370.5740,  237.3333,  493.2100,  336.0000],
        [ 344.6470,  241.9162,  489.6586,  348.0331],
        [ 386.7228,  259.0740,  512.9188,  324.4109],
        ...,
        [1031.0142,  186.8900, 1205.4543,  297.2982],
        [ 191.6266,  245.5227,  257.9031,  391.8865],
        [ 989.6016,  280.0192, 1028.3889,  296.5539]], device='cuda:1')), 'objectness_logits': tensor([ 2.3026e+01,  1.8711e+00,  5.7601e-01,  3.3327e+00,  2.0732e+00,
         7.0998e+00,  1.4685e+00, -1.6344e+00,  3.5206e-01, -2.2407e+00,
         2.4458e+00, -4.2448e+00,  1.3494e+00,  8.7350e-01,  2.8498e+00,
        -1.0537e+00, -4.9586e-01,  1.4343e+00, -4.7620e-01,  5.7564e+00,
         1.5767e+00,  8.2066e-01,  4.9959e+00, -2.2682e+00, -5.5404e+00,
        -5.4177e+00, -1.8346e+00, -3.7210e+00, -4.6390e+00, -5.5283e+00,
        -5.5856e+00, -5.1358e+00, -5.6771e+00, -3.0775e+00,  1.4499e+00,
        -4.6235e+00, -5.7747e+00, -2.4585e+00, -3.1915e+00, -5.1432e+00,
        -5.5189e+00, -3.9535e+00, -1.1959e+00, -4.0813e+00, -4.3282e+00,
        -5.1559e+00, -4.5247e+00, -4.1403e+00, -3.1696e+00, -5.7985e+00,
         7.7157e-01, -5.3989e+00,  6.7371e-02, -5.6493e+00, -3.8399e+00,
         1.0971e+00, -3.3052e+00,  1.9479e+00, -1.0297e+00, -4.3496e+00,
        -4.4831e+00, -5.2000e+00, -5.4962e+00, -2.3167e+00, -3.7181e+00,
        -5.2377e+00, -3.1729e+00, -4.3676e+00, -3.2506e+00, -4.2319e-01,
        -2.5514e+00, -3.9248e+00, -3.9134e+00, -1.0790e+00, -4.9147e+00,
        -4.2569e+00, -5.1306e+00, -3.2387e+00, -4.7701e+00, -4.9620e+00,
        -7.8679e-01, -5.3757e+00, -7.0378e-01,  3.1401e+00, -3.5311e+00,
         3.7801e-01, -2.6102e+00,  1.2179e+00, -4.8426e+00, -3.4162e+00,
        -3.5249e+00, -3.9069e+00, -4.1344e+00, -5.8421e+00, -4.4402e+00,
        -2.6530e+00, -5.6471e+00, -4.0408e+00, -4.3560e+00, -5.5554e+00,
        -6.7507e-01,  4.4532e-01, -4.9182e+00, -3.8675e+00, -5.2791e+00,
        -2.5490e+00, -5.8454e+00, -5.0650e+00, -5.3909e+00, -2.3046e+00,
        -1.0612e+00, -5.3054e+00, -2.2242e+00, -4.5908e+00, -1.7847e+00,
        -5.4724e+00, -2.9380e+00, -4.0931e+00, -4.5892e+00, -1.4644e+00,
         3.2329e+00, -4.1699e+00, -5.1282e+00, -3.6577e+00,  4.7019e-01,
        -2.9687e+00, -5.2999e+00, -4.1582e+00, -9.1155e-01, -4.8258e+00,
        -5.0877e+00, -4.9231e+00, -5.3384e+00, -4.0301e+00, -5.5895e+00,
        -5.2217e+00, -4.8117e+00, -3.4237e+00, -1.9113e+00, -5.5084e+00,
        -3.5594e+00, -9.2783e-01, -5.8267e+00, -4.5466e-01, -4.7316e+00,
        -4.3275e+00, -4.2684e+00, -4.2803e+00, -5.5207e+00, -4.3360e+00,
        -2.9278e+00, -5.2179e+00, -5.7879e+00, -4.9007e+00, -5.8185e+00,
        -5.0792e+00, -5.4433e+00,  6.7502e-01, -4.1021e+00, -1.9217e+00,
        -5.6108e+00, -4.4545e+00, -1.3201e+00, -4.9265e+00, -3.1142e+00,
        -4.6526e+00, -2.2455e+00, -5.2908e+00, -5.1842e+00, -3.2152e+00,
        -1.0145e+00, -4.9237e+00, -1.8126e+00, -4.8104e+00, -3.7067e+00,
        -3.8913e+00, -7.3892e-01, -5.5036e+00, -4.3147e+00, -5.0355e+00,
        -5.7484e+00,  2.5685e-02, -5.1079e-01, -3.0492e+00, -3.9447e+00,
         1.4644e+00, -4.4682e+00, -3.6427e+00, -3.4440e+00, -5.0826e+00,
        -4.1311e+00, -4.1267e+00, -5.3425e+00, -3.8777e+00, -3.0797e+00,
         1.3037e+00, -1.3721e+00, -4.0644e+00, -5.4376e+00, -4.1949e+00,
        -4.4948e+00, -5.7626e+00, -2.4302e+00, -3.4641e+00, -4.3920e+00,
        -3.9026e+00, -5.1448e+00, -4.8714e+00, -5.6936e+00, -1.1125e+00,
        -3.5025e+00, -2.4735e+00, -1.6824e+00, -3.5066e+00, -4.7145e+00,
         1.3534e+00, -5.6144e+00,  1.0026e+00, -2.9763e+00, -5.4292e+00,
        -2.0606e+00, -2.4587e+00, -4.4917e+00, -5.6565e+00, -2.6655e+00,
        -4.7914e+00, -3.0820e+00,  3.7058e+00, -5.2217e+00, -4.5155e+00,
        -3.2800e+00, -4.0707e+00,  1.9368e+00, -7.0147e-01,  3.4158e+00,
        -1.8227e+00, -4.4615e+00, -5.7227e+00, -5.7455e+00, -4.2755e+00,
        -5.4463e+00, -5.5614e+00,  7.8817e-01,  2.9770e-01, -2.4419e+00,
        -5.8053e+00, -9.7738e-01, -5.5612e+00, -2.0257e+00, -4.8699e+00,
        -5.5344e+00, -5.5185e+00, -5.2090e+00, -4.9026e+00, -1.3253e-01,
        -4.0923e+00, -4.2763e+00, -5.3325e+00, -4.7127e+00, -5.7287e+00,
        -5.7289e+00, -3.2790e+00, -3.1559e+00, -5.6870e+00, -3.8396e+00,
        -5.0586e+00, -3.0629e+00,  5.1092e-01, -3.3635e+00, -3.6285e+00,
        -5.0089e+00, -5.5854e+00, -5.3821e+00, -5.7127e+00, -3.3098e+00,
        -4.9555e+00, -4.6644e+00, -5.3337e+00, -5.1665e+00, -6.7372e-01,
        -4.2323e+00,  1.9537e+00, -3.7306e+00, -5.4379e+00, -5.1167e+00,
        -3.0527e+00, -5.8641e+00, -3.3204e+00, -1.4434e+00, -2.8701e+00,
        -3.8017e+00, -4.4354e+00, -2.1345e+00, -5.8568e+00, -5.8731e+00,
        -1.5116e+00, -5.6824e+00, -4.1070e+00, -3.0855e+00,  1.0992e+00,
        -5.3216e+00, -4.9097e+00, -3.1937e+00, -5.0492e+00, -1.1781e+00,
        -4.3001e+00, -5.4468e+00, -1.4988e+00,  3.0659e+00, -1.8872e+00,
        -5.6514e+00, -5.6550e+00, -3.9043e+00, -1.5307e+00, -4.3704e+00,
         3.0185e+00, -5.7871e+00, -4.2234e+00, -5.3596e+00,  6.4253e-01,
        -4.8867e+00, -4.3381e+00, -2.2223e+00, -5.5211e+00, -1.4164e+00,
        -4.9259e+00, -2.3761e+00, -5.2256e+00, -7.3997e-01, -4.8462e+00,
         1.0230e-02,  5.6388e-01, -5.2625e+00, -4.7047e+00, -4.7284e+00,
        -3.7921e+00,  1.8206e+00, -5.3802e+00, -6.9912e-01, -5.4909e+00,
        -5.1441e+00, -4.3420e+00, -3.8373e+00, -3.6267e+00, -5.3056e+00,
        -3.3305e+00, -5.3783e+00, -2.1198e+00, -4.4835e+00, -5.2278e+00,
         1.7910e-01, -4.9982e+00, -5.2244e+00, -4.6178e+00, -5.2035e+00,
        -5.5055e+00, -1.7469e+00, -4.8911e+00, -5.0721e+00, -4.7482e+00,
        -2.1363e+00,  2.3109e-01, -4.4819e+00,  1.1132e+00, -3.2912e+00,
        -3.8913e+00, -5.1094e+00, -4.2892e+00, -5.8658e+00, -5.0708e+00,
        -5.8735e+00, -2.8199e+00, -4.8228e+00, -4.3946e+00, -7.2048e-01,
        -2.6290e+00,  1.2835e+00, -3.2802e+00, -4.7341e+00, -5.7149e+00,
        -4.8739e+00, -3.5234e+00, -4.8939e+00, -2.4501e+00, -5.0377e+00,
        -4.2022e+00, -4.6414e+00,  4.3691e-02, -2.1340e+00,  8.0816e-01,
        -5.3502e+00, -4.4995e+00, -4.4980e+00, -5.3871e+00,  1.1213e+00,
         1.0424e+00, -3.8514e+00, -1.8824e+00, -5.8219e+00, -2.1655e+00,
        -3.8370e+00,  8.0024e-01, -3.2644e+00, -4.0528e+00, -4.5413e+00,
        -1.2404e+00, -4.6209e+00, -4.4341e+00, -4.4229e+00, -5.0299e+00,
        -3.9973e+00, -4.3454e+00, -3.9319e+00, -5.5530e+00, -4.8684e+00,
         2.6294e+00, -1.4399e+00, -4.6858e+00, -5.0097e+00, -3.8848e+00,
        -5.1187e+00, -5.5945e+00, -8.5653e-01, -5.2453e+00, -2.4221e+00,
        -2.4058e+00, -3.9685e+00,  5.4973e-01, -1.6320e+00, -5.6912e+00,
        -4.1475e+00, -2.0300e+00, -2.2777e+00, -2.6872e+00, -4.4624e+00,
        -3.0776e+00, -1.6553e+00, -3.8962e+00, -2.9093e+00,  2.8771e+00,
        -5.6514e-01,  6.7562e-01, -1.8422e+00, -1.7679e+00, -3.5755e+00,
        -4.1972e+00, -5.0901e+00, -1.8225e+00, -4.7586e+00, -5.6023e+00,
        -4.2057e+00, -3.2714e+00, -5.1171e+00, -5.0462e+00,  2.7298e+00,
        -2.1146e-02, -4.8847e+00, -5.1770e+00, -2.7509e+00, -4.3497e+00,
        -3.2220e+00, -4.7690e+00, -4.9646e+00, -5.4334e+00, -5.2284e+00,
        -3.8757e+00, -3.0517e+00, -5.6199e+00,  6.3381e-01, -4.2302e+00,
        -1.4759e+00, -5.4353e+00, -4.2964e+00, -5.0083e+00, -5.1438e+00,
         1.2406e+00,  3.0371e-01, -5.6239e+00, -5.4613e+00, -5.1238e+00,
        -4.9585e+00, -3.2432e+00, -4.6850e+00, -4.8925e+00,  3.9297e-01,
        -2.0875e+00, -4.4729e+00, -3.0165e+00, -5.4533e+00,  2.6509e-01,
        -1.5718e+00, -3.5905e+00, -2.2359e+00,  6.5955e-01, -2.7982e+00,
        -2.5276e+00, -4.4281e+00, -2.9499e+00, -2.5673e+00, -3.7620e+00,
        -5.7084e+00, -2.4330e+00, -3.0786e+00, -3.0309e+00, -3.6687e+00,
        -2.3920e+00, -5.3465e+00, -3.7031e+00, -2.6653e+00, -5.5475e+00,
        -4.5406e+00, -5.7951e+00], device='cuda:1'), 'gt_classes': tensor([ 2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
         2,  2,  2,  2,  2, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:1'), 'gt_boxes': Boxes(tensor([[370.5740, 237.3333, 493.2100, 336.0000],
        [370.5740, 237.3333, 493.2100, 336.0000],
        [370.5740, 237.3333, 493.2100, 336.0000],
        ...,
        [370.5740, 237.3333, 493.2100, 336.0000],
        [370.5740, 237.3333, 493.2100, 336.0000],
        [370.5740, 237.3333, 493.2100, 336.0000]], device='cuda:1'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 28203) is killed by signal: Terminated. 
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Traceback (most recent call last):
  File "main.py", line 38, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 67, in launch
    mp.spawn(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 230, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 188, in start_processes
    while not context.join():
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 150, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 2 terminated with the following error:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/setuptools/_distutils/version.py
[09/17 12:04:10 detectron2]: Rank of current process: 0. World size: 4
[09/17 12:04:10 detectron2]: Full config saved to checkpoints/voc/1726571009/fsod1/2shot/seed1/config.yaml
[09/17 12:04:11 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
[09/17 12:04:12 fvcore.common.checkpoint]: Reading a file from 'torchvision'
[09/17 12:04:18 detectron2]: Loss: 0.0002
[09/17 12:04:18 detectron2]: [CLS] Use dropout: p = 0.8
[09/17 12:04:18 d2.data.build]: Removed 0 images with no usable annotations. 40 images left.
[09/17 12:04:18 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 12:04:18 d2.data.build]: Using training sampler TrainingSampler
[09/17 12:04:19 d2.data.common]: Serializing 40 elements to byte tensors and concatenating them all ...
[09/17 12:04:19 d2.data.common]: Serialized dataset takes 0.01 MiB
[09/17 12:04:19 fvcore.common.checkpoint]: [Checkpointer] Loading from dataset/check/voc/1726356812/base1/model_final-fsod.pth ...
WARNING [09/17 12:04:19 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
roi_heads.box_predictor.fc.weight
roi_heads.box_predictor.fsup
[09/17 12:04:19 d2.engine.train_loop]: Starting training from iteration 0
{'proposal_boxes': Boxes(tensor([[352.4180, 166.1501, 754.1380, 304.9129],
        [293.7899, 190.4806, 654.5344, 303.3206],
        [278.4806, 165.1443, 714.5214, 283.7753],
        ...,
        [595.3243, 198.9821, 643.6053, 222.8380],
        [658.6829,  58.0426, 779.4215, 203.0825],
        [523.8936,   0.0000, 856.3780,  53.0170]], device='cuda:1')), 'objectness_logits': tensor([ 2.3026e+01, -6.0386e-01,  1.8711e+00,  5.2606e+00, -1.5962e-01,
         4.9399e-01, -1.8490e+00,  8.7655e-01, -2.7668e+00,  5.8032e+00,
         4.9949e+00,  3.4429e+00, -1.2328e+00, -1.0614e+00,  6.2779e+00,
         1.0161e+00, -6.1909e-03,  1.2769e+00, -6.2811e-01,  3.5631e+00,
         2.3609e+00, -1.1916e-01, -5.8452e+00, -5.6548e+00, -5.1811e+00,
        -6.7227e-01, -4.5634e+00, -3.5035e+00, -4.8075e+00, -3.7122e+00,
        -5.7273e+00, -5.9166e+00, -5.8309e+00, -6.4984e+00, -3.5150e+00,
        -1.1790e+00, -4.8338e+00, -4.9997e+00, -4.9719e+00, -5.6003e+00,
        -4.2881e+00, -6.4906e+00,  9.1137e-01, -6.4207e+00, -6.4841e+00,
        -5.9763e+00, -6.1771e+00, -5.8369e+00, -4.2163e+00, -5.0180e+00,
        -5.4031e+00, -6.2467e+00, -5.1781e+00, -5.9737e+00, -6.5410e+00,
        -5.6831e+00, -3.9512e+00, -5.8609e+00, -6.0937e+00, -5.3491e+00,
        -5.5673e+00, -4.1997e+00, -5.9205e+00, -3.3957e+00, -2.7140e+00,
        -6.5706e+00, -6.2511e+00, -5.9360e+00, -5.3128e+00, -4.1057e+00,
        -6.0036e+00, -6.1558e+00, -4.7539e+00, -5.2285e+00,  5.1400e-01,
        -4.7285e+00,  2.1401e+00, -3.3338e+00, -6.4375e+00, -5.5449e+00,
        -1.7965e+00, -1.5300e+00, -6.3431e+00, -6.3526e+00, -5.6320e+00,
        -4.6756e+00, -6.4776e+00, -4.5742e+00, -5.8588e+00, -2.8323e+00,
        -6.5694e+00, -4.7054e+00, -5.6023e+00, -3.8860e+00, -6.4141e+00,
        -5.8551e+00, -6.5778e+00, -6.3682e+00, -4.3766e+00, -5.9850e+00,
        -6.3680e+00, -4.8889e+00, -2.7997e+00, -1.9375e+00, -5.4164e+00,
        -6.5293e+00, -6.4143e+00, -5.0553e+00, -6.4212e+00, -5.2815e+00,
        -5.3481e+00, -4.8604e+00, -2.5376e+00, -4.8724e+00, -6.2829e+00,
        -6.1241e+00, -5.7254e+00, -5.4660e+00, -6.5595e+00, -6.0869e+00,
        -6.0681e+00, -5.8363e+00, -5.4373e+00, -3.1030e+00, -3.2804e+00,
        -3.3396e+00, -5.5265e+00, -5.3392e+00, -6.2869e+00, -1.7390e+00,
        -4.9221e+00, -6.1516e+00, -6.0051e+00, -5.0183e+00, -6.1729e+00,
        -2.2960e+00, -5.8673e+00, -5.2270e+00, -4.4768e+00, -4.9925e+00,
        -5.0068e+00, -6.1247e+00, -3.8538e+00, -3.9864e+00, -5.0408e+00,
        -6.4921e+00, -4.9063e+00, -6.4603e+00, -4.6356e+00, -4.2273e+00,
        -4.4840e+00, -6.4813e+00, -6.3432e+00, -5.8243e+00, -6.5050e+00,
        -3.2050e+00, -5.3616e+00, -5.2693e+00, -6.5305e+00, -1.2638e+00,
        -4.5666e+00, -5.7999e+00, -2.7233e+00, -4.0925e+00, -5.9579e+00,
        -6.4740e+00, -4.5948e+00, -4.8215e+00, -6.4397e+00, -5.6835e+00,
        -6.5405e+00, -5.0035e+00, -6.2681e+00,  1.0373e+00, -4.6605e+00,
        -6.2286e+00, -5.0629e+00, -4.9716e+00, -5.5430e+00, -5.5562e+00,
        -5.5707e+00, -5.8833e+00, -6.5580e+00, -4.6962e+00, -5.8687e+00,
        -5.6251e+00, -5.9335e+00, -5.1965e+00, -6.3673e+00, -3.9921e+00,
        -5.8740e+00, -4.8691e+00, -5.2998e+00, -6.4143e+00, -4.6442e+00,
        -9.6187e-01, -4.5760e+00, -5.8189e+00, -6.5175e+00, -5.9613e+00,
        -5.2586e+00, -6.4932e+00, -6.3932e+00, -2.9362e+00, -1.0844e+00,
        -5.2394e+00, -5.8939e+00, -5.7846e+00, -6.4861e+00, -3.7573e+00,
        -6.2688e+00, -5.8475e+00, -5.9247e+00, -6.5311e+00, -5.1547e+00,
        -5.0164e+00, -4.7001e+00, -4.2666e+00, -5.1048e+00, -6.3167e+00,
        -5.2338e+00, -5.6103e+00, -2.8030e+00, -5.5102e+00, -6.4748e+00,
        -6.3161e+00, -4.1068e+00, -5.4044e+00, -4.3329e+00, -4.9417e+00,
        -6.5653e+00, -2.7407e+00, -6.0242e+00, -4.8915e+00, -3.6715e+00,
        -6.1788e+00, -3.4370e+00, -4.7422e+00, -5.6567e+00, -5.0495e+00,
        -6.4199e+00, -6.5729e+00, -6.1803e+00, -6.2097e+00, -3.3723e+00,
        -6.0591e+00, -6.2553e+00, -6.2532e+00, -6.5652e+00, -5.9986e+00,
        -5.1358e+00, -4.0061e+00, -4.4731e+00, -6.4668e+00, -3.5998e+00,
        -5.9091e+00, -4.0276e+00, -6.1411e+00, -6.3042e+00, -2.0625e+00,
        -5.4715e+00, -6.0327e+00, -4.7827e+00, -5.9042e+00, -6.0109e+00,
        -4.1302e+00, -6.3721e+00, -6.2416e+00, -4.8615e+00, -6.5227e+00,
        -4.0006e+00,  2.8963e+00, -6.0654e+00, -6.3861e+00, -6.1553e+00,
        -5.9432e+00, -5.2391e+00, -5.4841e+00, -6.1604e+00, -4.1611e+00,
        -5.6628e+00, -6.1265e+00, -3.6357e+00, -5.6567e+00, -5.3514e+00,
        -3.2906e+00, -6.5079e+00, -4.5578e+00, -6.3316e+00, -5.6426e+00,
        -6.4990e+00, -6.0001e+00, -3.4313e+00, -4.6826e+00, -6.4038e+00,
        -6.0374e+00, -6.4682e+00, -5.3327e+00, -2.3373e+00, -6.4365e+00,
        -4.0926e+00, -5.6612e+00, -6.0844e+00, -3.8512e+00, -6.4293e+00,
        -4.7678e+00, -4.6797e+00, -5.7675e+00, -6.4966e+00, -6.3346e+00,
        -5.8615e+00, -5.7188e+00, -6.3642e+00, -6.5386e+00, -5.3944e+00,
        -5.0091e+00, -5.2106e+00, -5.9406e+00, -6.5470e+00, -6.1635e+00,
        -5.0338e+00, -5.3262e+00, -6.4335e+00, -7.7046e-01, -3.3097e+00,
        -6.3996e+00, -5.8262e+00, -6.2514e+00, -6.0185e+00, -4.4227e+00,
        -4.2753e+00, -4.4645e+00, -5.4503e+00, -5.8802e+00, -4.0712e+00,
        -4.9663e+00, -5.6213e+00, -5.8877e+00, -6.2946e+00, -5.3707e+00,
        -3.6044e+00, -4.7329e+00, -4.0784e+00, -4.7156e+00, -5.5089e+00,
        -6.1681e+00, -6.4108e+00, -4.1570e+00, -5.6329e+00, -6.3670e+00,
        -2.3033e+00, -6.5639e+00, -6.2284e+00,  1.0965e+00, -3.2272e+00,
        -5.6677e+00, -5.8628e+00, -5.2377e+00, -6.3571e+00, -5.0490e+00,
        -6.1363e+00, -5.9274e+00, -5.1852e+00, -5.0308e+00, -4.8014e+00,
        -4.6778e+00, -6.4047e+00, -6.5448e+00, -6.2673e+00, -2.1181e+00,
        -2.7619e+00, -6.3420e+00, -4.0844e+00, -5.9257e+00, -4.7456e+00,
        -5.2202e+00, -5.4590e+00, -6.4811e+00, -3.8691e+00, -5.0972e+00,
        -3.3140e+00, -4.9954e+00, -2.7182e+00, -5.8761e+00, -6.4603e+00,
        -5.9757e+00, -6.0960e+00, -6.4515e+00, -6.4475e+00, -4.7113e+00,
        -6.5362e+00, -3.5956e+00, -4.9168e+00, -4.1109e+00, -5.6359e+00,
        -2.2477e+00, -6.5623e+00, -6.2405e+00, -4.4375e+00, -4.8406e+00,
        -5.6592e+00, -5.5962e+00, -3.2886e+00, -6.3144e+00, -6.4286e+00,
        -5.3071e+00, -4.0430e+00, -5.7621e+00, -6.5230e+00, -5.1430e+00,
        -4.7450e+00, -6.1300e+00, -6.0051e+00, -5.4570e+00, -5.0321e+00,
        -6.4042e+00, -6.3666e+00, -5.8174e+00, -1.3067e+00, -6.4567e+00,
        -6.0960e+00, -5.5637e+00, -6.4026e+00, -5.2295e+00, -5.1884e+00,
        -1.9195e+00, -5.6937e+00, -6.0823e+00, -5.3037e+00, -4.6752e+00,
        -5.7626e+00, -5.9097e+00, -5.6216e+00, -1.9217e+00, -6.5655e+00,
        -5.4456e+00, -5.9908e+00, -6.0016e+00, -4.1800e+00, -5.9621e+00,
        -4.0856e+00, -1.1691e+00, -4.9913e+00, -2.1637e+00, -6.3683e+00,
        -3.1213e+00, -5.8222e+00, -4.9885e+00, -4.3332e+00, -6.5763e+00,
        -6.0542e+00, -5.5802e+00, -4.1620e+00, -6.0468e+00, -5.6639e+00,
        -5.4310e+00, -2.2194e+00, -5.3048e+00, -6.2300e+00, -4.4703e+00,
        -5.8139e+00, -5.8834e+00, -6.3164e+00, -6.4797e+00, -5.9531e+00,
        -5.6182e+00, -4.4585e+00, -5.2656e+00, -6.4271e+00, -4.9959e+00,
        -5.5547e+00, -6.0603e+00, -5.9248e+00, -3.3720e+00, -4.4434e+00,
        -6.1408e+00, -2.5398e+00, -5.2559e+00, -6.5517e+00, -4.5883e+00,
        -5.8764e+00, -4.6088e+00, -3.4635e+00, -6.0597e+00, -5.0417e+00,
        -3.3923e+00, -6.0909e+00, -5.6423e+00, -6.5628e+00, -4.9049e+00,
        -2.6218e+00, -6.4161e+00, -6.3555e+00, -6.4421e+00, -5.9610e+00,
         2.8944e+00, -5.7839e+00, -1.5762e+00, -5.3991e+00, -6.4852e+00,
        -5.2414e+00, -5.4959e+00, -6.5758e+00, -5.7158e+00,  1.5604e+00,
        -6.5549e+00, -5.5798e+00, -6.0245e+00, -5.9773e+00, -6.0909e+00,
        -4.3392e+00, -4.5509e+00], device='cuda:1'), 'gt_classes': tensor([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
         0,  0,  0,  0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:1'), 'gt_boxes': Boxes(tensor([[352.4180, 166.1501, 754.1380, 304.9129],
        [352.4180, 166.1501, 754.1380, 304.9129],
        [352.4180, 166.1501, 754.1380, 304.9129],
        ...,
        [352.4180, 166.1501, 754.1380, 304.9129],
        [352.4180, 166.1501, 754.1380, 304.9129],
        [352.4180, 166.1501, 754.1380, 304.9129]], device='cuda:1'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 31395) is killed by signal: Terminated. 
{'proposal_boxes': Boxes(tensor([[ 299.8568,  540.1415,  362.0182,  647.2046],
        [ 303.2486,  523.9716,  366.1371,  624.6130],
        [ 281.0812,  484.6631,  379.6460,  687.6141],
        ...,
        [1084.2798,  456.5106, 1127.5608,  537.7754],
        [1300.9980,  539.5607, 1323.9951,  602.2304],
        [   0.0000,   43.5185,  682.3977,  739.7192]], device='cuda:0')), 'objectness_logits': tensor([-1.5986e-01, -2.0269e-01,  3.1314e+00,  4.7234e+00, -6.2758e-02,
         3.1045e+00,  2.2309e+00, -2.7030e+00,  8.8960e+00,  2.3026e+01,
        -2.9491e-01, -1.0002e+00,  2.5644e+00,  4.3251e-01,  1.1631e+00,
        -2.9111e+00, -3.3178e+00, -2.9420e+00, -1.8843e+00, -2.5553e+00,
        -1.4871e+00, -2.2829e+00, -3.4517e+00, -2.9460e+00, -2.8436e+00,
        -2.3633e+00, -2.9523e+00, -2.3973e+00, -4.6174e-01, -1.2530e+00,
         8.7789e-01,  2.8477e-02, -9.6514e-02, -2.7858e+00,  5.0874e-01,
        -2.9631e+00, -1.5247e+00, -1.2823e+00, -2.7728e+00, -3.0189e+00,
         6.6972e-01,  4.7618e-01, -3.4534e+00, -3.5232e+00, -3.1084e+00,
        -2.9262e+00, -3.3329e+00, -2.8989e+00, -2.5498e+00, -1.0516e+00,
        -2.7335e+00, -3.5986e-01, -3.0473e+00, -3.2640e+00, -2.6305e+00,
        -3.0609e+00, -6.8783e-01, -2.6867e+00,  7.6491e-01, -2.7681e+00,
        -1.7243e+00, -3.4555e+00, -8.4753e-01, -2.9994e+00, -1.7938e+00,
        -3.1469e+00, -2.2935e+00, -2.0880e+00,  4.1804e+00, -3.5437e+00,
        -3.0995e-01, -1.8782e+00, -2.5636e+00, -3.4708e+00, -1.3481e+00,
        -2.0418e+00, -3.2178e+00, -1.4588e+00, -2.9488e+00, -3.3805e+00,
        -2.0631e+00,  2.2926e+00, -2.7430e+00, -2.7366e+00, -3.3693e+00,
        -6.9522e-01, -3.5013e+00, -2.8205e+00, -2.9456e+00, -2.9458e+00,
        -3.2315e+00, -1.1729e+00, -1.3311e+00, -2.0733e+00, -3.1334e+00,
        -2.3290e+00, -1.2489e+00,  1.7505e-01, -1.2383e+00, -2.3683e+00,
        -3.3338e+00, -6.0233e-01, -3.3707e+00, -1.2106e+00, -9.8855e-01,
        -3.3250e+00, -3.2710e+00, -1.6134e+00,  3.0819e-01, -3.5017e-01,
        -7.9335e-01, -2.6284e+00, -2.2475e+00, -3.4664e+00, -3.1458e+00,
        -3.1472e+00, -3.2500e+00, -3.2823e+00,  4.3213e+00, -2.8981e+00,
        -2.3113e+00,  1.7959e+00, -3.3471e+00, -2.9227e+00, -1.7577e+00,
        -3.1235e+00, -3.5195e+00,  1.1056e-01, -5.6927e-01, -3.3149e+00,
        -1.3610e+00,  4.0432e-01, -2.7103e+00, -1.1781e+00, -3.3325e+00,
        -2.9590e+00, -3.2275e+00, -2.4496e+00, -2.4172e+00, -3.3397e+00,
        -2.1883e+00, -1.6260e+00,  9.6187e-01,  5.5881e-01, -3.1368e+00,
        -1.5459e+00, -3.0386e+00, -2.8713e+00, -2.0970e+00, -2.9622e+00,
        -1.6362e+00, -3.0923e+00, -6.9217e-02, -3.4813e+00, -1.7655e+00,
        -2.3131e+00, -3.0838e+00, -3.4341e+00, -1.5817e+00, -3.7258e-01,
        -3.4091e+00, -3.1891e+00, -9.7645e-01, -3.2951e+00, -3.2820e+00,
        -3.4971e+00, -3.8051e-01, -1.1937e+00, -3.1264e+00, -7.8436e-01,
         5.2363e+00,  1.8847e-01, -2.9799e+00, -2.6393e+00, -3.2786e+00,
        -2.8080e+00, -3.2224e+00, -2.7696e+00, -1.0442e+00, -3.9989e-01,
        -2.7709e+00,  1.1926e+00,  1.0689e+00, -3.2485e+00, -1.8474e+00,
        -3.0166e+00, -2.7219e+00, -3.2088e+00,  1.5506e+00, -3.4856e+00,
        -1.4898e+00, -1.0969e+00, -6.3094e-01, -3.4270e+00, -2.3065e+00,
        -1.8195e+00, -3.5299e+00, -1.9119e+00, -9.5026e-01, -2.4903e+00,
         5.0106e-01, -2.6045e+00, -2.6880e+00, -2.0865e+00, -1.4006e+00,
        -2.9804e+00, -1.3036e+00,  7.7933e-02, -3.5103e+00, -3.0042e+00,
        -3.2296e+00, -2.4509e+00, -2.0272e+00, -6.1093e-01,  1.0680e+00,
        -2.9542e+00, -2.5294e+00, -3.1878e+00, -2.6215e+00, -2.0759e+00,
        -3.2126e+00,  2.3446e+00, -2.5093e+00, -3.3425e+00, -1.2940e+00,
        -1.1342e+00, -1.7295e+00, -3.4419e+00, -3.1292e+00, -2.8639e+00,
         5.3043e+00, -5.7014e-02, -1.5313e+00, -2.6630e+00, -3.5242e+00,
        -7.3603e-01, -2.8269e+00,  2.4760e-01, -2.4522e+00, -2.6725e+00,
        -5.4421e-01, -2.9435e+00, -2.7464e+00, -2.3408e+00,  3.7856e+00,
        -2.1497e+00, -3.1665e+00, -1.8183e+00, -2.4320e+00, -1.9877e+00,
         2.9635e-01, -3.1693e+00, -2.7874e+00,  1.8555e+00, -1.6105e+00,
        -3.4560e+00,  1.8935e+00, -2.7065e+00, -3.2506e+00, -2.8742e+00,
        -2.7968e+00, -2.5315e+00,  2.3689e-01, -3.6944e-01, -3.1660e+00,
        -2.4848e+00, -3.5349e+00, -1.1694e+00, -1.0355e+00, -2.6372e+00,
         6.3847e-01, -2.8233e+00, -3.3983e+00, -2.7641e+00, -2.7811e-01,
        -2.7168e+00, -2.9172e+00, -3.1609e+00,  8.2098e-01, -4.0756e-01,
         2.4883e+00, -6.5950e-01, -6.5617e-01, -3.0184e+00, -3.5292e+00,
        -2.8651e+00, -1.4368e+00, -1.6972e+00,  4.7530e-01, -3.3614e+00,
         1.9726e+00,  2.1859e+00, -2.1365e+00,  4.5896e+00,  2.0151e-03,
        -1.2751e+00, -2.9191e+00, -1.1502e+00, -2.0019e+00, -1.1008e+00,
        -2.1075e+00, -1.1415e+00, -2.2814e+00, -2.1818e+00, -1.8073e+00,
        -3.3630e+00, -1.6332e+00, -2.4266e+00, -4.4542e-01,  6.7108e-01,
        -1.2533e+00, -3.0781e+00, -2.4538e+00, -3.1210e+00, -1.9893e+00,
         7.6307e-01, -3.5158e+00, -2.8670e+00, -3.6614e-01, -1.0401e+00,
        -2.0345e+00, -2.6475e+00, -2.2780e+00, -3.2609e+00, -1.7856e+00,
         5.0907e+00, -3.3054e+00,  7.1986e-01, -2.3962e+00, -2.5134e+00,
         4.3318e+00, -2.5434e+00, -2.6361e+00, -1.9176e+00, -2.8139e+00,
        -1.7542e+00, -2.9020e+00, -1.0424e+00, -3.4921e+00, -1.0771e+00,
        -2.2628e+00, -3.0041e+00,  1.6751e+00, -2.3652e+00, -3.3133e+00,
         2.6840e+00, -2.7881e+00, -2.1916e+00, -1.6607e+00, -1.6347e+00,
        -2.9911e+00, -1.2279e+00, -3.5024e+00, -2.3521e+00, -1.9122e+00,
         5.1958e-01, -1.9065e+00, -2.8492e+00, -1.1374e+00, -3.3942e+00,
        -7.5954e-01, -1.6519e+00, -7.4992e-01, -3.4034e+00, -3.1207e+00,
        -1.8594e+00, -3.3731e+00, -2.7540e+00, -1.9854e+00, -1.6175e-01,
        -1.2278e+00,  9.1265e-02, -3.0991e+00, -2.0791e+00, -3.2969e+00,
        -3.2531e+00, -3.5470e+00, -3.1033e+00, -3.5154e+00, -8.3789e-01,
        -4.4341e-01, -3.4882e+00, -3.0878e+00, -2.7213e+00, -2.7411e+00,
        -2.1647e+00, -1.5792e+00, -1.1673e+00, -2.8956e+00, -3.3368e+00,
        -6.3324e-01, -2.0248e+00, -7.1328e-01, -1.3534e-01,  3.0141e+00,
        -2.9683e+00,  5.4307e-01, -3.0650e+00, -1.9827e+00, -1.7983e+00,
        -2.9570e+00, -1.6926e+00, -2.1223e+00, -7.5497e-01, -1.6568e+00,
        -1.4149e+00,  2.8127e+00, -1.3269e+00, -2.8523e+00, -2.4839e+00,
        -5.3789e-01, -2.7279e+00,  1.0219e+00,  1.0272e+00, -3.2220e+00,
        -1.3017e+00,  1.2193e+00, -2.5368e+00, -3.0689e+00, -3.4398e+00,
        -2.6113e+00, -6.7853e-01, -3.2536e+00, -2.1659e+00, -2.8299e+00,
        -3.2010e+00, -2.1993e+00,  2.4345e+00, -7.9940e-01, -7.6681e-01,
        -2.4625e+00, -3.2399e+00, -2.6655e+00, -2.8357e+00, -1.8564e+00,
        -1.3135e+00, -2.5985e+00, -8.0142e-01, -2.3174e+00, -3.1674e+00,
        -2.3089e+00,  2.5900e+00, -2.2949e+00, -2.5737e+00,  4.8426e-01,
        -2.1412e+00, -3.2054e+00, -3.5389e+00, -1.6431e+00, -3.1661e+00,
        -3.4558e+00, -2.8409e+00, -2.4342e+00, -1.8796e+00, -2.3098e+00,
        -1.3421e+00, -1.2544e+00, -3.3022e+00, -3.4150e+00,  1.7222e+00,
        -1.8210e+00, -2.6967e+00, -3.4131e+00, -3.4613e+00, -3.0439e+00,
        -3.0367e+00, -2.7776e+00, -2.1843e+00, -1.1205e+00, -1.2059e+00,
        -3.3020e+00, -2.3251e+00, -2.2035e+00, -3.2485e+00, -2.5054e+00,
        -3.5312e+00, -1.0633e+00,  5.2885e-01,  2.0576e-01, -7.1183e-02,
        -3.4937e+00, -2.9834e+00, -3.2393e+00, -2.8683e+00, -3.5191e+00,
        -3.4068e+00, -2.2087e+00, -2.2143e+00, -2.4174e+00, -3.4057e+00,
        -2.2960e+00, -3.0057e+00, -2.9854e+00,  3.7316e-01, -2.0363e+00,
        -3.3002e+00, -2.8844e+00,  2.2502e-01, -2.5259e+00, -3.3311e+00,
        -1.3308e+00, -2.8834e+00, -5.3147e-01, -2.2707e+00, -2.5531e+00,
         3.0853e+00, -2.9507e+00, -2.4098e+00, -8.6315e-01, -2.9074e+00,
        -2.9178e+00, -3.6121e-01], device='cuda:0'), 'gt_classes': tensor([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:0'), 'gt_boxes': Boxes(tensor([[301.2580, 509.3333, 362.5760, 674.6667],
        [301.2580, 509.3333, 362.5760, 674.6667],
        [301.2580, 509.3333, 362.5760, 674.6667],
        ...,
        [301.2580, 509.3333, 362.5760, 674.6667],
        [301.2580, 509.3333, 362.5760, 674.6667],
        [301.2580, 509.3333, 362.5760, 674.6667]], device='cuda:0'))}
ERROR [09/17 12:04:29 d2.engine.train_loop]: Exception during training:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!
[09/17 12:04:29 d2.engine.hooks]: Total training time: 0:00:10 (0:00:00 on hooks)
[09/17 12:04:29 d2.utils.events]:  iter: 0    lr: N/A  max_mem: 4143M
{'proposal_boxes': Boxes(tensor([[204.1930, 328.0368, 911.7800, 837.3611],
        [255.7440, 327.1680, 965.3760, 804.0960],
        [174.2832, 229.0208, 775.1260, 817.0767],
        ...,
        [ 12.7879, 500.8951,  51.7098, 520.2488],
        [196.4425, 458.9851, 216.2129, 503.8855],
        [449.7648, 521.0979, 554.7012, 570.4971]], device='cuda:2')), 'objectness_logits': tensor([ 1.7389, 23.0259,  6.0113,  3.2828,  2.3340,  1.8901,  3.3295,  5.0092,
         4.7461,  3.2364,  5.1503,  0.5209,  4.9565,  3.1929,  5.2146,  4.2395,
         7.0130,  4.5653,  4.7359,  3.8616,  2.2735,  7.2455, -2.4892, -3.5414,
        -1.8045, -4.3498,  6.0402, -3.2011,  2.5167,  3.3594,  4.8606, -2.9194,
         6.0207, -3.7306, -4.3063, -2.2579, -0.9962, -3.5610, -1.7491, -3.7925,
         4.8817, -2.6365, -2.9949, -4.0150,  0.2517, -3.1964, -3.0887, -2.8556,
        -4.4155, -2.5269, -4.4001, -3.8003, -2.6250, -4.1450, -4.3404, -2.4967,
        -4.2357, -4.3412, -4.2850, -3.9036, -2.2315, -2.4344, -2.6934, -3.8583,
        -3.4497, -3.9244, -3.5468, -1.8182, -4.2667, -3.3234, -3.8856, -2.8123,
        -3.2530,  5.9791, -2.9580, -4.3242, -0.6494,  4.6400, -4.2787, -3.8699,
        -3.2515, -2.9762, -0.5032, -1.4271, -3.9853, -4.1421, -3.9768, -4.0562,
        -2.6281, -2.8043, -3.0365, -0.8634,  0.6113, -1.3731, -3.8110, -1.9043,
        -4.3947, -3.6455, -4.3575, -3.8980, -1.4541, -3.0227, -3.3819, -2.2428,
        -2.8843,  0.7611, -1.8563, -4.0014, -3.8581, -2.0802, -4.4021, -1.0451,
        -4.2888, -0.3473, -0.6065, -4.2875, -3.8350, -4.1573, -1.0089, -3.9800,
        -3.1282, -4.0990, -2.6941,  0.8615, -4.3918, -3.8354, -4.3428, -4.2521,
        -1.4119, -1.6360, -0.0942, -1.8178, -1.0502, -1.8318, -1.6476, -3.8234,
        -4.1743, -0.8493, -1.5717, -4.2495, -3.6197, -3.9129, -2.7752, -1.7056,
        -1.7462, -3.7152, -4.2345, -1.5337, -3.8889,  4.9271, -2.5253, -0.5832,
        -2.2510, -4.2861, -0.8014, -2.0919, -4.0884, -4.2866, -2.6855, -1.9465,
        -2.9506, -2.9916, -4.3623, -0.8848, -4.2327, -3.6187, -0.1634, -1.8099,
        -2.3097, -3.1536, -3.2984, -3.9566, -3.8436, -3.5465, -3.8029, -4.4394,
        -0.7623, -2.7118, -1.1755,  0.2351, -3.0401, -3.6924, -4.3073, -3.7452,
        -3.8744, -2.7718, -0.5075, -1.0132, -4.3133, -2.6696, -0.9214, -3.7457,
        -1.9055,  0.2234, -1.8188, -4.0272, -3.8784, -3.1625, -3.2022, -4.0632,
        -4.3700, -4.3739, -3.4173, -2.9371, -2.9512, -4.2885, -0.1975, -3.8652,
        -1.7673, -3.8959, -1.9044, -0.8230, -4.2598, -3.9232, -2.4253, -3.1144,
        -2.2068,  3.7627, -4.2861, -2.4164, -2.7163,  0.8395,  0.0288, -3.3408,
        -3.9161, -4.3954, -4.0232, -3.1880, -3.9135, -2.6064, -3.6956, -4.2698,
        -4.0948, -1.3306, -4.1892, -2.4652, -3.8141, -1.1221, -3.5051, -4.4425,
        -3.9386, -4.4376, -2.5050, -4.2555, -0.4802, -1.5893, -1.0838, -1.5552,
        -0.1176, -4.1511,  0.1841, -2.7438, -3.9282, -2.1983, -0.0461, -4.3816,
        -2.8821, -3.3298, -1.2020, -2.6396, -4.1038, -3.4868, -4.1102, -1.9283,
        -3.3269, -4.3790, -1.3673, -3.3932,  0.6535, -4.3613, -4.1021, -1.2267,
        -4.0268, -4.0163, -4.3931, -3.0135, -3.8567, -2.7627, -2.2570, -4.3989,
        -0.3091, -2.7479, -0.8951, -4.1145, -2.6055, -4.4351, -2.8514,  1.1268,
        -4.2715, -4.1514, -3.1383, -4.1815, -2.4432, -0.4076, -1.0101, -3.9113,
        -2.7415, -4.2462, -4.3800, -1.3023, -2.8848, -0.0418, -3.9229, -0.4052,
        -0.7957, -3.4146, -0.3858, -4.3903, -3.2545, -4.1444, -1.4360, -4.4482,
         0.8103,  0.9162, -3.7773,  1.3022, -3.1156, -3.4398, -1.9762, -0.9948,
        -3.3062, -3.9086, -4.0767, -3.5009, -3.5581, -2.5354, -4.1317, -4.4342,
        -3.3891, -4.3692, -3.5592, -4.2124, -3.9552, -2.6843, -2.2954, -0.6712,
        -3.1179, -1.4523, -3.4837, -3.8379,  0.3673, -4.4313, -3.0432, -1.5197,
        -3.5857, -3.3422, -3.8908, -3.0375, -1.2233, -4.2254, -4.2717, -2.6515,
        -4.0328,  4.7354, -0.6145, -1.1176, -3.7842, -4.3728, -2.9242, -4.0739,
        -4.0996, -3.2943, -4.3970, -4.3036, -2.4455, -3.7809, -1.9032, -4.3859,
        -4.3205, -4.4330, -3.3470, -4.3866, -4.0105, -4.3916, -2.9279, -1.0901,
        -0.6263,  3.0067, -3.7458, -3.7250,  0.1932,  1.4126, -3.4495, -3.5603,
        -0.9467, -0.8242,  0.7116, -4.4098, -2.3907, -4.2138, -4.4307, -4.3262,
        -2.9624, -3.9660, -3.3553, -2.0290, -0.0736, -4.1988, -2.6731, -4.1051,
        -3.5977, -4.0669, -1.1892, -3.0411, -3.7152, -3.2662, -3.1182, -4.3887,
        -4.3455, -2.5287, -1.6997, -3.3402, -3.7179, -4.0579, -2.7080, -4.4401,
        -3.0909, -2.2974, -3.7860, -3.8881, -4.2125, -4.1826, -0.5384, -2.2334,
        -1.9108, -3.4115, -4.4358,  0.4299, -3.8581, -2.5128, -3.1103, -3.7515,
        -4.3327, -3.8347, -0.0558, -3.9177, -4.0080, -3.7028, -4.3930,  1.4250,
        -4.3262, -3.3494, -4.3119, -1.2087, -2.9338, -3.8832,  4.0065, -3.9279,
        -3.9335,  1.2808, -3.2204, -3.3267, -3.1556, -3.8232, -4.2964, -2.3355,
        -4.3497, -2.1801, -3.7795, -3.3407, -4.2863,  1.0696, -3.9159, -3.8768,
        -4.0811, -4.0514, -2.6376, -4.4011, -3.7131, -2.1217, -3.1328, -1.7805,
        -2.9754, -4.4067,  0.4714, -4.4257, -3.5966, -2.3035,  1.7082, -3.9782,
         6.3079,  0.4066,  1.2139, -4.3901, -0.9389, -2.8597, -1.7026, -3.5605,
        -3.4343, -4.3352, -1.2291, -3.9555, -3.9781,  0.6108, -4.2004, -4.3780,
        -3.0591, -3.2396, -3.7652, -4.0252, -4.2305, -4.3906, -4.1964, -3.5225,
        -4.3839, -2.6150, -1.6967, -1.8871, -3.9755, -4.2677, -2.8723, -4.4478],
       device='cuda:2'), 'gt_classes': tensor([ 9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,
         9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:2'), 'gt_boxes': Boxes(tensor([[255.7440, 327.1680, 965.3760, 804.0960],
        [255.7440, 327.1680, 965.3760, 804.0960],
        [255.7440, 327.1680, 965.3760, 804.0960],
        ...,
        [255.7440, 327.1680, 965.3760, 804.0960],
        [255.7440, 327.1680, 965.3760, 804.0960],
        [255.7440, 327.1680, 965.3760, 804.0960]], device='cuda:2'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 31407) is killed by signal: Terminated. 
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 31376) is killed by signal: Terminated. 
{'proposal_boxes': Boxes(tensor([[ 987.8339,  259.8420, 1085.2865,  303.1744],
        [ 990.6953,  243.4632, 1082.0056,  316.6553],
        [ 984.7818,  259.8520, 1054.6769,  302.5743],
        ...,
        [ 604.3616,  262.5884,  646.3781,  355.4772],
        [ 954.7353,  245.2352,  990.5912,  265.7563],
        [ 793.3381,  313.3271,  812.1298,  348.3179]], device='cuda:3')), 'objectness_logits': tensor([ 3.5199e+00,  5.7373e-01, -4.0967e-01,  4.9366e+00,  3.6966e+00,
         2.3026e+01, -1.4676e+00,  1.0402e+00,  1.2542e+00,  1.7322e-01,
        -3.6676e+00, -6.0707e+00, -6.0912e+00, -4.8457e+00, -4.1343e+00,
        -5.3551e+00, -5.0168e+00, -1.6027e+00, -1.1876e+00, -5.5427e+00,
        -1.7030e+00, -5.8709e+00, -2.6885e+00, -4.7082e+00, -1.2628e+00,
        -5.7671e+00, -5.9873e+00, -4.0577e+00, -5.5450e+00,  1.5903e+00,
        -2.6026e+00, -4.8418e+00, -2.7141e+00, -5.0340e+00, -4.7784e-01,
        -5.9455e+00, -4.8732e+00, -4.9906e+00, -5.9848e+00, -3.1327e+00,
        -6.0147e+00,  1.1753e+00, -4.9107e+00, -4.7910e-01, -5.9667e+00,
        -1.3765e+00,  4.9345e-02, -4.2292e+00,  1.6589e+00, -4.6887e+00,
        -4.6391e+00, -5.9964e+00, -3.7184e+00, -4.7652e+00, -5.1842e+00,
        -4.0607e+00, -2.1484e+00, -2.0391e+00, -2.7989e+00, -2.4550e+00,
        -4.7617e+00, -4.5402e+00, -5.0298e+00, -5.2547e+00, -4.2941e+00,
        -5.7155e+00, -5.7959e+00, -5.1171e+00, -3.2672e+00, -3.3899e+00,
        -5.1348e+00, -5.0106e+00, -3.8241e+00, -3.6294e+00, -1.9707e+00,
        -4.5779e+00, -5.2992e+00, -4.6935e+00, -5.3197e+00,  3.1752e+00,
        -5.4655e+00, -4.0746e+00, -4.0380e+00, -5.9281e+00, -5.2667e+00,
        -6.0036e+00, -5.2336e+00, -5.0097e+00, -4.0705e+00, -5.3046e+00,
        -4.0356e+00, -4.4970e+00, -3.8804e+00, -2.3126e+00, -4.9413e+00,
        -4.1636e+00,  4.5720e+00, -5.7937e+00, -1.9734e+00, -1.3141e+00,
        -1.5826e+00, -5.4222e+00, -5.6231e+00, -4.2426e+00, -4.1774e+00,
        -4.4716e+00, -5.5082e+00, -4.9558e+00, -4.3415e+00, -1.3578e+00,
        -4.7800e+00, -3.4166e+00, -3.7980e+00, -3.4415e+00, -1.5924e+00,
        -5.7705e+00, -5.6269e+00, -3.0500e+00, -4.4252e+00, -5.9751e+00,
        -3.6362e+00, -5.2856e+00, -2.3527e+00, -3.4827e+00, -2.7199e+00,
        -5.2149e+00, -4.4235e+00, -3.6186e+00, -5.2117e+00, -5.6758e+00,
        -5.2854e+00, -5.4003e+00,  2.2003e+00, -4.1589e+00, -4.5565e+00,
        -3.4261e+00, -3.7649e+00, -2.2287e+00, -6.0644e+00, -1.5749e+00,
        -5.9538e+00, -5.2335e+00, -3.6680e+00, -5.6100e+00, -3.9474e+00,
        -4.3941e+00, -3.4776e+00, -3.5478e+00, -4.5818e+00,  5.3002e-01,
        -3.5731e+00, -2.5869e+00, -2.8092e+00, -4.1891e+00, -3.6493e+00,
        -5.3200e+00, -4.5535e+00, -3.9789e+00, -5.0084e+00, -3.9504e+00,
        -5.8204e+00,  4.6536e+00, -3.2679e+00, -3.9162e+00, -3.1223e+00,
        -4.9684e+00,  8.9938e-01, -2.5660e+00, -1.5274e+00, -5.6674e+00,
        -4.1222e+00, -1.9500e+00, -5.2927e+00, -3.9942e+00, -5.8227e+00,
        -4.9782e+00, -3.1802e+00, -5.1503e+00, -6.0136e+00, -2.1518e+00,
        -2.9824e+00, -5.1004e+00, -6.0928e+00, -4.3967e+00, -5.1722e+00,
        -5.0606e+00, -3.3093e+00, -4.0850e+00, -4.4436e+00, -5.9833e+00,
        -4.4137e+00, -4.0701e+00, -4.0576e+00, -3.8550e+00, -3.3113e+00,
        -4.8176e+00, -4.2256e+00, -1.8187e+00, -5.7940e+00, -3.9378e+00,
        -3.7744e+00, -5.6039e+00, -5.3458e+00, -4.8759e+00, -5.2701e+00,
        -4.3820e+00, -4.1562e+00, -3.9582e-01, -5.2427e+00, -5.4193e+00,
        -5.7295e+00, -5.3393e+00, -5.5891e+00, -5.9993e+00, -4.4468e+00,
        -1.1666e+00, -2.2382e+00, -2.5380e+00, -5.3834e+00,  1.6450e+00,
        -2.4427e+00, -3.9231e+00, -2.7316e+00, -4.7401e+00, -3.4309e+00,
        -3.0619e-01, -4.2917e+00, -5.9311e+00, -5.8670e-02, -3.9339e+00,
        -4.2162e+00, -3.0509e+00, -2.2641e+00, -5.9142e+00, -5.7991e+00,
        -4.6292e+00, -5.2048e+00, -4.7180e+00, -2.5593e+00, -3.8264e+00,
        -3.9574e+00, -3.4178e+00, -3.9222e+00, -2.3103e+00, -6.0934e+00,
        -5.7681e+00, -3.2710e+00, -3.6368e+00,  1.0349e+00, -3.1417e-01,
        -3.4967e+00, -5.1975e+00, -5.5617e+00, -5.5683e+00, -1.9653e+00,
        -2.2253e+00, -2.1966e+00, -3.1039e+00, -3.9100e+00, -5.8144e+00,
        -1.2812e+00, -3.8778e+00,  1.2249e-01, -8.5170e-01, -5.4797e+00,
        -3.5787e+00, -1.5546e+00, -5.9291e+00, -1.1677e+00, -5.5901e+00,
        -5.1358e+00, -5.5744e+00,  2.4216e+00, -4.8535e+00, -2.5544e+00,
        -6.0769e+00, -5.4707e+00, -4.0014e+00, -4.0243e+00, -2.7185e+00,
        -4.7547e+00, -4.5831e+00, -4.3373e+00, -3.3350e+00, -4.5966e+00,
        -1.8977e+00, -4.2872e+00, -3.5397e+00, -7.2915e-03, -5.5624e+00,
        -5.8103e+00, -2.2244e+00, -4.3898e+00, -4.6626e+00, -2.8101e+00,
        -3.5558e+00, -5.8637e+00, -5.5107e+00, -4.5939e+00, -5.9376e+00,
        -4.0989e+00,  4.0156e-01, -5.5712e+00, -5.3658e+00, -1.1467e+00,
        -2.0707e+00, -4.2878e+00, -5.3315e+00, -1.0205e+00, -5.7228e+00,
        -4.4605e+00, -2.7731e+00, -5.9132e+00, -4.5955e+00, -3.5630e+00,
        -4.3076e+00, -4.5934e+00, -5.5030e+00, -4.1582e+00, -3.2953e+00,
        -3.9241e+00, -2.2069e+00,  4.2501e-02,  1.4688e-01, -6.0347e+00,
         6.1475e-01,  2.5427e+00, -3.6798e+00, -5.9631e+00, -4.6758e+00,
        -5.0664e+00, -2.7621e+00, -4.0984e+00, -3.6471e+00, -3.5638e+00,
        -2.4330e+00, -2.5314e+00, -5.5975e+00, -4.2076e+00, -8.5886e-01,
        -5.9520e+00, -3.1654e+00, -5.5655e+00, -5.6446e+00,  1.3373e+00,
        -6.0659e+00, -5.0245e+00, -3.6792e+00, -2.6615e+00,  4.1527e+00,
        -1.1750e+00, -5.9669e+00, -5.1986e+00, -5.0149e+00, -4.2535e+00,
        -5.6471e+00, -3.3082e+00, -4.1730e+00, -4.7980e+00, -5.7046e+00,
        -5.9713e+00, -1.9899e+00, -3.4749e+00, -3.7373e+00, -2.5059e+00,
        -5.1910e+00, -4.3536e+00, -2.1436e+00, -5.7032e+00, -4.7538e+00,
        -5.9713e+00, -2.4548e+00, -6.0884e+00,  4.8514e-01, -1.9643e+00,
        -3.1124e+00, -5.2759e+00, -6.0602e+00, -5.6901e+00, -5.0839e+00,
        -1.6163e+00, -5.0547e+00, -4.0815e+00, -5.0441e+00, -2.4152e+00,
        -5.5989e+00, -5.4678e+00, -4.0070e+00, -4.5152e+00, -4.7370e+00,
        -5.3901e+00, -5.6337e+00, -6.0739e+00, -5.5324e+00, -3.5781e+00,
        -2.5240e+00, -5.4905e+00, -4.8620e+00, -5.2312e+00, -5.6684e+00,
        -5.9120e+00, -4.7903e+00,  1.8347e+00, -5.6356e+00, -5.3368e+00,
        -5.5172e+00, -2.9515e+00, -4.7195e+00,  1.0399e+00, -5.2430e+00,
        -4.1123e+00, -4.8636e+00, -5.3131e+00, -4.2028e+00, -3.5367e+00,
        -5.4110e+00, -3.9528e+00, -5.7068e+00, -4.3014e+00, -6.0323e+00,
        -5.8100e+00, -2.5738e+00, -3.6733e+00, -1.7498e+00, -2.1392e+00,
        -4.7387e+00, -4.8054e+00, -5.8826e-01, -2.0194e+00, -4.1776e+00,
        -5.9309e+00, -2.4053e+00, -5.5868e+00, -2.3871e-01, -1.3548e+00,
        -3.6917e-01, -3.1127e+00, -6.0312e+00, -2.1342e+00, -5.2929e+00,
        -5.9314e+00, -6.0384e+00, -5.1538e+00, -5.8803e+00, -4.3450e+00,
        -4.7508e+00, -5.9753e+00, -5.5367e+00, -5.0931e+00, -3.1801e+00,
        -6.0070e+00, -5.8305e+00, -5.7098e+00, -5.3413e+00, -2.9610e+00,
         1.1576e+00, -4.8035e+00, -5.4287e+00, -3.6913e+00, -2.7403e+00,
        -4.6662e+00, -5.1606e+00, -5.4359e+00, -5.2033e+00, -4.2128e+00,
        -4.3028e+00,  1.0745e-01, -5.0767e+00, -2.0045e+00,  2.8802e-01,
        -8.7597e-01, -2.1780e+00, -5.7402e+00, -4.2448e+00, -2.4114e+00,
        -2.2380e+00, -1.8317e+00, -3.7850e+00, -4.7505e+00, -4.3950e-02,
        -5.4453e+00, -4.7514e+00, -4.6280e+00, -3.7947e+00, -4.3807e+00,
        -4.9319e+00, -2.7809e+00, -5.8657e+00, -2.0411e+00, -3.9874e+00,
        -1.7332e+00, -4.3047e+00, -4.6129e+00, -2.4472e+00, -2.4988e+00,
        -2.3740e+00, -3.8070e+00, -4.9622e+00, -3.8265e+00, -5.5823e+00,
        -4.5781e+00, -1.5524e+00, -5.9803e+00, -4.5795e+00, -6.0041e+00,
        -2.9548e+00, -1.3061e+00, -4.7645e+00, -5.9633e+00, -5.6747e+00,
        -5.7057e+00, -4.9900e+00], device='cuda:3'), 'gt_classes': tensor([ 2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:3'), 'gt_boxes': Boxes(tensor([[ 981.0880,  261.3333, 1077.0640,  309.3333],
        [ 981.0880,  261.3333, 1077.0640,  309.3333],
        [ 981.0880,  261.3333, 1077.0640,  309.3333],
        ...,
        [ 981.0880,  261.3333, 1077.0640,  309.3333],
        [ 981.0880,  261.3333, 1077.0640,  309.3333],
        [ 981.0880,  261.3333, 1077.0640,  309.3333]], device='cuda:3'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 31408) is killed by signal: Terminated. 
Traceback (most recent call last):
  File "main.py", line 38, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 67, in launch
    mp.spawn(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 230, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 188, in start_processes
    while not context.join():
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 150, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 0 terminated with the following error:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/setuptools/_distutils/version.py
[09/17 12:04:39 detectron2]: Rank of current process: 0. World size: 4
[09/17 12:04:39 detectron2]: Full config saved to checkpoints/voc/1726571009/fsod1/3shot/seed1/config.yaml
[09/17 12:04:41 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
[09/17 12:04:41 fvcore.common.checkpoint]: Reading a file from 'torchvision'
[09/17 12:04:48 detectron2]: Loss: 0.0003
[09/17 12:04:48 detectron2]: [CLS] Use dropout: p = 0.8
[09/17 12:04:48 d2.data.build]: Removed 0 images with no usable annotations. 60 images left.
[09/17 12:04:48 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 12:04:48 d2.data.build]: Using training sampler TrainingSampler
[09/17 12:04:49 d2.data.common]: Serializing 60 elements to byte tensors and concatenating them all ...
[09/17 12:04:49 d2.data.common]: Serialized dataset takes 0.02 MiB
[09/17 12:04:49 fvcore.common.checkpoint]: [Checkpointer] Loading from dataset/check/voc/1726356812/base1/model_final-fsod.pth ...
WARNING [09/17 12:04:49 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
roi_heads.box_predictor.fc.weight
roi_heads.box_predictor.fsup
[09/17 12:04:49 d2.engine.train_loop]: Starting training from iteration 0
{'proposal_boxes': Boxes(tensor([[ 119.5234,  168.8592, 1106.4025,  878.2909],
        [   0.0000,  368.5041,  717.1309,  843.4839],
        [   0.0000,  218.4879,  677.3190,  822.8197],
        ...,
        [ 407.6177,  321.5790,  553.3225,  446.0517],
        [ 115.2636,    0.0000,  799.4009,  416.5118],
        [ 376.4702,  371.4248,  424.5685,  397.7029]], device='cuda:0')), 'objectness_logits': tensor([ 4.2972e+00,  6.0762e+00,  2.8059e+00,  3.7731e+00,  3.1968e+00,
         1.2594e+00,  4.6987e+00,  6.4329e+00,  5.2180e+00,  3.6068e+00,
         7.2911e+00,  5.4105e+00,  7.3841e+00,  9.4272e-01,  2.3026e+01,
         4.5300e+00, -2.1756e+00,  4.0692e+00,  3.9875e+00, -1.0353e+00,
         1.7674e+00,  3.2630e+00,  3.8184e+00,  3.4809e-01, -1.0561e+00,
        -2.0544e+00, -2.0631e+00, -6.6271e-01, -1.1026e+00, -3.5871e+00,
        -3.1155e+00, -1.6763e+00,  6.5499e-01, -3.3875e+00, -2.2442e+00,
        -2.6205e+00,  2.1524e+00, -2.0042e+00, -3.1408e+00, -1.2939e+00,
        -3.3291e+00, -3.3386e+00, -1.6630e+00, -1.9174e+00,  7.8415e-01,
        -1.7007e+00, -2.6635e+00, -2.6565e+00, -1.8166e+00, -3.3203e+00,
        -2.9312e+00,  5.7799e+00, -3.3201e-01, -3.1025e+00,  2.9923e+00,
        -3.1093e+00,  7.1352e+00, -3.5534e+00, -2.9600e+00, -2.9136e+00,
         1.2316e+00, -3.5350e+00, -1.3556e+00, -2.4942e+00, -3.0705e+00,
         9.0617e-02, -3.5991e+00, -2.3355e+00, -2.9740e+00, -1.1314e+00,
        -1.0668e+00, -3.5183e+00, -1.5918e+00, -3.2299e+00, -5.4350e-01,
        -6.4636e-01, -1.1225e+00, -3.4352e+00, -2.8180e+00, -6.4535e-02,
        -2.8782e+00, -1.5127e+00, -3.2934e+00, -2.6090e+00,  5.8463e-01,
        -3.5024e+00, -2.7136e+00, -1.0591e+00, -3.3108e+00, -1.9824e+00,
        -1.6293e+00, -3.2737e+00, -3.1390e+00,  5.7439e+00, -3.2047e+00,
         5.4082e-01,  5.8979e+00, -3.3134e+00, -3.3139e+00,  3.8689e+00,
        -3.2683e+00,  1.3603e+00, -2.8005e+00, -3.3656e+00, -2.6888e+00,
        -3.4819e+00, -9.9590e-01, -2.8341e+00,  4.3136e+00, -3.2609e+00,
        -2.4412e+00, -3.3949e+00, -3.4758e+00, -2.2267e+00, -3.0808e+00,
        -1.6404e+00, -3.5695e+00, -2.6939e+00,  1.4700e+00, -2.6102e+00,
        -3.4302e+00, -3.4452e+00, -8.2985e-01, -2.7301e+00, -3.5636e+00,
        -2.3886e-01,  4.7831e+00, -3.1812e+00, -2.9195e+00, -2.1771e+00,
         7.8143e-01, -2.3425e+00, -5.8270e-02, -1.9869e+00, -2.0278e+00,
        -1.7199e+00, -3.5362e+00, -3.3764e+00, -3.3503e+00, -2.1773e+00,
        -3.4105e+00, -1.7093e+00, -2.5532e+00, -2.9627e+00,  1.1954e+00,
        -2.7165e+00, -1.0890e+00, -1.0856e+00, -1.6454e+00, -2.6934e+00,
        -1.2363e+00, -2.9595e+00, -1.7429e+00,  3.5377e-01, -2.9885e+00,
        -4.2918e-01, -2.4554e+00, -3.2310e+00, -1.4566e+00, -2.5362e+00,
         6.0447e+00,  3.3829e+00,  1.2681e+00, -2.0324e+00, -3.4676e+00,
        -1.6845e+00, -1.8707e+00, -2.5795e+00, -2.5366e+00, -3.1100e+00,
        -6.4731e-01, -1.7547e+00,  5.3559e-01, -2.9795e-01, -8.0567e-01,
        -2.2729e+00, -3.5811e+00,  7.8644e-01,  6.4960e-02, -1.3954e+00,
        -2.6236e+00, -3.4650e+00, -3.4051e+00, -2.8742e+00, -2.7312e+00,
        -3.3667e+00, -2.6214e+00, -1.9256e+00,  5.0077e+00, -2.9804e+00,
         2.3873e+00,  6.4989e-01,  1.5770e+00,  1.5769e-02, -1.0596e+00,
         2.9369e+00,  5.2941e+00, -2.1186e+00,  7.8221e-01, -2.2006e+00,
         2.3112e-01, -6.1407e-01, -1.2468e+00, -1.6092e+00, -3.3713e+00,
        -3.4697e+00,  1.2077e+00, -1.5975e+00, -2.9712e-01, -2.2187e+00,
        -1.5646e+00, -1.4474e+00, -3.4467e+00, -2.8999e+00, -2.9170e+00,
         5.6405e-01, -3.2400e+00, -1.9952e+00, -2.0066e+00, -3.6236e-01,
        -3.5752e+00, -2.6615e+00, -3.5196e+00, -1.6735e+00, -4.5024e-01,
         2.0125e+00, -1.5453e+00, -2.3400e+00,  3.3239e-01, -2.4215e+00,
        -2.5737e+00, -2.5214e+00, -3.4033e+00, -2.8628e+00, -3.1378e+00,
        -3.5147e+00, -2.5430e+00, -2.5371e+00,  7.1518e-01,  2.0623e+00,
        -3.4989e+00,  8.7638e-01, -2.5289e+00, -3.0418e+00, -2.2481e+00,
        -3.4650e+00, -1.2928e+00, -3.3295e+00,  8.8155e-01, -3.5808e+00,
         9.6694e-01,  1.8382e+00, -3.6455e-01, -3.4436e+00, -1.1485e+00,
        -2.9310e+00, -7.8975e-01, -2.7755e+00, -2.7616e+00, -3.3624e+00,
        -7.2447e-02, -3.4694e+00, -6.3521e-01, -3.4910e+00, -2.5651e+00,
        -2.3942e+00, -2.9092e+00,  3.5823e+00, -2.4182e+00, -3.2788e+00,
         6.3170e-01,  3.4633e+00, -5.9299e-01, -1.2016e+00, -2.7037e+00,
        -1.1751e+00,  6.7331e-01, -3.0487e+00, -2.6007e-01, -9.3058e-01,
        -1.4290e+00, -1.7230e+00,  8.9819e-04,  2.4593e+00, -3.3403e+00,
        -3.0067e-02, -2.5076e+00,  4.3358e+00, -2.7734e+00, -6.0902e-01,
         2.2008e+00, -5.5330e-01, -3.0868e+00, -1.9624e+00, -1.4123e+00,
        -2.4353e+00, -1.1081e+00, -1.9269e+00, -2.7404e+00,  4.6290e+00,
        -3.0403e+00, -2.4422e+00, -2.4908e+00,  2.7141e+00, -2.0980e+00,
         1.4324e-01,  4.7072e+00, -3.6160e+00, -3.2332e+00, -1.4967e+00,
        -3.5011e+00, -3.1512e+00, -1.8061e+00, -2.0862e+00, -2.3349e+00,
        -1.7237e+00, -1.5905e+00, -2.4374e+00, -2.7739e+00,  1.2311e+00,
        -3.4395e-01, -4.7874e-01, -1.3785e+00, -6.2679e-01, -3.2386e+00,
        -3.2826e+00, -3.5349e+00, -2.6197e+00, -1.8819e+00,  1.6524e+00,
        -2.9849e+00,  4.8497e-01, -2.7140e+00,  1.3636e-01, -3.4172e+00,
        -2.1340e+00, -3.3738e+00, -3.6143e+00,  1.8522e+00, -1.9979e+00,
        -2.6325e+00,  5.9026e+00, -2.5838e+00, -8.3873e-01, -2.6660e+00,
         2.5131e+00,  3.3191e+00,  6.4927e-02, -1.5352e+00, -1.3578e+00,
        -1.7444e+00,  3.4583e-01,  1.5918e-01, -2.8445e+00, -7.6260e-01,
        -3.0391e+00,  5.0320e+00, -2.2018e+00, -3.0367e+00, -1.2731e+00,
        -2.8918e+00, -1.3330e+00, -2.3712e+00, -2.9279e+00, -3.3129e+00,
         2.1991e-01, -3.2448e+00, -2.9641e+00, -2.1724e+00, -2.9187e+00,
         3.3076e+00, -3.5602e+00, -3.1947e+00, -2.7262e+00, -2.9197e+00,
        -2.3420e+00, -3.4755e+00, -1.4648e+00, -5.4402e-01, -2.3907e+00,
        -5.1840e-01, -3.3434e+00,  1.6969e-02, -2.7814e+00,  5.6314e-01,
        -3.4681e+00, -1.7227e+00, -3.5378e+00, -4.0360e-01, -2.6913e+00,
        -1.9377e+00, -2.7699e+00, -1.4941e+00, -1.9708e+00, -1.8295e+00,
        -3.3879e+00, -7.2537e-01, -3.1645e+00, -5.5644e-03, -2.2120e+00,
        -3.4592e+00,  2.1544e+00, -2.3834e+00, -2.5688e+00,  4.5704e+00,
        -1.3990e-01, -3.4068e+00, -2.9994e+00,  2.1960e-01,  3.5224e+00,
        -2.2441e+00, -2.5511e+00, -2.2900e-01, -3.5261e+00, -2.8450e+00,
        -2.6250e+00, -3.4008e+00, -2.5874e-02, -1.7846e+00,  1.0385e-01,
        -1.4713e+00, -4.6988e-01, -3.3781e+00, -1.1130e+00,  2.2388e+00,
        -5.4616e-01, -2.4086e+00, -1.9702e+00, -1.5623e+00, -3.3486e+00,
         7.4440e-01,  6.0137e-01, -2.6248e+00, -2.6683e+00, -1.5562e+00,
        -8.3499e-01,  2.6752e+00, -2.3588e-01, -2.7310e+00,  4.4246e+00,
        -7.0558e-01, -3.3052e+00, -4.8922e-01, -3.3680e+00,  4.7334e+00,
        -3.3347e+00,  3.1299e+00,  4.4776e+00, -2.1639e+00, -3.2703e+00,
        -6.3752e-02, -1.1987e+00, -6.6684e-01, -2.0555e+00, -7.7856e-01,
        -1.6832e+00,  3.8516e+00, -1.0770e+00, -2.0794e+00, -1.4445e+00,
         2.6450e+00, -3.4316e+00, -1.9704e+00, -2.1856e+00, -3.5352e+00,
        -2.4206e+00, -7.6865e-01, -2.7248e+00, -3.3564e+00, -1.9723e+00,
         1.9902e+00, -3.5862e+00, -2.7263e+00, -1.5280e+00, -3.1767e+00,
        -1.7758e+00, -7.7125e-01, -1.9915e+00, -3.1639e+00, -2.9188e+00,
        -2.8734e+00, -2.0901e+00, -2.5600e+00, -2.1910e+00, -3.4886e+00,
        -7.1922e-01, -2.7401e+00, -2.7069e+00, -2.5966e+00, -2.4149e+00,
        -1.4333e+00,  5.4064e+00, -2.3343e+00, -2.4492e+00, -2.4842e+00,
        -2.2195e+00, -3.0946e+00, -1.9210e+00, -9.7306e-01, -3.6065e+00,
         7.2257e+00, -1.7083e+00, -9.8652e-02, -3.3400e+00, -2.2911e+00,
        -2.0184e+00, -3.5573e+00, -1.5723e+00,  6.4473e-01, -2.2594e+00,
        -3.3585e+00, -2.4494e+00], device='cuda:0'), 'gt_classes': tensor([17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
        17, 17, 17, 17, 17, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:0'), 'gt_boxes': Boxes(tensor([[  0.0000, 264.7893, 841.1600, 801.7920],
        [  0.0000, 264.7893, 841.1600, 801.7920],
        [  0.0000, 264.7893, 841.1600, 801.7920],
        ...,
        [  0.0000, 264.7893, 841.1600, 801.7920],
        [  0.0000, 264.7893, 841.1600, 801.7920],
        [  0.0000, 264.7893, 841.1600, 801.7920]], device='cuda:0'))}
ERROR [09/17 12:05:00 d2.engine.train_loop]: Exception during training:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!
[09/17 12:05:00 d2.engine.hooks]: Total training time: 0:00:11 (0:00:00 on hooks)
[09/17 12:05:00 d2.utils.events]:  iter: 0    lr: N/A  max_mem: 4372M
{'proposal_boxes': Boxes(tensor([[ 370.2172,  223.9763, 1124.3635, 1016.0000],
        [ 327.1389,   68.3672, 1301.5022,  813.0859],
        [ 201.7657,  138.7606,  886.3318,  846.6329],
        ...,
        [ 189.5216,  292.1406,  575.3904,  727.8679],
        [   0.0000,  366.8375,  307.1477,  779.5616],
        [ 679.1304,  615.0593, 1070.1868,  854.0179]], device='cuda:3')), 'objectness_logits': tensor([ 5.2056e+00,  4.2520e+00,  5.7092e+00,  2.3026e+01,  6.7500e+00,
         8.4351e+00,  5.8571e+00,  6.8632e+00,  4.9788e+00,  4.3698e+00,
         5.8720e+00,  6.4419e+00,  5.2518e+00,  6.6274e+00,  6.5648e+00,
         8.1419e+00,  6.9250e+00,  7.0060e+00,  2.7115e+00,  8.9851e-01,
        -1.2411e+00, -6.3471e-01,  1.6741e+00,  1.5536e+00, -8.0659e-01,
         5.1848e+00, -5.7738e-01, -1.0794e+00, -1.4165e+00,  1.6927e+00,
         6.8167e-02,  2.4239e+00,  5.2611e+00, -9.2002e-01,  1.3713e+00,
        -3.3813e-02, -4.7461e-02,  3.7145e-01,  4.1338e+00,  9.6578e-02,
         5.4680e-01, -1.3746e+00, -6.4792e-01, -1.0332e+00,  1.9833e+00,
         5.5476e+00, -8.2347e-04, -6.2924e-01, -2.1736e-01,  2.7938e+00,
         3.0850e+00, -6.2323e-01, -9.7782e-01, -1.3159e-01, -2.8065e-01,
         6.2473e-01,  2.9782e+00, -2.6650e-02, -1.5331e+00, -1.0964e+00,
         5.8073e+00,  2.8316e+00, -3.0192e-01, -2.3871e-01, -5.5161e-01,
         6.0036e+00,  4.9047e+00, -1.4653e+00, -3.9718e-01,  1.4783e+00,
         1.4943e+00, -1.1373e+00,  3.5641e+00,  3.2546e+00,  9.1045e-01,
         4.1276e+00,  2.3028e+00,  1.9304e+00,  1.2552e+00, -1.1517e+00,
         4.9131e+00, -1.3895e+00, -6.4827e-03,  1.7932e+00, -1.4128e+00,
         2.8741e+00, -1.5299e+00, -1.5519e-01,  1.1136e+00, -1.2105e+00,
         1.0936e+00,  5.0555e+00,  4.2513e+00, -1.4612e+00, -1.0336e+00,
         4.8997e+00, -1.4312e+00,  3.9761e+00,  5.2603e+00, -5.7322e-01,
         6.1133e+00, -6.1886e-02,  1.5074e+00,  3.3506e+00,  2.4455e-02,
         6.1699e+00,  5.8100e+00,  2.6653e+00,  2.7198e+00,  3.8380e+00,
         4.6676e+00,  5.5767e+00,  3.6477e+00,  1.9088e+00,  2.3821e+00,
        -1.0833e+00,  3.1201e+00,  3.6687e+00,  1.8500e+00, -8.3410e-01,
         4.1121e+00, -1.3646e+00,  1.5392e+00,  8.6980e-01,  3.3969e+00,
        -6.2096e-01,  6.0746e+00,  1.9781e+00,  1.1626e+00,  5.2010e+00,
         3.7348e+00,  5.5238e+00,  3.1409e+00,  6.3191e-01, -1.4961e+00,
         7.1711e+00,  1.4267e+00, -1.3529e+00, -4.3303e-02, -1.6533e+00,
         1.3194e+00,  2.9420e+00, -8.0586e-01,  2.5230e+00,  5.6324e+00,
         4.1864e+00, -1.2066e+00, -2.2311e-01,  4.5895e+00,  6.0136e+00,
        -1.3939e+00, -1.0903e+00, -1.3655e+00, -8.0112e-01, -1.3504e+00,
        -2.8483e-01, -5.9249e-01, -3.6576e-01, -1.1203e+00,  5.4482e+00,
        -7.5166e-01, -7.1530e-01, -3.5434e-01, -1.6304e+00, -8.5296e-01,
        -1.4063e+00, -1.0403e+00,  7.3959e-01,  7.7487e-01, -1.0497e+00,
         2.3820e-01, -6.7319e-01,  1.3442e+00,  1.8074e+00, -7.5957e-01,
         8.5953e+00, -1.5172e+00, -9.5804e-01, -8.8503e-01, -1.5498e+00,
         5.1855e+00,  2.1213e+00,  2.0737e+00, -3.7220e-01, -3.3037e-01,
         3.3451e+00,  5.3060e+00,  6.3757e+00, -4.6286e-01,  1.9151e+00,
         4.3759e+00,  2.5748e+00, -4.9988e-01,  6.5923e+00, -6.7311e-01,
        -2.2585e-01,  1.2761e+00, -1.1510e+00,  6.1686e+00,  2.8161e+00,
        -1.5386e+00, -1.0255e+00, -9.5966e-01,  6.2678e+00, -7.7015e-01,
         4.1393e+00,  2.4213e+00,  2.5253e+00, -5.8543e-01, -5.8804e-01,
         1.1411e+00, -2.0910e-01, -1.2952e+00, -1.3148e+00,  2.0743e+00,
        -5.9627e-01, -8.8007e-02, -1.1908e+00, -1.3623e+00,  8.8897e+00,
         4.7461e+00, -1.1292e+00, -1.6009e+00, -9.1010e-01,  1.2100e+00,
        -4.2700e-01,  1.1275e+00,  9.2301e-01, -1.5073e+00,  1.9871e+00,
        -8.6112e-01,  5.6940e+00, -3.7084e-01,  3.3676e+00,  1.6526e+00,
        -1.4884e+00, -1.4165e-01,  5.4742e+00, -1.2304e+00,  3.1909e+00,
         4.5363e+00,  4.5924e-01, -3.2872e-01, -8.3476e-01,  4.5690e+00,
         9.0160e+00,  4.3779e+00,  6.9307e-01,  5.0574e+00,  5.2657e+00,
         8.2315e-01,  4.1070e+00, -6.5245e-01,  7.0327e+00,  1.3643e+00,
         1.3153e+00,  6.9992e+00, -1.3952e+00,  1.3287e+00, -1.5741e+00,
         6.8509e+00, -8.4820e-01,  7.6723e-01, -1.3499e+00, -1.2739e+00,
         8.5670e+00, -1.1128e+00, -3.1953e-01, -9.5448e-02], device='cuda:3'), 'gt_classes': tensor([ 8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
         8, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
       device='cuda:3'), 'gt_boxes': Boxes(tensor([[ 357.2440,   69.3333, 1063.7340,  954.6667],
        [ 357.2440,   69.3333, 1063.7340,  954.6667],
        [ 357.2440,   69.3333, 1063.7340,  954.6667],
        ...,
        [ 357.2440,   69.3333, 1063.7340,  954.6667],
        [ 357.2440,   69.3333, 1063.7340,  954.6667],
        [ 357.2440,   69.3333, 1063.7340,  954.6667]], device='cuda:3'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
{'proposal_boxes': Boxes(tensor([[   0.0000,   98.9322,  754.5909,  747.4250],
        [ 409.7455,   81.5458,  850.2115,  824.6016],
        [  81.5209,    0.0000,  687.1245,  778.4731],
        ...,
        [ 466.7307,  317.6617,  871.2674,  715.6936],
        [ 225.4019,  569.3497,  675.0469,  723.4515],
        [ 654.9288,   51.9268, 1005.6137,  474.0582]], device='cuda:2')), 'objectness_logits': tensor([ 6.1843,  6.8181,  3.7266,  5.5548, -0.5005,  5.2767,  6.7595,  3.4586,
         4.6554,  5.4934,  7.9207,  2.1719,  6.7277,  3.5316,  4.7387, -0.5849,
         6.4888,  6.4786,  6.3382,  3.4239,  6.6100,  6.3748, 23.0259,  4.9444,
         6.6841, -3.6849, -3.1125,  5.0447, -3.1059, -2.9478, -3.5802, -3.4279,
        -3.7544, -1.4776, -3.6872, -1.1546, -3.1885, -1.0790, -3.0229, -1.4091,
        -2.0512, -2.4103,  0.6080, -3.9605, -2.6739, -2.6696,  1.8191, -3.9280,
        -3.6602, -2.9541, -1.3999,  0.2726,  4.4224, -3.9759, -3.6779, -3.8923,
        -2.1367, -0.6700, -2.2110, -3.3028, -3.0347, -2.2497, -3.6945, -1.0345,
        -3.5261, -3.5060, -3.1551, -1.1416, -2.7322, -3.6684, -3.5762, -3.1981,
        -2.9021, -3.3427, -3.5452, -3.4202, -3.1515, -3.7765, -1.2383, -3.2536,
        -1.4767, -3.6150, -1.0087, -2.9419, -3.7786, -2.2064, -3.6423, -0.7832,
        -3.6932,  5.2401, -3.7424, -3.6637,  3.1835, -2.8226, -0.7039,  3.2569,
        -3.8990, -3.3172, -2.8661, -0.4776,  6.2171,  7.7141,  3.5046, -0.5639,
        -3.4792, -3.5379, -2.7872, -3.7936, -2.4757, -3.9623, -1.9885, -1.6961,
        -1.8062, -2.5404, -4.0242, -3.5097, -0.4241, -2.3068, -2.8175,  2.6277,
        -1.9513, -4.0292, -3.8480, -3.4407, -2.9882, -1.0462, -1.0581, -2.3952,
        -3.7918, -3.1461, -1.8626, -1.6949, -3.5597, -2.7204, -3.7225, -2.1681,
        -2.2663,  0.3202,  3.4085, -3.1891,  0.0698, -0.8089, -3.1141, -3.2665,
        -3.7450,  0.6012, -3.9608, -1.1793,  2.3388, -4.0055, -3.6861, -3.2803,
        -3.9853, -2.3701, -2.1056,  0.5569, -1.6069, -3.7404, -3.0092, -3.0390,
        -2.7695, -3.8096, -2.5887, -2.3727, -3.0267, -2.3646, -2.8663, -0.2150,
        -2.2522, -3.6781,  4.0018, -3.4974, -3.9640, -3.9768, -2.6333, -3.0008,
         1.5322, -1.0993,  4.2391, -0.1364, -0.2478,  3.9746, -2.9881,  3.4750,
        -2.4010, -3.7146, -3.0142, -0.2230, -3.8178, -3.5355, -1.7823,  0.0375,
        -3.5634, -3.5596, -3.5739, -3.6936, -3.9995,  2.4479,  2.4363, -3.9684,
        -2.4698, -2.4400, -3.1372, -3.2010, -3.4870, -4.0008, -3.1612, -3.8903,
        -3.3363, -3.8638, -2.6717, -0.7914, -0.0471,  3.6630, -2.7272, -3.6533,
        -3.0357,  1.6522, -3.0898, -3.4516, -2.1801, -2.3927, -3.5158, -1.8385,
        -2.4786,  1.3446, -3.6047, -3.0267, -1.2116, -0.9185, -1.5399,  4.9312,
        -3.3530,  1.2014, -3.4595, -3.1790,  0.3108, -3.6659, -0.9393, -3.4564,
        -2.2326, -3.7086, -3.0305, -3.4843, -1.7955,  1.4051, -2.8536, -3.5663,
        -3.1446, -3.2801, -1.0823,  0.4435,  2.9174,  2.2845,  4.2937, -2.2099,
        -3.7555,  6.9386, -3.7480, -3.6922,  1.4752, -2.5360, -0.2964,  0.2928,
        -3.6746, -1.8165, -2.0198,  0.4490,  0.3490, -3.1650, -0.3049,  4.2225,
        -3.6943, -3.7086, -2.5803, -3.3043, -3.7665,  0.4591, -2.5011, -3.9502,
        -3.7862, -3.8149,  0.8146, -0.2147, -3.4858,  0.2493, -2.1596, -2.7922,
        -2.2346, -2.8252,  4.1180, -3.3242, -4.0182, -2.7121, -2.4859, -3.3144,
        -1.0172, -3.3106, -0.3545, -3.0622,  2.7306, -2.8171,  0.7385, -2.6708,
        -1.4217, -2.8230, -2.6979, -3.0952, -3.7137, -1.4931, -2.8694, -3.0167,
        -3.0419, -3.0780,  1.1120, -2.6793, -3.6536, -1.4281, -3.7746, -2.8157,
        -3.5889, -3.7318,  0.6667, -3.0419, -0.1852, -0.7711, -3.5362, -3.1369,
        -3.5527, -1.2362, -1.5706, -1.6375,  0.9868, -3.5772, -2.7746, -3.6449,
        -4.0165, -3.0460, -1.7178, -1.4692, -1.2807,  5.0529, -3.8664, -0.4010,
        -1.9482, -2.4381, -2.7476,  1.0286, -1.6618, -3.6577, -2.9511,  0.7476,
        -1.8939, -2.8835, -3.9660, -3.8557, -3.7182, -0.2417, -4.0125,  0.6886,
        -3.0025,  3.6420, -2.2187, -0.5359, -3.9446, -2.4775, -1.4609, -1.0165,
        -2.4236, -2.5448,  0.8847, -4.0155,  7.8868, -2.9615, -3.4102, -3.6866,
        -3.9986, -3.5612, -1.7840, -1.3171, -3.1464, -2.9410,  1.0211, -0.5659,
         0.6853, -3.1325, -4.0336, -3.7280, -3.5164, -3.2935, -2.1559, -3.5966,
        -1.7996, -0.0730, -3.5135,  3.5757, -3.5792, -2.8961, -0.0303, -0.9222,
        -3.2775,  0.1479, -3.3202, -3.2075, -3.3582, -2.0738, -1.7606, -2.6511,
        -3.1829, -3.8848, -3.5211, -0.4574, -2.3770, -1.4002, -0.5392, -1.0308,
        -2.2637, -3.7671, -1.8085, -2.5579, -3.9941, -0.9025,  0.1914, -3.7163,
        -3.1809, -2.0600, -3.2638, -1.7490,  0.7614, -3.8457, -1.4753,  0.3793,
         0.3336, -2.0774, -3.1597,  2.8795, -3.6769, -2.2736, -3.0199, -3.4109,
        -1.8784, -1.9718, -3.9326, -3.7405, -0.8388, -2.3515,  1.1920],
       device='cuda:2'), 'gt_classes': tensor([ 9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,
         9,  9,  9,  9,  9,  9,  9, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
       device='cuda:2'), 'gt_boxes': Boxes(tensor([[108.3600, 105.7433, 890.1000, 771.1522],
        [108.3600, 105.7433, 890.1000, 771.1522],
        [108.3600, 105.7433, 890.1000, 771.1522],
        ...,
        [108.3600, 105.7433, 890.1000, 771.1522],
        [108.3600, 105.7433, 890.1000, 771.1522],
        [108.3600, 105.7433, 890.1000, 771.1522]], device='cuda:2'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
{'proposal_boxes': Boxes(tensor([[172.7184, 181.7954, 217.1466, 261.7606],
        [132.5261, 196.0207, 222.1064, 247.1600],
        [169.9612, 201.7772, 240.9799, 265.4483],
        ...,
        [263.7614, 178.1215, 283.1230, 226.6513],
        [476.8296,  88.5270, 660.8512, 166.4873],
        [524.5386, 109.7150, 714.4104, 176.4737]], device='cuda:1')), 'objectness_logits': tensor([ 1.2468e+00, -1.9710e-01, -5.3466e-01, -1.3548e+00,  2.8024e+00,
         7.7815e-01,  6.1224e-03,  2.0588e+00,  3.1840e-01,  2.3026e+01,
        -7.7066e-01,  1.3066e+00, -3.3579e+00, -1.1829e+00, -3.0138e+00,
         2.2034e+00, -2.2267e+00, -4.1518e+00, -2.5128e+00, -4.0076e+00,
        -4.2223e+00, -7.0626e-01,  4.9710e+00, -1.0679e+00, -2.3974e+00,
         6.1955e-01, -2.2817e+00,  8.4580e-02, -2.3194e+00, -8.0123e-01,
        -6.8843e-01, -3.3486e+00, -2.9127e+00, -4.1094e+00, -2.5872e+00,
         2.8761e+00, -3.7113e-01, -4.0871e+00, -3.8334e+00, -2.9204e+00,
        -3.3331e+00, -1.6409e+00,  6.1154e-01, -8.6540e-01, -2.9490e+00,
        -2.9012e-01, -3.3363e+00, -2.8782e+00, -2.9095e+00, -3.7905e+00,
        -4.0198e+00, -2.5955e+00, -1.4688e+00, -3.0264e+00, -4.0330e+00,
         1.2564e-01, -4.0663e+00, -3.7357e+00, -3.9055e+00,  3.5876e-01,
        -3.0145e+00, -2.5936e+00, -3.5078e-01, -4.3043e+00, -1.3818e+00,
        -3.1840e+00, -3.4528e+00, -1.4988e+00, -1.0712e+00, -1.8634e+00,
        -2.6933e+00, -3.9857e+00, -3.4000e+00, -4.0812e+00, -9.7202e-01,
        -2.8188e+00, -4.0326e+00, -2.7730e+00,  9.9008e+00, -3.6293e+00,
        -3.3078e+00, -8.0594e-01, -3.4894e+00, -3.0644e+00,  1.2811e+00,
        -7.5706e-02, -4.2475e+00, -2.2450e+00, -1.5469e+00, -2.1870e+00,
        -1.6843e+00,  7.2538e-01, -1.9917e+00, -4.0394e+00, -1.9109e+00,
        -3.9855e+00, -3.3181e+00, -2.5296e+00, -1.9472e+00, -3.4468e+00,
        -1.4842e+00, -3.9113e+00, -1.9879e+00, -2.4536e+00, -2.7304e+00,
        -1.5925e+00, -2.9932e+00, -4.1990e+00, -3.2064e+00, -3.4209e+00,
         1.4019e-01, -9.9401e-01, -3.3425e+00, -5.4794e-01, -2.0571e+00,
         1.0104e+00, -2.5433e-01, -6.3483e-01, -3.6425e+00,  4.8299e+00,
        -4.3146e-01, -3.2938e+00, -6.1352e-01,  1.1146e+00, -3.4303e-01,
        -3.3965e+00, -4.7315e-01, -6.3197e-01, -4.2739e+00, -8.2289e-01,
        -1.6346e+00,  1.0550e+00, -1.9135e+00, -1.4826e+00, -3.5329e+00,
        -3.7205e+00, -3.8905e+00, -2.5997e+00, -1.5321e+00, -2.3122e+00,
        -7.9239e-01, -3.6782e+00,  2.9764e-01, -2.6563e+00, -1.8090e+00,
         1.9463e+00, -4.0526e+00, -3.0456e+00, -3.2247e+00, -3.2054e+00,
        -4.1849e+00, -2.5451e+00, -3.3608e+00, -2.4818e+00, -3.4541e+00,
        -2.7861e+00, -3.7949e+00, -2.1183e+00,  7.1060e-01, -3.9749e+00,
        -4.2310e-01, -4.1855e+00, -3.1073e+00, -3.8044e+00, -1.1133e+00,
        -3.1712e+00, -2.7516e+00,  6.9755e-01, -1.4022e+00, -4.2519e+00,
        -2.4334e+00, -4.2019e+00, -3.5221e+00,  1.5112e+00, -4.0836e+00,
        -3.6076e+00,  5.4600e-01, -2.9490e+00, -4.0844e+00, -2.2456e+00,
        -3.5263e+00, -3.2990e+00, -2.9933e+00,  4.4746e-01, -2.8819e-01,
         1.3395e+00, -3.3384e+00, -4.1350e+00, -4.0577e+00, -3.1199e+00,
        -3.4647e+00, -1.7485e+00, -1.5006e+00, -1.1230e+00, -1.4534e+00,
        -3.7602e+00, -4.2226e+00, -8.6544e-01, -1.0197e+00, -1.8894e+00,
        -3.9027e+00, -1.0980e+00, -1.2759e+00, -4.2790e+00, -3.8290e+00,
        -3.8846e+00,  9.5830e-01, -3.0696e+00, -1.3693e-01, -6.3316e-01,
        -2.5088e+00, -3.0858e+00, -2.9424e+00,  3.5602e-01, -4.0774e+00,
        -1.3223e+00, -2.0586e+00, -3.9993e+00, -3.3615e+00, -2.7601e+00,
        -8.9631e-01,  1.2060e+00, -3.0152e+00, -4.2052e+00, -2.0582e+00,
        -6.5367e-02, -3.8860e+00, -2.6222e+00, -3.5975e+00,  2.6307e-02,
        -3.4782e+00,  2.6696e-01, -3.2535e+00,  3.4560e+00, -3.8234e+00,
        -2.4496e+00, -1.4287e+00, -3.7884e+00, -4.1527e+00, -2.4996e+00,
        -2.8896e+00, -2.3611e+00, -1.7653e+00, -3.4921e+00, -2.4927e+00,
        -3.5191e+00, -1.0564e+00, -1.5259e-01, -3.1527e+00, -1.6289e+00,
        -3.9021e+00, -3.7199e+00,  2.2054e+00, -3.8713e+00, -3.5719e+00,
        -2.4930e+00, -3.6731e+00, -2.9918e+00, -4.0658e+00, -4.0847e+00,
        -4.2024e+00, -1.9672e+00, -2.1799e+00, -3.1752e+00, -1.9710e+00,
        -4.1431e+00, -2.2365e+00,  9.7022e-01, -4.0854e+00, -5.2744e-01,
        -2.4329e+00, -1.5896e+00, -3.9298e+00, -2.4247e+00, -3.5151e+00,
        -3.5384e+00, -5.4303e-01,  2.9841e+00, -3.0551e+00, -3.3530e+00,
        -3.8217e+00, -3.7076e+00, -3.0270e+00,  3.6631e-02, -1.1594e+00,
        -5.2869e-02, -3.0679e+00, -2.7017e+00, -2.8001e+00, -3.6737e+00,
        -3.7027e+00, -3.9111e+00, -2.3574e+00, -3.9647e+00, -3.6689e+00,
        -2.8650e+00, -1.1876e+00, -3.8055e+00, -3.8991e+00,  2.9427e-02,
        -2.7760e+00, -7.2538e-01,  8.7913e-01, -3.4931e+00,  3.8764e-02,
        -3.7417e+00, -1.0327e+00, -3.4969e+00, -3.2276e+00, -2.5787e+00,
        -3.5416e+00, -2.9732e+00, -3.8739e+00, -2.2459e-01, -3.8994e+00,
        -2.4299e+00,  2.5349e+00, -1.0011e+00, -3.7070e+00,  8.6443e-01,
        -1.9197e+00, -3.5352e-01, -1.6877e-01, -4.0814e+00, -4.2038e+00,
        -1.7079e+00, -2.8843e+00,  8.4619e-02, -4.2678e+00, -2.8719e+00,
        -3.8556e+00, -5.1604e-01, -3.5171e-01, -1.3521e+00, -2.9152e+00,
         4.6469e-01, -2.4955e+00, -2.5945e+00, -3.0408e+00, -3.2952e+00,
        -4.8376e-01, -1.2805e-01, -3.5455e+00, -4.1973e+00, -3.7661e+00,
        -3.7992e+00, -3.6238e+00,  2.1329e+00, -3.6494e+00,  3.2563e+00,
        -2.5962e+00, -3.4766e+00, -4.2784e+00, -9.5076e-01, -3.1171e+00,
        -1.6337e+00, -4.0776e+00, -1.9834e+00, -4.1022e+00, -3.8190e+00,
        -2.5568e+00, -3.8263e+00, -3.5644e+00, -4.0086e-01, -2.1924e+00,
        -2.1275e+00, -1.8861e+00, -3.8194e-01,  1.4648e+00, -3.0714e+00,
        -4.2455e+00, -2.8307e+00, -4.1512e+00, -2.3301e+00, -1.1280e+00,
        -3.3436e+00, -4.0747e+00, -3.2383e+00, -2.5068e+00, -3.3211e+00,
        -3.6008e+00,  4.4896e-01, -2.1559e-01, -2.9673e+00, -3.4362e+00,
        -7.8827e-01, -2.1424e+00, -3.7347e+00, -4.0307e+00, -3.4117e+00,
        -3.9191e+00, -4.1104e+00, -2.1375e-01, -2.3856e-02, -8.5797e-02,
        -1.5612e+00, -3.8891e+00, -3.4063e+00, -2.8901e+00, -2.3617e+00,
        -2.7723e+00,  1.9599e+00, -4.2259e+00,  1.3450e+00, -3.8616e+00,
        -7.0732e-01, -4.1398e+00, -2.2992e+00,  1.0649e+00, -1.9255e+00,
        -3.8723e+00, -1.3411e+00, -1.0637e+00, -4.1422e-02, -3.5758e+00,
        -3.1960e-01, -2.5269e+00, -3.0317e+00, -4.1395e+00, -2.0460e+00,
        -3.5329e+00, -3.2904e+00, -3.1126e+00, -2.1708e+00, -1.8091e+00,
        -1.8936e+00, -4.2637e+00, -4.2583e+00, -2.3476e+00, -3.4820e+00,
        -4.1657e+00, -3.2615e+00, -1.5593e+00, -3.7369e+00, -1.0567e+00,
         1.5047e+00, -2.9041e-01, -4.2178e+00, -4.2103e+00, -4.2187e+00,
        -3.4884e+00, -3.5888e+00,  5.6545e-01, -3.8938e+00, -2.5715e+00,
        -1.4919e+00, -2.7951e+00, -3.8876e+00, -3.2434e+00, -3.7358e-01,
        -2.7811e+00, -1.0741e+00,  1.0587e-01, -4.0299e+00, -8.4370e-01,
        -2.3678e+00, -4.3059e+00,  1.5000e+00, -1.4696e+00, -3.4085e+00,
        -3.1389e+00, -3.1997e+00, -2.9949e+00, -4.2973e+00, -3.5600e+00,
        -2.7797e-01, -3.0278e+00, -1.8693e+00, -3.3791e+00,  6.4342e-02,
        -6.8378e-01, -4.2713e+00, -2.8315e+00, -2.8560e+00, -4.2356e+00,
        -4.0909e+00, -1.2987e+00, -2.4730e+00,  8.5582e-01, -1.3524e+00,
        -2.5218e+00,  8.1097e-01,  1.0877e+00, -2.6427e+00, -7.3125e-01,
        -1.4742e+00,  3.5860e-01,  3.1455e+00, -1.3722e+00,  1.5341e+00,
        -4.1677e+00, -3.2896e+00,  1.6581e+00, -2.9069e+00, -1.5756e+00,
        -3.2710e+00, -2.4336e+00, -3.6643e+00, -3.2398e+00, -3.0792e+00,
        -3.7154e+00, -2.0230e+00, -3.8326e+00, -2.4599e+00, -3.2004e+00,
        -4.9362e-01,  1.3058e+00,  2.8152e+00, -2.4080e+00, -2.9368e+00,
        -1.2771e+00, -3.6344e+00], device='cuda:1'), 'gt_classes': tensor([ 6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:1'), 'gt_boxes': Boxes(tensor([[170.5160, 192.3821, 223.1220, 254.0896],
        [170.5160, 192.3821, 223.1220, 254.0896],
        [170.5160, 192.3821, 223.1220, 254.0896],
        ...,
        [170.5160, 192.3821, 223.1220, 254.0896],
        [170.5160, 192.3821, 223.1220, 254.0896],
        [170.5160, 192.3821, 223.1220, 254.0896]], device='cuda:1'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Traceback (most recent call last):
  File "main.py", line 38, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 67, in launch
    mp.spawn(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 230, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 188, in start_processes
    while not context.join():
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 150, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 0 terminated with the following error:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/setuptools/_distutils/version.py
[09/17 12:05:09 detectron2]: Rank of current process: 0. World size: 4
[09/17 12:05:09 detectron2]: Full config saved to checkpoints/voc/1726571009/fsod1/5shot/seed1/config.yaml
[09/17 12:05:10 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
[09/17 12:05:10 fvcore.common.checkpoint]: Reading a file from 'torchvision'
[09/17 12:05:20 detectron2]: Loss: 0.0005
[09/17 12:05:20 detectron2]: [CLS] Use dropout: p = 0.8
[09/17 12:05:20 d2.data.build]: Removed 0 images with no usable annotations. 100 images left.
[09/17 12:05:20 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 12:05:20 d2.data.build]: Using training sampler TrainingSampler
[09/17 12:05:20 d2.data.common]: Serializing 100 elements to byte tensors and concatenating them all ...
[09/17 12:05:20 d2.data.common]: Serialized dataset takes 0.03 MiB
[09/17 12:05:21 fvcore.common.checkpoint]: [Checkpointer] Loading from dataset/check/voc/1726356812/base1/model_final-fsod.pth ...
WARNING [09/17 12:05:21 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
roi_heads.box_predictor.fc.weight
roi_heads.box_predictor.fsup
[09/17 12:05:21 d2.engine.train_loop]: Starting training from iteration 0
{'proposal_boxes': Boxes(tensor([[ 104.3925,    0.0000,  825.0160,  646.6732],
        [   0.0000,    0.0000,  944.6337,  714.0953],
        [ 278.3245,    0.0000, 1256.3811,  646.8578],
        ...,
        [ 697.2153,   37.3908, 1069.4562,  438.5135],
        [ 708.0059,  117.5614,  925.7076,  206.2966],
        [   0.0000,  123.3474,   97.6062,  681.0938]], device='cuda:2')), 'objectness_logits': tensor([ 3.6860e+00,  6.3728e+00,  3.5302e+00,  5.3833e+00,  5.1757e+00,
         2.3026e+01,  4.4626e+00,  3.8913e+00,  4.9992e+00,  5.9232e+00,
         6.1205e+00,  3.8264e+00,  4.7219e+00,  6.1018e+00, -2.0253e+00,
         4.7894e+00,  4.9146e+00, -3.4042e+00, -3.7162e+00, -9.2123e-01,
        -3.2333e+00, -2.4491e+00, -3.3448e+00, -2.8625e+00, -3.6246e+00,
        -3.4114e+00, -2.5541e+00,  6.4844e-01, -3.3658e+00,  4.6342e+00,
        -2.0951e+00, -5.1040e-01,  1.8314e+00, -1.3387e+00,  1.9265e+00,
         8.0618e-01, -2.7521e+00, -2.3850e+00,  2.6656e+00, -3.4887e+00,
        -3.5839e+00, -3.1482e+00,  6.4337e+00, -2.7009e+00, -1.5965e+00,
        -3.1818e+00, -1.3253e+00, -3.7445e+00, -2.5340e+00,  6.7281e+00,
        -1.2758e+00, -2.9977e+00, -1.8461e+00,  5.8600e+00, -3.5474e+00,
        -3.4776e-01, -3.2738e+00,  2.8258e+00, -1.0720e+00, -3.4593e+00,
        -3.5566e+00, -2.3333e+00, -1.8428e+00, -2.5541e+00, -1.6702e+00,
        -2.9362e+00, -3.6454e+00,  9.4453e-01, -3.3006e+00, -3.6303e+00,
        -2.8885e+00, -2.3228e+00,  8.3281e-01,  4.0937e+00, -3.4025e+00,
        -2.2291e+00, -1.8562e+00, -2.5950e+00, -3.5725e+00,  4.1296e+00,
        -3.3053e-03, -4.1355e-01, -2.9324e+00, -2.4132e+00,  1.7421e+00,
        -2.8878e+00, -2.2823e+00, -2.5601e+00,  5.6020e+00, -1.1971e+00,
        -2.8739e+00, -5.2365e-01, -5.6993e-01, -2.7718e+00, -2.3654e+00,
        -3.4722e+00, -3.3359e+00, -1.8678e+00, -2.8662e+00, -2.2395e+00,
         9.5662e-01, -2.7683e+00, -3.3846e+00, -3.7300e+00, -3.4047e+00,
        -3.4737e+00, -2.1169e-01, -2.5118e+00, -2.6442e+00, -3.4814e+00,
        -2.8057e+00,  5.2260e+00, -2.4621e+00,  2.7356e-01, -2.7648e+00,
        -3.5752e+00, -3.2875e+00, -1.9722e+00, -3.5053e+00, -2.1342e+00,
        -3.2650e+00,  3.9350e+00, -3.3528e+00, -2.6476e+00, -3.5336e+00,
        -2.4490e+00, -3.1153e+00, -3.6908e+00, -3.6013e+00, -4.6378e-01,
         3.5345e+00,  2.2853e+00, -3.7231e+00, -2.7500e+00, -1.8989e+00,
        -3.6261e+00,  4.1833e+00, -2.6587e+00, -3.6455e+00, -5.3118e-01,
         3.8965e+00, -1.2869e+00,  3.8863e+00, -3.1432e+00, -3.4240e+00,
        -3.1806e+00, -2.9140e+00, -3.4084e+00, -2.7895e+00, -2.2749e+00,
        -6.4546e-01, -3.2376e+00,  6.1086e+00, -3.7405e+00, -2.9237e+00,
        -2.9121e+00, -3.6729e+00, -3.4211e+00, -2.4739e+00, -1.6907e+00,
        -3.1078e+00, -3.4276e+00, -3.3478e+00, -2.5518e+00, -3.5604e+00,
        -3.7134e+00, -2.2845e+00, -3.3134e+00, -2.9094e+00, -3.5489e+00,
        -3.3597e+00, -1.6016e+00, -3.6184e+00, -2.9689e+00, -3.3124e+00,
        -9.1895e-01, -2.2470e+00, -2.3936e+00, -1.8430e+00, -2.0460e+00,
        -3.7086e+00, -3.2064e+00, -2.8560e+00, -3.1888e+00, -2.3081e+00,
        -3.3797e+00, -2.1398e+00, -3.1630e+00,  2.7816e+00,  4.0515e+00,
        -3.5958e+00, -1.9289e+00, -3.3905e+00, -3.5059e+00, -3.2876e+00,
        -1.0096e+00,  4.0495e+00, -1.0933e+00,  1.0173e+00, -3.6771e+00,
         2.2526e+00, -2.7202e+00, -2.5733e+00, -1.6072e+00, -3.1924e+00,
        -3.7232e+00,  3.8432e+00, -2.4403e+00, -1.6730e-01, -3.4075e+00,
        -3.4937e+00,  5.1065e+00,  5.8600e+00, -2.8595e+00, -3.1089e+00,
         3.3703e+00, -3.4741e+00, -3.5057e+00, -3.7224e+00,  1.9730e+00,
        -3.1947e+00, -2.6595e+00,  1.7763e-01,  7.0662e+00, -2.9924e-01,
        -2.6192e+00, -6.6018e-01, -3.5205e+00,  1.1557e+00, -3.4552e+00,
        -2.8283e+00, -3.3193e+00,  2.5540e+00, -3.3473e+00, -2.0532e+00,
        -3.3121e+00, -3.2520e+00,  5.1264e+00, -3.0344e+00, -2.6489e+00,
         4.6097e+00, -3.7056e+00,  8.6777e-01, -2.8758e+00, -3.6069e+00,
        -2.0243e+00, -2.8508e+00, -1.7475e+00, -2.9648e+00, -3.4509e+00,
         3.9453e+00, -8.3714e-01, -1.6276e+00, -2.3705e+00,  5.6131e-02,
         2.5524e-01, -3.0655e+00, -2.2441e+00, -3.1896e-01, -3.7554e+00,
        -3.6892e+00, -2.8691e+00, -2.6177e+00, -3.2569e+00, -1.7169e+00,
        -3.0289e+00, -2.9915e+00, -1.5152e+00, -3.1272e+00, -2.7300e+00,
        -3.5836e+00, -4.3439e-01, -3.4218e+00, -2.5667e+00, -3.5834e+00,
        -3.6914e+00, -2.7932e+00, -3.1030e+00, -2.8382e+00, -1.8203e+00,
        -3.4856e+00, -6.1555e-01, -3.7014e+00, -2.0453e+00, -6.3590e-01,
        -3.0475e+00,  4.3043e+00,  5.7016e-01, -1.9233e+00, -2.1199e+00,
        -1.6523e+00, -1.9392e+00, -1.0551e-01, -2.5972e+00, -3.7112e+00,
        -1.9536e-01, -1.1297e+00, -3.6298e+00, -1.7623e+00, -3.1614e+00,
        -3.7256e+00,  2.9058e+00, -2.3186e+00, -9.7716e-01,  2.0428e+00,
        -2.4996e+00, -3.6904e+00,  2.1923e-01, -1.4800e+00, -1.8565e+00,
        -2.8353e+00, -2.5489e+00,  3.4668e+00,  6.6951e-01, -2.0171e+00,
        -3.4162e+00, -2.1955e+00, -3.0751e+00, -3.2657e+00, -3.6953e+00,
         1.4316e+00, -3.7319e+00, -3.5301e+00, -8.8236e-01, -1.8376e+00,
        -3.6449e+00,  3.8772e+00,  3.0736e+00, -3.4905e+00, -3.6722e+00,
        -3.0950e+00,  6.7457e-01, -1.8723e+00, -2.8312e+00, -3.5249e+00,
        -3.1161e+00], device='cuda:2'), 'gt_classes': tensor([12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20], device='cuda:2'), 'gt_boxes': Boxes(tensor([[ 160.8280,    0.0000, 1076.5100,  609.7297],
        [ 160.8280,    0.0000, 1076.5100,  609.7297],
        [ 160.8280,    0.0000, 1076.5100,  609.7297],
        ...,
        [ 160.8280,    0.0000, 1076.5100,  609.7297],
        [ 160.8280,    0.0000, 1076.5100,  609.7297],
        [ 160.8280,    0.0000, 1076.5100,  609.7297]], device='cuda:2'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-3:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 37011) is killed by signal: Terminated. 
{'proposal_boxes': Boxes(tensor([[  56.5922,  390.3000,   99.5019,  482.1880],
        [  37.7899,  383.2025,  116.1213,  485.9785],
        [  26.3603,  407.6130,   95.1218,  461.8933],
        ...,
        [1108.0129,  483.7093, 1127.9829,  524.9485],
        [ 660.2014,  409.7970,  757.1582,  476.4801],
        [ 116.7563,  352.9651,  175.6786,  478.9812]], device='cuda:0')), 'objectness_logits': tensor([ 8.4438e-01, -2.5857e+00,  2.1188e-01, -1.2256e-01,  1.3675e+00,
         4.2995e+00,  2.2380e-01,  2.3598e+00,  2.3026e+01,  6.9421e-01,
         9.8376e-01,  1.0038e+00,  3.5443e-01, -2.0668e+00,  2.0016e+00,
        -5.2192e-01,  2.7486e+00, -4.2851e-01,  3.3909e+00, -1.2284e+00,
        -1.1481e+00, -3.4018e+00, -1.9977e+00,  2.0341e+00, -2.4161e+00,
        -1.4534e+00, -3.5027e+00, -1.5693e+00, -7.2185e-01, -2.9767e+00,
        -1.4292e+00, -6.7581e-01, -3.3958e+00,  2.8036e+00, -3.4907e+00,
        -1.4729e+00, -2.9368e+00, -1.6729e+00, -1.0210e+00, -3.5106e+00,
        -7.6895e-01, -1.8377e+00, -2.7362e+00, -3.4146e+00,  1.7794e+00,
        -1.3191e+00,  2.9176e+00, -2.5682e+00, -6.2303e-01, -2.9130e+00,
        -3.0050e+00,  1.7621e+00, -2.7463e+00, -4.0224e-01, -1.7203e+00,
        -3.1937e+00, -3.5355e+00, -2.3209e+00,  3.6812e-01, -1.3923e+00,
        -1.7190e+00, -2.2757e+00, -3.4390e+00, -1.0688e+00, -1.2983e+00,
        -3.0077e+00,  9.2839e-01, -1.8831e+00, -1.1501e-01,  1.6547e+00,
        -2.8221e+00, -3.5420e+00, -1.5952e+00, -2.2611e-01, -3.5112e+00,
        -3.5242e+00, -2.6685e+00, -2.7776e+00, -2.7358e+00, -3.4555e+00,
        -2.6522e+00, -2.0926e-01,  3.7950e+00,  1.7796e+00, -2.4201e+00,
         1.2480e+00, -2.7843e+00,  1.9057e-01,  1.4161e+00, -6.0023e-01,
         2.9235e+00, -3.3905e+00, -2.5535e+00, -4.5442e-01, -2.5351e+00,
        -7.9242e-01, -3.2109e+00, -1.3102e+00,  4.5108e-03, -2.6665e+00,
        -1.1133e+00, -2.6450e+00,  2.1149e+00, -3.4320e+00, -2.6740e+00,
        -3.2651e-01, -2.6526e+00, -2.3065e+00, -3.1991e+00, -2.8695e+00,
        -3.3127e+00,  2.3663e-01, -2.4945e+00, -1.2904e+00, -3.4824e+00,
        -3.0999e+00, -2.0458e-01, -3.3453e+00, -2.3843e+00, -1.6797e-01,
        -3.3228e+00, -1.8303e+00, -9.9088e-01,  1.6539e+00, -3.0824e+00,
        -3.1109e+00, -1.7951e+00,  1.2929e+00, -3.5060e+00, -1.1550e+00,
        -2.7150e+00, -3.1319e+00, -7.6369e-01, -1.1746e+00, -2.1758e+00,
        -1.2396e+00, -3.5336e+00, -2.9935e+00, -2.0431e+00, -2.1665e+00,
        -8.5423e-01, -3.3894e+00, -2.8739e+00, -3.1358e+00, -3.1813e-01,
        -3.1734e+00, -2.5597e+00, -3.3488e+00, -3.5499e+00, -2.7886e+00,
        -3.0604e+00, -2.5219e+00, -2.0409e+00,  1.7672e+00, -1.6798e+00,
        -3.2524e+00, -8.7472e-01, -3.1109e+00, -3.4437e+00,  4.6522e+00,
        -1.7267e-01,  1.4292e+00, -7.5426e-01, -2.9293e+00, -3.4189e+00,
        -2.1419e+00,  2.1606e+00, -2.0268e-01, -3.5343e+00, -2.5212e+00,
        -3.0944e+00, -1.5852e+00, -1.2196e+00, -3.5013e+00, -3.4179e+00,
        -3.1863e+00,  3.1982e-01,  1.5913e+00, -1.0378e-01, -1.8244e+00,
        -3.1385e+00, -2.4160e+00, -3.0434e+00, -1.7204e+00, -3.5487e+00,
        -2.2382e+00, -1.8108e+00,  2.5092e+00, -2.5927e+00, -2.0087e+00,
        -3.4983e+00, -3.2876e+00, -3.3950e+00, -1.7556e+00, -8.0037e-01,
        -2.4495e+00, -3.2411e+00,  1.4532e+00,  3.6753e+00, -2.3398e+00,
        -3.1739e+00, -3.3688e+00,  1.6163e+00, -1.5975e+00, -3.1665e+00,
        -2.6923e+00,  3.3724e-01, -3.2076e+00, -2.2371e+00, -2.7586e+00,
        -2.8836e+00,  2.3069e+00,  3.7491e+00, -1.8153e+00, -3.1496e+00,
        -2.5270e+00, -2.4577e+00, -2.8577e+00, -7.8476e-01, -2.3045e+00,
        -3.1104e+00, -1.0936e-01, -2.1832e+00, -2.5558e+00, -2.8551e+00,
        -2.5863e+00, -3.2322e+00, -2.7981e+00, -2.2030e+00, -6.7457e-01,
        -3.1976e+00, -3.5306e+00, -3.4332e+00, -2.3248e+00, -3.4471e+00,
        -3.4673e+00, -5.9907e-02, -2.4556e+00, -1.7431e+00, -2.2812e+00,
        -2.9108e-01, -2.3624e+00, -3.4921e+00, -3.2508e+00,  3.0858e+00,
        -2.1503e+00, -1.9513e+00, -1.5727e+00, -1.8573e+00, -3.4028e+00,
        -2.9897e+00, -3.0151e+00, -3.4877e+00, -1.4337e+00, -2.0927e-01,
        -2.9430e+00, -3.4073e+00,  6.6564e-01,  8.7226e-01, -3.0442e+00,
        -2.9104e+00, -3.3797e+00, -3.5476e+00, -1.8408e+00, -2.2251e+00,
        -8.1426e-01, -3.5296e+00,  3.4205e+00, -6.0307e-01, -1.0287e+00,
        -1.1451e+00, -1.2421e+00, -3.5879e-01, -2.2154e+00, -3.1521e+00,
        -3.1338e+00, -3.1249e+00,  4.3900e-01, -1.4370e+00, -2.5478e+00,
        -1.1349e+00, -2.6166e+00,  1.5682e+00, -2.2468e+00, -1.3057e+00,
         6.4611e-01, -3.1330e+00, -3.0100e+00, -3.1475e+00, -1.5939e+00,
        -3.2353e+00, -2.8840e+00, -8.8285e-01, -2.1095e+00, -3.3175e+00,
        -1.6552e+00, -2.0472e+00, -3.4514e+00, -1.4578e+00, -2.8652e+00,
        -7.6699e-01,  8.4725e-01,  8.5594e-01, -2.4268e-01, -3.0544e+00,
        -5.2310e-01, -1.6566e+00, -3.1481e+00, -1.8600e+00, -3.1682e+00,
        -1.1003e-01, -7.9338e-01, -3.4577e+00, -2.2078e+00, -2.2823e-01,
        -2.9178e+00,  1.2326e+00,  5.5247e+00, -2.4498e+00, -2.3755e+00,
        -3.0975e+00, -2.0905e+00,  5.4588e+00, -2.2677e+00, -3.3942e+00,
        -3.0276e+00, -1.7066e+00, -2.6277e+00, -3.0789e+00, -3.0272e+00,
        -1.1762e+00, -2.6934e+00, -2.3629e+00, -2.8628e+00, -5.7903e-01,
        -1.2398e+00, -3.3619e+00, -2.4172e+00, -3.0146e+00, -2.8062e+00,
        -1.7584e-01,  1.8414e+00, -3.4620e+00, -3.5073e+00, -2.7655e+00,
        -3.3925e+00,  1.1583e-01, -9.7564e-01, -3.0767e+00,  7.6744e-01,
        -3.3991e+00, -1.7648e+00, -1.0219e+00, -2.9173e+00, -3.4772e+00,
        -1.1311e+00,  2.3944e+00, -2.8775e+00, -2.6224e+00, -2.8261e+00,
        -2.3121e+00, -3.2970e-01, -2.8505e+00, -3.2108e+00, -3.4632e+00,
        -3.3626e+00, -5.0423e-01, -2.9429e+00, -3.3120e+00, -2.7498e+00,
        -3.0163e+00, -1.3213e+00, -2.9303e+00, -7.6454e-01, -1.7145e+00,
         2.4710e+00, -3.1783e+00, -2.8372e+00, -2.5565e+00, -1.5493e+00,
        -7.1050e-01, -2.9463e+00, -1.2942e+00,  1.6303e+00, -3.4347e+00,
        -2.6771e+00, -1.0004e-01, -3.2800e+00, -1.6020e+00, -3.4950e+00,
         2.1467e+00, -2.7703e+00, -3.3567e+00, -2.7537e-01, -2.5635e+00,
        -3.1882e+00, -3.0300e+00, -3.2421e+00, -1.5480e+00, -2.9044e+00,
         1.7532e+00, -3.2291e+00, -2.5563e+00, -2.7732e+00, -2.8450e+00,
        -1.2638e+00, -2.5955e+00,  3.4318e+00, -4.5855e-01, -1.0508e+00,
        -2.1271e+00,  1.4418e-01, -2.4186e+00, -1.9208e+00, -2.2105e+00,
        -3.1768e+00, -2.4117e+00, -2.3326e+00, -1.7359e+00,  9.5226e+00,
         2.7222e+00, -2.5399e+00, -3.6923e-02, -2.3309e+00, -3.0726e+00,
        -2.6776e+00, -3.4618e+00, -1.5999e+00, -6.2536e-01, -2.2774e+00,
        -3.0747e+00, -3.5231e+00,  4.0809e+00, -3.3018e+00, -2.0444e+00,
        -1.3888e+00, -1.4030e+00, -1.2788e+00, -2.8415e+00, -2.3628e+00,
         1.0408e+00, -1.8371e+00, -2.6327e+00,  5.9515e-02, -3.0106e+00,
        -2.4832e+00,  2.2030e+00, -2.4851e+00, -6.3417e-01, -1.3774e+00,
        -3.0526e+00,  1.6872e+00, -1.5754e+00, -3.4390e+00, -3.2479e+00,
        -2.7308e+00, -3.0619e+00,  4.4917e+00,  1.0121e+00, -1.4784e+00,
        -3.2395e+00, -2.3359e+00,  7.9617e-01, -1.3409e+00, -1.3519e+00,
        -1.9253e-02, -1.3333e+00, -1.9107e+00, -2.5174e+00, -2.0197e+00,
        -2.7171e+00, -1.3384e-02,  3.0652e-01,  4.5953e+00,  1.1969e+00,
        -2.9612e+00, -2.9241e+00, -3.2557e+00, -2.0559e+00, -6.3639e-01,
        -2.5681e+00, -1.5778e+00, -1.0312e+00, -1.4310e+00, -2.6637e+00,
        -1.2927e+00, -2.7383e+00, -3.2123e+00,  3.1381e-01, -3.1916e+00,
         1.4893e+00, -2.2949e+00, -1.6746e+00, -1.3612e+00, -1.1030e+00,
         2.5728e+00, -3.3752e+00, -2.6800e+00, -1.8160e+00, -1.2573e+00,
        -1.7153e+00,  7.0152e-01, -3.0442e+00,  4.7193e-01, -7.0100e-01,
         2.7067e+00, -3.2392e+00, -3.2292e+00, -2.0153e+00, -1.4970e+00,
        -2.3467e+00,  1.9616e-02], device='cuda:0'), 'gt_classes': tensor([18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
        18, 18, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:0'), 'gt_boxes': Boxes(tensor([[ 34.6360, 395.9467,  98.9600, 475.1360],
        [ 34.6360, 395.9467,  98.9600, 475.1360],
        [ 34.6360, 395.9467,  98.9600, 475.1360],
        ...,
        [ 34.6360, 395.9467,  98.9600, 475.1360],
        [ 34.6360, 395.9467,  98.9600, 475.1360],
        [ 34.6360, 395.9467,  98.9600, 475.1360]], device='cuda:0'))}
ERROR [09/17 12:05:31 d2.engine.train_loop]: Exception during training:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!
[09/17 12:05:31 d2.engine.hooks]: Total training time: 0:00:10 (0:00:00 on hooks)
[09/17 12:05:31 d2.utils.events]:  iter: 0    lr: N/A  max_mem: 4139M
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 37071) is killed by signal: Terminated. 
{'proposal_boxes': Boxes(tensor([[  26.6645,  414.9464,  176.7109,  715.3870],
        [   1.9940,  351.9035,  159.3859,  747.0396],
        [  52.6634,  372.2463,  181.7904,  726.0208],
        ...,
        [1097.0480,  724.8306, 1142.1556,  747.0452],
        [ 393.5416,  443.2057,  596.2134,  545.5529],
        [1277.0751,  166.2865, 1327.6647,  497.9515]], device='cuda:1')), 'objectness_logits': tensor([-3.1651e-01, -2.9210e+00,  1.5171e-02, -3.7881e+00,  3.2045e+00,
         5.2463e-01,  1.1712e+00, -3.0658e+00,  2.3026e+01, -2.8588e+00,
        -2.5928e+00, -3.5916e+00, -3.7342e+00, -1.4149e+00, -4.3037e-01,
        -2.7770e+00, -1.7370e+00, -1.9792e+00, -2.8769e+00, -2.5858e+00,
        -3.3662e+00,  4.2795e-01, -3.7486e+00, -1.1539e+00, -3.8124e+00,
        -3.6526e+00, -2.5194e+00,  7.5555e-02, -3.2727e+00, -1.2771e+00,
         1.5617e+00, -3.4229e+00, -3.1573e+00, -2.4476e+00, -9.9909e-01,
        -3.8909e+00, -3.4536e+00, -1.8316e+00, -3.3881e+00, -1.2447e+00,
        -2.3794e+00, -9.2378e-01, -2.5033e+00, -3.5501e+00, -3.4120e+00,
        -2.0806e+00, -2.0097e+00, -2.8934e+00,  2.5917e+00,  8.8531e-01,
         3.0313e-01, -2.1462e+00, -3.2875e+00, -2.9904e+00, -2.4765e+00,
        -3.6920e+00, -3.4434e+00, -2.8137e+00, -2.5595e+00, -1.2241e+00,
        -3.4871e+00, -3.5704e+00, -2.4831e+00, -2.1079e+00, -3.6020e+00,
        -3.4546e+00, -3.4830e+00, -2.1823e+00, -3.0708e+00, -2.0191e+00,
        -3.6516e+00, -2.9012e+00, -3.0542e+00, -3.6509e+00, -1.1557e+00,
         8.1050e-01, -3.3291e+00, -3.0061e+00, -3.2010e+00, -3.7851e+00,
        -3.5003e+00, -3.4698e+00,  3.8866e-01, -2.4491e+00, -1.9287e+00,
        -1.3697e+00, -2.0192e+00, -3.8834e+00, -3.7231e+00,  4.5502e-01,
         1.3497e+00,  2.3023e+00, -1.2614e-01, -2.3274e+00, -8.2529e-01,
        -1.8512e+00, -3.8229e+00,  1.2268e+00, -1.6746e+00, -1.9874e+00,
        -3.3669e+00,  2.0559e-01, -3.8647e+00, -3.7303e+00, -1.6631e-01,
        -1.2228e+00, -3.8203e+00, -2.5131e+00, -2.4559e+00, -2.9802e+00,
        -3.1609e+00, -3.4164e+00, -3.0663e+00,  1.7024e-01, -3.3899e+00,
        -2.6520e+00, -1.4558e+00,  2.7350e+00, -1.3801e-01, -3.8508e+00,
        -3.2698e+00,  2.3774e+00, -3.2024e+00, -2.2702e+00,  2.7316e-01,
        -3.0831e+00,  1.2708e-01, -2.9302e+00,  1.5716e-01, -1.0638e-01,
        -1.8287e+00, -1.3315e+00, -3.3376e+00, -1.7546e+00, -1.8031e+00,
        -2.4374e+00, -2.5951e+00, -2.7647e+00, -3.3027e+00, -2.4044e+00,
        -3.8709e+00, -3.5928e+00, -3.7385e+00, -3.5765e+00, -1.0046e+00,
        -3.1927e+00, -2.8841e+00, -2.3709e+00, -3.8709e+00, -2.6072e+00,
         3.4436e+00, -3.7398e+00, -1.2811e+00, -3.5537e+00, -3.6355e+00,
        -3.1384e+00, -2.4010e+00,  5.7975e-01, -3.7806e+00, -2.6519e+00,
        -2.8552e+00, -3.5875e+00, -3.7726e+00, -3.1663e+00,  4.0424e-01,
         1.7255e-01, -2.1870e-01, -2.5981e+00, -1.2295e+00,  1.0201e+00,
         1.0142e+00, -5.7974e-01, -3.6929e+00, -3.3606e+00, -2.8903e+00,
        -1.5150e+00, -3.1356e+00, -3.6734e+00, -1.4609e-01, -2.2602e+00,
        -3.3614e+00,  6.6345e-01, -3.5384e+00, -1.8993e+00, -9.3382e-01,
        -3.4891e+00, -2.8179e+00, -2.8778e+00,  2.0693e+00, -2.6714e+00,
        -2.7010e+00, -2.6132e+00, -3.7908e+00, -2.7187e+00, -1.9846e+00,
        -2.8207e+00, -1.2002e+00, -3.0859e+00, -3.1811e+00, -2.4626e+00,
        -3.5441e+00, -2.5173e+00, -3.0832e+00, -4.1721e-01,  2.4056e-01,
        -1.8033e+00, -3.7016e+00, -7.9190e-01, -3.1264e+00, -2.8552e+00,
        -2.0648e+00, -2.7810e-01, -2.1940e+00, -3.7598e+00, -3.4285e+00,
        -3.8448e+00, -1.7977e+00, -2.9754e+00, -3.2761e+00, -3.2228e+00,
        -2.6006e+00, -1.9144e+00, -2.3286e+00, -3.7274e+00, -3.8764e+00,
        -3.1334e+00, -3.0317e+00, -2.6141e+00, -2.7469e+00, -2.4468e+00,
        -3.2046e+00, -3.2003e+00, -3.4093e+00, -3.3696e+00, -3.2331e+00,
        -2.4368e+00, -2.1459e+00, -1.8842e+00, -2.4607e+00, -3.4174e+00,
        -1.8796e+00, -1.9811e+00, -3.3801e+00,  4.7169e-01, -6.2044e-01,
        -1.4290e+00, -2.0394e-01, -3.0136e+00, -2.6539e+00, -3.2891e+00,
        -5.0991e-01, -3.2368e+00, -3.6894e+00, -2.1279e+00, -3.2269e+00,
        -3.0104e+00,  1.6203e+00, -3.4808e+00, -2.5812e-01, -1.5823e+00,
        -2.6622e+00, -2.4141e+00, -3.6904e+00, -3.2543e+00, -2.7383e+00,
        -1.1947e+00, -3.0508e+00,  1.8209e+00, -2.7738e+00, -3.6128e+00,
        -9.6721e-01,  4.8456e-01, -3.4666e+00, -2.2639e+00, -1.9614e+00,
        -2.5093e+00, -3.3920e+00, -3.8319e+00, -5.6079e-01,  3.6022e+00,
        -3.6584e+00, -3.3430e+00, -3.3362e+00, -3.8863e+00, -2.1054e+00,
        -2.5004e+00, -2.8958e+00, -1.1242e+00, -3.6005e+00, -2.8087e-01,
        -3.8242e+00, -8.2780e-01, -4.1521e-01, -3.8628e+00, -1.0664e+00,
        -2.7752e+00, -2.8809e+00,  2.2485e-01,  2.9074e-01, -1.4676e+00,
        -3.8324e+00, -1.9138e+00, -5.3084e-01, -7.2529e-01, -3.4075e+00,
        -4.8470e-01, -1.6141e+00, -2.6309e+00, -2.2098e+00, -3.4171e+00,
        -3.1867e+00, -1.2324e+00,  1.0929e+00, -2.4425e+00, -2.4694e+00,
        -2.1151e+00, -1.0997e+00, -3.6212e+00, -2.7401e+00, -1.6035e+00,
        -3.6937e+00, -1.5208e+00, -3.8137e+00, -3.8408e+00,  1.3188e+00,
        -2.2309e+00, -3.7098e+00, -2.8727e-01, -2.1442e+00, -2.8467e+00,
        -3.3959e+00,  9.3566e-01, -2.1969e+00, -2.6116e+00, -3.6105e+00,
        -3.8793e+00, -3.2664e+00,  4.7747e-01, -3.7191e+00, -2.4618e+00,
        -3.5363e+00, -3.3253e+00, -3.4883e+00, -3.7130e+00, -2.0845e+00,
        -3.4140e+00, -3.8709e+00, -3.0390e+00, -2.8392e+00, -1.2861e+00,
        -3.2402e+00, -3.5773e+00, -2.2257e+00, -3.1661e+00, -3.6922e+00,
        -2.2553e+00,  2.1034e+00, -3.1398e+00,  8.3688e-01, -3.2152e+00,
        -8.8983e-01, -3.3907e+00, -2.0705e+00,  3.5916e-01, -3.2789e-01,
        -1.9707e+00, -3.0070e+00,  2.1353e+00, -3.1012e+00,  8.5485e-01,
        -2.3577e+00,  3.5999e-01, -3.6522e+00, -2.7126e+00, -1.1295e+00,
        -3.3672e+00,  2.4735e+00, -3.2514e+00, -2.1602e+00, -1.3962e+00,
        -3.5772e+00, -3.4515e+00, -2.3562e+00, -3.5904e+00, -1.4717e+00,
        -2.4760e-01, -3.8793e+00, -1.2648e+00, -3.2459e+00, -2.8694e+00,
        -2.3435e+00,  4.2619e-01, -8.7046e-01, -2.8951e+00,  4.9899e-01,
        -3.6363e+00, -1.7046e+00, -3.0792e+00, -3.8455e-01,  9.5638e-01,
         3.3895e+00, -2.2888e+00, -9.2052e-01, -3.6206e+00, -1.8896e+00,
        -8.2635e-01, -2.3263e+00, -2.1559e+00, -2.4704e+00, -1.6467e+00,
         2.1053e+00, -3.3874e+00, -3.3855e+00, -3.4071e+00, -2.6345e+00,
        -1.1558e+00, -3.6516e+00, -1.0377e+00,  6.5025e-02, -3.3419e+00,
         1.9386e-01, -1.4772e+00, -1.0159e+00, -2.9484e+00, -3.2821e+00,
        -3.8082e+00,  6.7700e-01, -3.5670e+00, -3.8589e+00, -3.0258e+00,
        -3.8227e+00, -2.0524e+00, -3.0257e+00, -2.7422e+00, -3.0212e+00,
        -3.7686e+00, -3.3468e+00, -1.5810e+00, -1.1646e+00, -2.7964e+00,
        -3.5734e+00, -2.5446e+00, -2.5779e+00, -1.5848e+00, -3.3847e+00,
        -3.3004e+00, -2.0775e+00,  5.7077e-01, -3.9057e-01, -3.4431e+00,
        -2.3149e+00, -3.5884e+00, -3.0329e+00, -3.4461e+00, -3.8834e+00,
        -3.8571e+00, -3.5966e+00, -2.9171e+00, -1.5638e+00, -1.5862e+00,
         3.2716e+00, -3.3760e+00,  1.8440e-01, -3.4015e+00, -1.5152e+00,
         6.0546e-01, -2.3428e+00, -2.6291e+00, -3.8239e+00,  3.5170e-01,
        -3.8603e-01, -2.5864e+00, -2.5554e+00, -3.0290e+00, -2.7429e+00,
        -3.7740e+00,  1.2002e-01, -2.9886e+00, -1.0548e+00, -3.5044e+00,
        -2.9551e+00,  1.7300e+00, -3.0588e+00, -3.5391e+00, -2.0639e+00,
        -1.2012e+00, -3.6699e+00, -3.1561e+00,  9.3684e-01, -7.3137e-01,
        -3.4832e+00, -1.0067e+00, -2.7747e+00, -3.6677e+00, -4.7137e-01,
        -3.5154e+00, -1.9659e+00, -3.1627e+00, -3.1315e+00, -3.6341e+00,
        -3.8610e+00, -3.6253e+00, -3.7831e+00, -3.6360e+00, -3.1288e+00,
        -2.3270e+00, -1.3628e+00, -1.1082e+00, -3.6991e+00, -3.0148e+00,
        -3.7234e+00, -1.6828e+00], device='cuda:1'), 'gt_classes': tensor([19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:1'), 'gt_boxes': Boxes(tensor([[  0.0000, 431.8078, 167.9580, 746.3345],
        [  0.0000, 431.8078, 167.9580, 746.3345],
        [  0.0000, 431.8078, 167.9580, 746.3345],
        ...,
        [  0.0000, 431.8078, 167.9580, 746.3345],
        [  0.0000, 431.8078, 167.9580, 746.3345],
        [  0.0000, 431.8078, 167.9580, 746.3345]], device='cuda:1'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-2:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 37006) is killed by signal: Terminated. 
{'proposal_boxes': Boxes(tensor([[ 194.0188,  226.1154, 1311.3245,  782.2598],
        [ 383.6788,    0.0000, 1285.0271,  948.0994],
        [   0.0000,  162.1842,  908.4667,  781.0500],
        ...,
        [1004.1957,  182.8707, 1163.9821,  323.5663],
        [ 323.5938,  125.6129,  677.9717,  445.0573],
        [1140.0642,  272.6352, 1308.0571,  697.6010]], device='cuda:3')), 'objectness_logits': tensor([ 4.1333,  2.6613, -0.1110,  4.8829,  2.7309, 23.0259,  0.9971,  0.2902,
        -2.5463,  3.5217,  2.6888,  4.7066,  3.0376,  0.6551,  4.1778,  1.6715,
         3.5798,  3.5891, -3.3149, -3.0570, -3.2791, -3.4202,  0.7484, -3.2890,
        -3.5481,  2.7172, -3.8108, -1.4464, -3.2273, -2.6747, -3.7495, -3.5867,
        -2.6199, -3.4005, -2.7062, -3.7751, -3.6927, -3.7391, -1.6553, -3.3541,
        -2.4772, -2.5134, -3.0595, -3.6696, -3.7382, -2.8192, -3.8006, -2.1426,
        -3.6526, -2.3457, -1.4080, -2.1869, -1.3269, -3.3030, -3.5507, -2.3943,
        -1.1177,  4.0209, -3.4171, -2.5831, -3.7792,  0.4158,  2.1946, -1.3348,
        -2.9056, -2.1619,  4.4912, -3.3488, -3.8098, -3.1268, -3.5829, -3.3946,
        -3.6653, -3.3615, -3.7158, -2.1817, -2.4625, -3.5783, -0.9909, -1.3696,
        -3.7167, -3.1776, -2.5544, -3.6141, -2.5826, -1.7106,  0.1143, -1.4682,
        -3.1752, -3.3448, -3.6672,  4.2884, -3.1710,  0.0425,  0.1470, -3.5521,
        -2.6840, -2.9740, -3.4010,  1.2009, -2.8352, -3.2427, -3.0595, -2.1233,
         2.2070, -3.0716,  3.7997, -3.6541, -3.3204, -3.5238, -3.7097,  1.0737,
        -0.9068, -2.4681, -0.5074, -3.1308,  0.6300, -3.6030, -2.4630, -3.5761,
        -3.4168, -0.9288, -1.8674, -3.1736, -3.3914, -3.4274, -2.4040, -3.4636,
        -1.4470, -0.4139, -2.1588,  0.3473, -3.0346, -3.2439, -3.8090, -2.7175,
        -3.7326, -2.4474, -3.7962, -3.5940, -2.7378, -3.7273, -0.7413, -3.0372,
        -1.7715, -1.5885, -3.4515, -2.5266, -2.5721, -3.7734, -3.0444, -3.4839,
         2.4438, -3.4274, -3.7011, -3.6220, -3.4276, -3.6047, -3.7326, -3.4223,
        -3.5170,  1.9752, -3.7436,  3.3385, -0.6030, -3.7536, -0.7278,  4.0880,
        -3.6193,  1.9762,  1.3968, -2.1863, -2.8947, -3.6128, -2.4318, -3.0902,
        -2.9582, -2.7312, -3.4958, -2.0860, -3.3734, -3.4062, -3.2534,  5.8063,
         2.4934, -3.3797, -2.6429,  3.5467, -0.4365,  4.0856, -3.1103, -3.2299,
        -3.7185, -3.5207, -3.1902, -2.0582, -2.4668, -2.5826, -2.4869, -3.5450,
        -0.6048, -3.0845, -3.5515, -3.0876, -3.6410, -2.9595, -2.4756, -2.6931,
        -3.6457, -3.4693, -3.2629, -2.1308, -0.7550, -2.5845,  2.0168, -2.9309,
        -3.8091, -3.4124, -2.5096, -3.2976, -3.7268, -1.1824, -3.8225, -2.3359,
        -2.8601, -2.4925, -1.8513, -2.2838, -3.4683, -3.2592, -3.7096, -3.4082,
        -2.6550, -3.1843, -1.2743, -2.9960, -3.1572, -1.9521, -2.5719, -1.7073,
        -3.6062, -3.7315, -2.4094, -3.5465, -3.7804, -3.8065, -1.9370,  2.4448,
        -1.7079, -3.0264, -1.1282, -3.3216, -3.6065, -1.9155, -1.5458, -3.2455,
        -2.3480, -3.6244, -1.3895, -2.7559, -2.4554, -2.7041, -3.7326, -3.8112,
        -3.5099, -3.2916, -3.1377, -3.6962, -2.1140, -3.2005, -2.8759,  2.0671,
        -3.1824, -3.4828, -2.3456, -1.9654, -2.3211, -3.6867, -1.2235, -1.1947,
        -3.5450, -3.3983,  3.3886, -2.8546, -3.6693, -1.9280, -2.5395,  1.3004,
        -3.5927, -2.7610, -3.6858, -3.7685, -2.2691, -2.8975, -1.5760, -3.5269,
        -3.7324, -1.9603, -2.5921, -3.4363, -2.8495, -2.7527, -0.9467, -2.1426,
        -3.4924, -3.3680, -3.0690,  1.7443, -0.3101,  4.4952, -3.5214, -3.5635,
        -3.4567, -3.6866,  1.1343, -3.1726, -3.0254, -3.5080, -3.7937, -3.5701,
         0.8520, -3.1518, -2.1433,  4.3344, -3.1496, -2.7260, -1.1325, -3.0907,
        -2.1521, -1.9462, -1.9199, -1.6912, -3.3567, -2.9049, -3.6210, -2.6939,
        -2.8921, -3.2785, -3.8035, -1.9392, -3.8377, -3.1899, -3.3691, -3.1569,
        -1.8278, -2.5536,  2.0738, -2.8928,  1.6154, -3.7859,  0.0972, -2.2619,
        -3.7262, -3.2258, -3.7529, -0.2572, -3.6892, -0.9657,  1.3288, -3.7062,
        -3.6349, -3.0922, -2.8646, -1.1102, -3.2613,  0.9269, -2.9479, -1.6014,
        -1.6002, -2.9680, -1.5793, -3.6617, -3.4197, -0.3680, -2.9805, -1.7411,
        -3.4897, -3.5114, -2.8689, -3.3404, -1.3703, -3.7064, -3.5791,  3.1193,
        -0.1789, -2.9760, -3.7797, -3.3446, -3.2558, -1.1542, -2.9992, -3.3622,
        -3.1378, -2.9379, -1.0415, -0.2170, -3.6723, -0.6723, -1.9971, -3.1876,
        -1.8995, -3.1068,  5.2491, -3.2068, -3.2215, -3.4738, -2.5788, -1.3657,
         2.6769, -3.6067, -3.3386, -3.7664, -1.2449, -3.0625, -3.7783, -1.3666,
        -3.6050, -2.2257, -2.6156, -2.5713, -1.5674, -0.9156, -2.6680, -2.2575,
        -3.5178, -0.4724, -3.7712, -2.4585, -3.1876, -0.2102, -2.1830, -3.7717,
        -3.5012, -2.7324, -2.9278, -2.9626, -2.8235,  1.2308, -3.3064, -1.3952,
        -2.4488,  2.8716, -1.6921, -1.8685, -3.3244, -3.8202, -3.5324, -3.4999,
        -2.8769, -3.5108, -3.4528, -0.3723, -0.4106, -3.3767, -2.9774,  1.1762,
        -3.1536, -2.6239, -2.1316,  1.0036,  1.0534, -3.6630, -3.6186, -3.5264,
        -3.1334, -2.1950, -3.0114, -2.2587, -1.6074,  5.9091, -3.0710, -3.5232,
        -1.3894, -2.0549, -1.8879,  4.3788, -3.4447, -3.3936, -2.5291, -2.2388,
        -0.1052, -2.9199, -1.7147, -2.7491, -3.1295, -2.9137, -3.6770, -2.8584,
        -3.6683, -0.9242, -3.0864,  1.2619, -1.4906, -2.9028, -3.0564, -1.6074,
        -3.5225, -1.8684, -2.5868, -2.5066, -2.1166, -3.2590, -1.9939, -2.1469,
        -1.3651, -2.1803, -1.8151, -1.5146, -3.0092, -3.5609, -2.8234, -1.4308],
       device='cuda:3'), 'gt_classes': tensor([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:3'), 'gt_boxes': Boxes(tensor([[   0.0000,   64.0000, 1327.6680,  720.0000],
        [   0.0000,   64.0000, 1327.6680,  720.0000],
        [   0.0000,   64.0000, 1327.6680,  720.0000],
        ...,
        [   0.0000,   64.0000, 1327.6680,  720.0000],
        [   0.0000,   64.0000, 1327.6680,  720.0000],
        [   0.0000,   64.0000, 1327.6680,  720.0000]], device='cuda:3'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Process SpawnProcess-4:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 66, in _wrap
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/util.py", line 357, in _exit_function
    p.join()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 47, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 37012) is killed by signal: Terminated. 
Traceback (most recent call last):
  File "main.py", line 38, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 67, in launch
    mp.spawn(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 230, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 188, in start_processes
    while not context.join():
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 150, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 2 terminated with the following error:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/setuptools/_distutils/version.py
[09/17 12:05:41 detectron2]: Rank of current process: 0. World size: 4
[09/17 12:05:41 detectron2]: Full config saved to checkpoints/voc/1726571009/fsod1/10shot/seed1/config.yaml
[09/17 12:05:42 fvcore.common.checkpoint]: [Checkpointer] Loading from ./pretrain/R-101.pkl ...
[09/17 12:05:43 fvcore.common.checkpoint]: Reading a file from 'torchvision'
[09/17 12:05:59 detectron2]: Loss: 0.0010
[09/17 12:05:59 detectron2]: [CLS] Use dropout: p = 0.8
[09/17 12:05:59 d2.data.build]: Removed 0 images with no usable annotations. 200 images left.
[09/17 12:05:59 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 12:05:59 d2.data.build]: Using training sampler TrainingSampler
[09/17 12:05:59 d2.data.common]: Serializing 200 elements to byte tensors and concatenating them all ...
[09/17 12:05:59 d2.data.common]: Serialized dataset takes 0.05 MiB
[09/17 12:05:59 fvcore.common.checkpoint]: [Checkpointer] Loading from dataset/check/voc/1726356812/base1/model_final-fsod.pth ...
WARNING [09/17 12:05:59 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
roi_heads.box_predictor.fc.weight
roi_heads.box_predictor.fsup
[09/17 12:05:59 d2.engine.train_loop]: Starting training from iteration 0
{'proposal_boxes': Boxes(tensor([[ 582.8125,  209.3766, 1333.0000,  857.8896],
        [ 295.8619,  170.2823, 1333.0000,  859.4243],
        [ 721.5625,  265.4113, 1333.0000,  813.2173],
        ...,
        [   0.0000,    0.0000,  598.7615,  241.8990],
        [ 770.3212,  252.7564,  919.7947,  779.2990],
        [   0.0000,   87.7696,  508.6379,  683.3819]], device='cuda:0')), 'objectness_logits': tensor([ 5.2184e+00,  6.4222e+00,  5.2385e+00,  2.5746e+00,  2.3026e+01,
         3.4495e+00,  4.5036e+00,  1.5284e+00,  6.5812e+00, -6.4014e-01,
        -1.4502e+00,  1.6582e+00,  1.1076e+00,  5.0621e-01,  3.6948e+00,
         4.0375e+00,  2.7203e+00,  2.3244e+00,  2.2838e+00,  4.7460e+00,
         3.0130e+00,  4.8936e+00,  3.1079e+00, -2.7346e+00, -2.9248e+00,
        -2.8715e+00, -3.3505e+00, -3.1423e+00, -3.8192e+00,  3.4142e-01,
        -1.7140e+00,  6.8884e-01, -3.5928e+00, -1.9268e+00, -4.2316e+00,
        -4.0512e+00, -3.5742e+00, -9.4070e-01, -3.2220e+00, -2.3371e+00,
        -3.5638e+00, -3.6169e+00, -3.2529e+00, -3.1542e+00, -3.7123e+00,
        -2.9542e+00, -2.0106e+00, -3.2698e+00, -2.3269e+00, -3.0015e+00,
        -4.1799e+00, -2.4357e+00, -2.9640e+00, -3.3129e+00, -3.0309e+00,
        -4.1568e+00, -1.5505e+00, -3.0141e+00, -4.2505e+00, -4.1597e+00,
        -2.3532e+00,  2.5405e+00, -4.1982e+00,  2.2467e+00, -1.4667e+00,
        -3.5593e+00, -3.6386e+00, -2.6539e+00, -2.8038e+00, -2.9734e+00,
        -4.1716e+00, -1.0068e+00, -2.0822e+00, -1.6200e+00, -1.3324e+00,
        -4.2501e+00, -7.3961e-01,  2.7725e+00, -6.7680e-01, -3.9965e+00,
        -2.1223e+00, -6.5271e-01, -3.3464e+00, -3.6745e+00, -2.7406e+00,
        -3.5559e+00,  2.3330e+00, -1.8268e+00,  3.2111e+00, -3.0656e+00,
        -2.6023e+00, -4.0982e+00, -1.9572e+00, -3.6439e+00, -2.3300e+00,
         4.6234e+00, -3.7167e+00, -4.1904e+00, -2.4925e+00, -3.7859e+00,
        -3.0800e+00, -7.7259e-02, -3.2774e+00, -3.3793e+00, -3.4384e+00,
        -2.7474e+00, -2.1483e+00, -3.7184e+00, -3.2927e+00, -2.6664e+00,
         1.6052e+00, -3.2054e+00, -2.3821e+00, -4.1543e+00, -9.9818e-01,
        -1.2157e+00, -2.9193e+00, -2.9652e+00, -4.0304e+00, -4.1135e+00,
        -3.2614e+00, -1.1927e-01, -4.1853e+00,  3.1177e+00, -3.7158e+00,
        -3.4300e+00, -3.1662e+00, -2.5638e+00, -3.8761e+00, -1.3437e+00,
        -2.0980e+00, -2.6469e+00, -3.9772e+00, -2.7483e+00, -3.6176e+00,
        -3.2807e+00, -1.6133e+00,  8.0478e-01, -2.7856e+00, -4.0312e+00,
        -3.6550e+00,  6.9210e-01, -3.4929e+00, -3.7069e+00, -2.7825e+00,
        -3.4839e+00, -3.3568e+00, -4.1413e+00, -3.9789e+00, -3.5895e+00,
        -1.5416e+00, -1.5947e+00,  1.7444e+00, -3.0445e+00, -3.6568e+00,
        -3.5849e+00, -2.5888e+00, -1.1770e+00, -3.6924e+00, -1.2302e+00,
        -3.3878e+00,  3.3695e-01, -1.7483e+00, -3.9004e+00,  5.1935e-02,
        -1.5146e+00, -1.4731e-01, -1.8047e+00,  3.2206e+00, -3.0113e+00,
        -4.2445e+00,  1.9273e+00, -4.1055e+00, -3.8991e+00, -3.9530e+00,
        -4.0970e+00, -3.2879e+00, -1.7254e+00,  7.5367e-01, -3.0109e+00,
        -4.1969e+00, -1.9988e+00, -4.0728e+00, -3.1348e+00, -1.9454e-01,
        -3.8163e+00, -3.5148e+00, -2.4734e+00,  3.0783e-01,  6.9740e-02,
        -1.1493e+00, -3.7723e+00, -4.1690e+00, -4.0484e+00, -2.4967e+00,
        -2.5311e+00, -4.1128e+00, -1.9868e+00, -4.0795e+00, -1.5082e-03,
        -8.3874e-02, -2.0929e+00, -2.1085e+00, -3.0568e+00, -1.2289e+00,
        -4.1921e+00, -4.0115e+00, -3.5306e+00, -2.1128e+00, -2.0480e+00,
        -3.8552e+00, -2.7793e+00, -3.8018e+00, -2.8180e+00, -2.2076e+00,
        -3.4801e+00, -2.2840e+00, -3.9147e+00, -3.4853e+00, -2.6026e+00,
        -1.9011e+00,  2.9329e+00, -1.8008e+00, -3.2277e+00, -3.4197e+00,
        -2.6711e+00, -3.6217e+00, -3.8100e+00, -2.9841e+00, -3.6009e+00,
        -1.0066e+00, -4.6930e-01, -1.8954e+00, -3.5130e+00, -2.4596e+00,
        -8.6212e-01, -2.3689e+00, -3.0230e+00, -4.0830e+00, -2.9565e+00,
        -2.9708e+00, -3.2578e+00,  3.6233e+00, -3.0522e+00, -4.1486e+00,
        -2.7278e+00, -3.3553e+00,  2.9848e+00, -3.4610e+00, -2.5702e+00,
        -1.3986e+00, -3.2814e+00, -1.7538e+00, -2.8829e+00, -2.8224e+00,
        -2.8384e+00, -3.9752e+00, -3.0288e+00, -3.3380e+00, -3.5391e+00,
        -3.6768e+00, -3.2619e+00, -1.9622e+00, -1.8454e+00, -3.7416e+00,
        -2.9450e+00, -2.6335e+00, -2.0746e+00, -1.6185e+00, -2.9476e+00,
        -3.9516e+00, -2.5972e-02, -3.7023e+00, -4.2492e+00, -2.3553e+00,
        -3.1348e+00, -2.2485e+00, -2.4112e+00, -3.4567e+00,  3.0464e+00,
        -3.3856e+00, -3.0565e+00, -3.0569e+00, -6.8026e-01, -3.1618e+00,
        -2.4791e+00, -1.2292e+00, -4.1409e+00, -4.1960e+00, -3.4091e+00,
        -4.1561e+00, -3.5827e+00, -3.7316e+00, -1.2251e+00, -3.7411e+00,
        -3.0392e+00, -3.0695e+00, -3.1266e+00, -2.0644e+00, -4.1884e+00,
        -4.1326e+00, -4.1260e+00, -2.6695e+00, -3.6328e+00, -3.7103e+00,
        -2.1593e+00, -3.0160e+00, -3.0778e+00, -1.4062e+00, -2.9692e+00,
        -3.2016e+00, -2.8164e+00, -2.4314e+00,  2.2181e+00, -4.9794e-01,
        -3.8536e+00, -4.1938e+00, -3.8918e+00, -2.1110e+00, -4.1012e+00,
        -3.8796e+00, -2.7979e+00, -1.1122e+00, -1.1353e+00, -3.3203e+00,
        -3.6613e-01, -3.9087e+00, -1.8269e+00, -2.9605e+00, -2.5159e+00,
         1.9049e+00, -2.8037e+00, -2.7132e+00, -3.8863e+00, -2.9991e+00,
        -3.6122e-01, -3.1553e+00, -1.8778e+00, -4.0591e+00, -4.2462e+00,
        -2.8632e+00, -1.3711e+00, -3.1107e+00, -3.7723e+00, -3.8940e+00,
        -2.6380e+00,  1.9153e-01, -3.3237e+00, -3.4861e+00, -3.6566e+00,
        -4.0527e+00, -1.3067e+00, -1.5819e+00, -3.1274e+00, -2.4293e+00,
        -4.0637e+00, -5.1383e-01, -9.1421e-01, -3.3039e+00, -3.5952e+00,
        -1.2830e+00, -2.9961e+00, -1.0441e+00, -3.0910e+00, -3.6508e+00,
        -3.8850e+00, -5.3767e-02,  9.4758e-01, -2.8552e+00, -2.4783e+00,
        -3.0842e+00, -8.9966e-01, -3.7319e-01, -4.1565e+00, -3.7262e+00,
        -6.6912e-01, -3.0575e+00, -3.5826e+00, -3.4032e-01, -9.2850e-01,
        -1.5444e+00, -3.1800e+00, -1.3661e+00,  3.7584e+00, -4.0668e+00,
        -1.3166e-01, -3.8593e+00, -4.0781e+00, -2.8292e+00, -3.3641e+00,
        -3.9052e+00, -1.1361e+00, -2.9757e+00, -1.4908e+00, -2.8226e+00,
        -2.7326e+00, -3.0128e+00, -2.9597e+00, -4.1000e+00, -3.5392e+00,
        -1.9350e+00, -1.5058e+00, -2.1232e+00, -4.1596e+00, -1.9268e+00,
        -4.1557e+00, -1.6802e+00, -1.5821e+00, -2.4204e+00, -3.2763e+00,
        -2.8997e+00, -3.7434e+00,  2.9566e-01, -3.9784e+00, -4.1402e+00,
        -7.7413e-01,  1.3638e+00, -1.6490e+00,  3.4987e+00, -1.3354e+00,
        -3.0186e+00, -3.1521e+00, -1.4840e+00, -2.2837e+00, -4.0913e+00,
        -3.1722e+00, -2.1348e+00, -2.4599e+00, -1.9770e+00, -4.0297e+00,
        -3.1092e+00, -4.1723e+00, -3.1292e+00, -3.1875e+00, -4.0614e+00,
        -3.8983e+00, -2.8466e+00, -2.0541e+00, -1.8575e+00, -2.4923e+00,
        -1.2161e+00, -1.8770e+00, -2.3181e+00,  4.6287e-01, -3.7469e+00,
        -3.8893e+00, -2.6421e+00, -4.1585e+00, -1.4109e+00, -3.8333e+00,
        -2.9518e+00, -1.8066e+00, -3.4939e+00, -3.6042e+00, -3.8779e+00,
        -2.7737e+00, -3.2470e+00, -4.1633e-01, -7.3152e-01,  1.3705e+00,
        -1.3468e+00, -3.4657e+00, -3.0177e+00, -2.2956e+00, -3.7745e+00,
        -3.4930e+00, -2.4143e+00, -2.5417e+00, -3.9798e+00, -2.6322e+00,
        -2.9528e+00, -3.7986e+00, -4.1710e+00, -3.2206e+00, -2.4945e+00,
        -4.1204e+00, -3.7415e-01, -4.1115e+00, -3.1477e+00, -3.8997e+00,
        -2.6674e+00, -4.0461e+00, -1.0564e+00, -1.9378e+00, -2.3660e-01,
        -3.0316e+00, -3.2831e+00, -3.3023e+00, -4.0040e+00, -3.8783e+00,
        -1.6941e+00, -3.2275e+00, -3.8597e+00, -1.9921e+00,  1.6343e+00,
        -4.0468e+00, -2.5978e+00, -3.3858e-01, -2.4819e+00, -3.2188e+00,
        -3.2282e+00, -3.0135e+00, -3.4561e+00, -9.0462e-01, -3.6422e+00,
        -3.2771e+00, -3.8997e+00, -9.4562e-01, -3.6470e+00, -1.9928e+00,
        -3.3088e+00], device='cuda:0'), 'gt_classes': tensor([13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20], device='cuda:0'), 'gt_boxes': Boxes(tensor([[ 479.8800,  234.6667, 1333.0000,  810.6667],
        [ 479.8800,  234.6667, 1333.0000,  810.6667],
        [ 479.8800,  234.6667, 1333.0000,  810.6667],
        ...,
        [ 479.8800,  234.6667, 1333.0000,  810.6667],
        [ 479.8800,  234.6667, 1333.0000,  810.6667],
        [ 479.8800,  234.6667, 1333.0000,  810.6667]], device='cuda:0'))}
ERROR [09/17 12:06:11 d2.engine.train_loop]: Exception during training:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!
[09/17 12:06:11 d2.engine.hooks]: Total training time: 0:00:11 (0:00:00 on hooks)
[09/17 12:06:11 d2.utils.events]:  iter: 0    lr: N/A  max_mem: 4138M
{'proposal_boxes': Boxes(tensor([[ 114.7033,   27.3386,  644.3817,  305.4854],
        [ 195.3369,   82.3144,  481.2123,  317.1058],
        [ 174.4158,   66.0286,  594.2743,  281.4198],
        ...,
        [ 872.3621,  116.8547, 1333.0000,  799.7173],
        [1116.6003,  284.8018, 1279.9939,  796.5291],
        [1094.3453,  416.1790, 1333.0000,  702.8308]], device='cuda:3')), 'objectness_logits': tensor([ 8.4913e+00,  1.4282e+00,  8.2233e+00,  6.7345e+00,  2.6220e+00,
         7.9754e-01, -1.2143e-01,  7.6842e+00,  2.6672e+00, -1.3764e+00,
        -2.7800e-01,  1.6453e+00,  3.1125e+00,  4.9701e+00,  2.3026e+01,
         2.9678e+00,  6.2187e+00,  5.3165e+00,  8.5446e-01,  1.3855e+00,
         3.8526e+00, -1.4481e+00, -1.6018e+00,  1.0021e+00,  2.6830e+00,
         4.4623e+00,  5.3953e-01, -1.2607e+00,  3.4892e+00, -1.7740e+00,
         1.4904e+00,  3.9339e+00, -2.3563e+00, -1.5247e+00, -1.8474e+00,
         2.6424e+00,  2.5193e+00,  1.6123e+00, -1.8877e+00, -3.8380e-01,
        -1.6078e+00, -4.1799e-01,  3.8212e-01, -1.6295e+00, -2.1009e+00,
        -1.7378e+00,  4.8469e+00,  4.1528e-01,  3.0497e+00, -1.4732e+00,
        -1.2372e-01, -1.9438e+00,  2.6402e+00,  4.2602e+00, -9.6015e-01,
        -2.1348e+00, -2.5430e-01, -1.6432e+00,  9.9441e-01,  1.5232e+00,
        -2.1457e+00, -2.1631e+00, -9.0000e-01,  2.9140e+00, -1.5825e+00,
        -1.5599e+00, -1.5958e+00,  3.9875e-01, -2.1085e-01, -2.2030e+00,
        -5.0632e-01, -1.9263e+00,  2.3823e+00, -1.7776e+00,  3.2637e+00,
        -1.9223e+00, -4.7110e-01, -1.5401e+00, -2.1849e+00, -3.2201e-01,
        -6.4777e-01, -9.0843e-01, -9.7429e-01,  2.4397e+00,  3.2309e+00,
         8.7319e-01, -1.6656e+00,  1.3716e-01,  2.2401e+00, -2.1291e+00,
        -1.6289e+00, -5.6204e-01,  9.3374e-01, -1.3344e+00,  2.0401e+00,
        -1.3618e+00,  1.6470e+00, -1.4698e+00,  1.6938e+00, -1.8346e+00,
         8.3083e-01, -2.0373e-01,  1.5411e+00,  5.3778e-03, -2.2168e+00,
        -1.0540e+00, -2.3019e+00, -1.9193e+00,  4.4301e-02, -2.2297e+00,
        -1.4281e+00, -2.1041e+00, -1.7476e+00,  1.4033e+00, -1.0899e+00,
        -2.2763e+00, -2.0834e+00,  3.0029e+00, -6.8644e-01,  4.2728e-01,
        -2.1403e+00, -9.7669e-02,  2.4721e+00, -6.8737e-02, -5.9773e-01,
         4.0505e-01, -3.3099e-01,  3.2109e+00,  2.4196e+00,  3.2936e+00,
        -2.1041e+00, -1.2249e+00,  6.3080e-01, -1.8921e+00, -1.7922e+00,
        -1.5814e+00, -7.8742e-02, -1.9746e+00, -1.5295e+00, -2.1540e+00,
         2.4525e+00,  1.4758e+00, -1.8975e+00, -3.4854e-01,  7.0491e-01,
        -2.2365e+00,  2.2623e+00, -2.3227e+00, -1.3273e+00, -3.5205e-01,
        -1.6932e+00,  2.3924e+00,  7.0311e+00, -5.3361e-01,  5.4799e-01,
         1.4995e+00, -4.2239e-01, -2.0568e+00,  4.2915e-01, -1.2905e+00,
        -1.3968e+00,  3.1507e-01, -1.3805e+00, -1.1560e+00, -2.2413e+00,
        -2.0469e+00, -1.0609e+00, -1.9764e+00, -1.6676e+00, -2.2833e+00,
        -6.4336e-01,  3.5046e-01,  2.5524e-01, -1.7922e+00, -3.2191e-01,
        -1.8264e+00,  7.9699e-01, -7.3783e-01, -4.6358e-02,  1.6328e+00,
         3.5642e+00, -2.1222e+00, -1.4611e-01, -1.0378e+00, -1.6296e+00,
        -2.1114e+00, -1.3825e+00, -1.2528e+00, -1.4174e+00, -1.5415e+00,
         3.1764e+00, -1.3054e+00, -1.8777e+00, -1.5196e+00,  1.7805e+00,
         3.9474e+00, -2.3452e+00, -9.1865e-01, -1.7735e+00,  1.6948e+00,
         1.7260e+00,  2.2221e+00,  9.8107e-02, -1.9629e+00,  9.3963e-01,
        -1.9553e+00, -2.3220e+00, -1.6191e+00, -1.4531e+00, -2.1086e+00,
        -2.0314e+00, -2.1389e+00, -6.1677e-01, -1.1983e+00, -1.2688e+00,
        -2.1799e+00, -2.1776e+00, -1.2016e-01, -2.3331e+00,  1.5876e+00,
         4.6581e+00, -1.2419e+00, -1.3072e+00, -2.0249e+00,  9.6083e-01,
        -6.6954e-02, -1.3439e+00,  7.1870e-01, -8.3171e-01, -2.2803e+00,
        -3.1992e-01, -6.1721e-01, -8.2499e-01, -2.0256e+00, -1.7517e+00,
        -1.7053e+00, -2.2183e+00,  3.8284e-01,  3.6481e+00, -2.1444e+00,
        -5.9182e-01,  3.5621e+00, -1.8750e+00, -1.1074e+00, -1.5249e+00,
         1.6661e+00, -1.7071e+00,  2.9821e+00,  6.6134e-02, -2.1993e+00,
        -2.2256e+00, -2.2327e+00,  2.5830e+00,  9.6486e-01, -1.4520e+00,
        -1.0114e+00, -1.1402e+00, -1.3898e+00,  2.6749e+00,  1.7717e+00,
         3.0139e+00,  1.4029e-01, -2.1766e+00,  2.2931e+00, -2.2503e+00,
        -8.3529e-01, -7.8069e-01, -8.1553e-01, -1.3892e+00, -1.5263e-01,
        -2.2561e+00,  2.2077e+00, -1.6884e+00, -7.2588e-01,  2.8515e+00,
        -2.3471e+00,  2.8342e+00, -2.3217e+00, -2.2205e+00, -1.1213e+00,
        -2.3602e+00, -2.0651e+00, -2.0823e+00, -1.9738e+00, -3.2926e-01,
        -1.8085e+00, -2.2938e+00,  6.7685e-01, -2.0719e+00, -7.1486e-01,
         4.2577e+00,  1.4024e+00,  4.4162e+00,  3.3628e+00, -1.8826e+00,
         9.5122e-01,  1.4672e+00, -2.0399e+00, -1.7878e+00, -1.0034e+00,
        -1.4965e+00, -5.6705e-01, -6.8830e-01, -1.7739e+00,  2.3757e+00,
        -1.7629e+00,  1.7434e+00,  2.3645e+00,  3.7946e+00,  7.5171e-01,
         2.5349e+00, -8.7439e-01, -2.3217e+00, -2.3225e+00, -2.1361e+00,
        -1.7472e+00,  1.4717e+00, -2.2267e+00,  1.1175e+00, -7.2118e-01,
         6.5659e-01, -2.0427e+00, -2.7301e-01,  9.1064e-01,  4.2975e+00,
         2.1602e-01, -1.3220e+00, -1.6999e+00, -1.9656e+00, -7.8393e-01,
         2.4185e+00,  4.3278e-01,  2.6632e+00, -2.0379e+00,  4.0932e-01,
         8.5242e-01,  3.6506e-01, -2.0293e+00, -1.3961e+00,  1.9863e+00,
        -8.3024e-01, -3.3397e-02, -1.8175e+00, -1.8603e+00,  1.8647e+00,
        -2.2432e+00, -1.1687e+00, -1.5425e+00, -8.1704e-01,  3.5095e+00,
        -7.2718e-01, -1.3266e+00, -1.7756e+00,  1.2806e+00, -2.0318e+00,
        -8.9244e-01], device='cuda:3'), 'gt_classes': tensor([ 5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
         5,  5,  5,  5,  5,  5,  5,  5,  5, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
       device='cuda:3'), 'gt_boxes': Boxes(tensor([[170.6240,  13.3333, 597.1840, 306.6667],
        [170.6240,  13.3333, 597.1840, 306.6667],
        [170.6240,  13.3333, 597.1840, 306.6667],
        ...,
        [170.6240,  13.3333, 597.1840, 306.6667],
        [170.6240,  13.3333, 597.1840, 306.6667],
        [170.6240,  13.3333, 597.1840, 306.6667]], device='cuda:3'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
{'proposal_boxes': Boxes(tensor([[408.5071, 263.6520, 621.0141, 591.8183],
        [289.7453, 333.7984, 693.9649, 530.4044],
        [329.8602, 325.1584, 608.5585, 614.8275],
        ...,
        [  0.0000,   0.0000, 359.7549, 446.4777],
        [436.6410, 319.2958, 578.1125, 716.7253],
        [228.5748, 469.3162, 545.7834, 768.1024]], device='cuda:2')), 'objectness_logits': tensor([ 3.6209e-01,  3.8500e+00, -2.5257e+00,  3.6432e-01, -3.2159e-01,
        -5.2104e-01, -2.1236e+00,  3.2603e+00, -7.4431e-01, -6.6641e-01,
        -2.8428e+00,  2.3026e+01, -1.3951e+00,  4.9774e+00,  1.9644e+00,
        -1.4365e+00,  1.2049e+00,  5.8396e-01,  2.2846e+00,  4.0491e+00,
        -1.7082e+00,  1.3547e+00,  1.7049e+00, -1.8808e+00,  1.0877e+00,
         1.0738e+00, -9.7458e-01, -1.8938e+00,  2.0911e+00, -3.0927e-01,
         4.3911e+00,  1.1462e+00, -1.6830e+00,  7.9883e-01, -2.1477e+00,
        -3.7598e+00, -3.7029e+00, -2.7911e+00, -4.0805e+00, -3.8823e+00,
        -3.9961e+00, -3.9901e+00, -2.1964e+00, -2.8823e+00, -1.3163e+00,
        -2.1963e+00,  2.6021e+00, -4.0295e+00, -1.3115e+00, -3.1094e+00,
        -4.0986e-01, -1.2771e+00, -3.0251e+00, -2.0214e+00, -3.0901e+00,
        -3.1468e+00, -2.6398e+00, -1.1391e+00, -2.3382e+00, -3.2935e+00,
        -3.4807e+00, -2.5587e+00, -4.1144e+00,  2.9931e+00, -1.5169e+00,
        -2.6891e+00, -3.5652e+00, -3.5212e+00, -2.9751e+00, -2.9713e+00,
        -1.5461e+00, -4.1055e+00, -3.9534e+00, -2.8939e+00, -3.9752e+00,
        -3.7961e+00, -1.1390e+00,  1.3283e+00, -3.6236e+00, -3.9729e+00,
        -3.4439e+00, -3.9448e+00, -3.5725e+00, -4.0645e+00, -3.4878e+00,
        -3.9640e+00, -3.6293e+00, -4.1058e+00, -3.8109e+00, -3.9240e+00,
        -2.6972e+00, -3.4125e-02, -3.5171e+00, -3.6982e+00, -3.1250e+00,
        -2.0557e+00, -3.1382e+00,  1.6578e-02, -3.1523e+00, -4.0235e+00,
        -2.8197e+00, -1.7198e+00, -2.8673e+00, -3.1151e+00, -3.8869e+00,
        -4.0007e+00,  1.1432e+00, -3.2026e-01, -3.3714e+00, -3.8573e+00,
        -3.2656e+00, -3.9589e+00, -1.4326e+00, -3.9917e+00, -3.1073e+00,
         3.3239e-01, -3.1977e+00, -2.4873e+00, -3.4905e+00, -4.0149e+00,
        -3.5942e+00, -4.1436e+00, -1.5231e+00, -1.9824e+00, -3.9592e+00,
        -2.7171e+00, -3.9937e+00,  1.5004e+00, -1.1992e+00, -1.8563e+00,
        -3.6013e+00, -3.4756e+00, -3.1301e+00, -3.9481e+00, -1.8503e+00,
        -3.9632e+00, -2.0829e+00, -1.5777e+00, -2.1577e+00, -1.2328e+00,
        -2.4526e+00, -3.3142e+00, -3.6032e+00, -3.9700e+00, -3.5454e+00,
        -3.4742e+00, -3.6116e+00, -2.2740e+00,  1.6640e+00, -2.8101e+00,
        -3.5723e+00, -2.9930e+00, -3.5608e+00, -3.6616e+00,  7.6452e-01,
        -3.8456e+00,  1.4656e+00, -3.1063e+00, -2.6295e+00, -2.9745e+00,
        -4.0513e+00, -3.6281e+00, -3.8346e+00, -8.4797e-02,  5.8406e-01,
        -3.9807e+00, -4.1310e+00, -3.2895e+00, -3.4336e+00, -3.4189e+00,
        -2.4447e+00,  1.6088e+00, -4.0396e+00, -1.7462e+00, -3.3081e+00,
        -3.0192e+00,  1.5738e+00, -3.4401e+00, -3.2829e+00, -3.3596e+00,
        -3.0760e+00, -2.7083e+00, -1.6173e+00, -3.6793e+00, -2.5830e+00,
        -1.9966e+00, -1.7974e+00, -3.9929e+00, -1.2095e+00, -6.3691e-03,
        -3.6865e+00, -1.1990e+00, -3.4069e+00, -5.2979e-01, -2.4598e+00,
        -7.6192e-01, -3.8929e+00, -2.9337e+00, -2.3781e+00, -3.2581e+00,
        -3.5089e+00, -3.6816e+00, -3.2794e+00, -4.0527e+00, -3.6812e+00,
        -3.8500e+00, -5.5491e-01, -2.5295e+00, -2.3058e+00, -3.8131e+00,
        -3.6120e+00, -1.1640e+00, -1.3853e-01, -8.2700e-01, -3.7558e+00,
        -5.3209e-01, -3.9352e+00, -4.5425e-01, -3.9695e+00, -2.0308e+00,
        -3.8386e-01, -2.4751e+00, -3.8089e+00, -3.8075e+00, -3.3320e+00,
        -3.6013e+00, -2.0117e+00, -3.8475e+00,  2.3143e+00, -3.4652e+00,
        -3.8988e+00, -1.5360e+00, -1.0051e+00, -4.0184e+00,  4.4351e-02,
        -2.7155e+00, -3.3823e+00, -4.1429e+00, -3.5248e+00, -3.6123e+00,
        -3.9622e+00, -2.5722e+00, -3.8257e+00, -1.7504e+00, -3.2234e+00,
        -3.7264e+00, -2.4101e+00, -1.1129e+00, -3.5391e+00, -2.6722e+00,
        -2.4099e+00, -1.8225e+00, -1.1951e+00, -3.7282e+00,  1.0695e+00,
        -2.6059e+00, -3.5688e+00, -9.7788e-01, -3.2883e+00, -7.4555e-01,
        -3.1328e+00, -4.0501e+00, -3.5457e+00, -3.6792e+00, -3.9197e+00,
        -3.8621e+00, -3.9877e+00, -4.0430e+00, -9.1653e-01, -3.7752e+00,
        -4.1407e+00, -2.7121e+00, -3.5620e+00, -3.8177e+00, -2.7020e+00,
        -1.9990e+00, -3.8199e+00, -3.0989e+00, -3.4659e+00, -2.6824e+00,
        -3.8767e+00, -3.8225e+00, -2.8938e+00,  6.6885e-02, -2.2001e+00,
        -2.0542e+00, -1.6969e+00, -3.8567e+00, -2.7682e+00, -2.5592e+00,
        -4.0409e-01, -5.6370e-01, -3.4589e+00, -2.0499e+00, -1.1535e+00,
        -3.8801e+00, -3.2810e+00, -3.8552e+00, -3.7388e+00, -3.3704e+00,
        -4.0024e+00, -8.0032e-01, -3.8944e+00, -3.8979e+00, -3.3498e+00,
        -7.6963e-01, -3.3828e+00, -1.2766e+00, -3.9744e+00, -3.7732e+00,
        -4.1162e+00, -4.1039e+00, -4.1408e+00, -4.0862e+00, -2.0242e+00,
        -3.4802e+00, -3.9662e+00, -3.5808e+00, -1.1426e+00, -2.2174e+00,
        -3.0118e+00, -2.7423e+00,  1.1975e-01, -1.9826e-02, -4.0860e+00,
        -2.5868e+00, -2.1659e+00, -3.8309e+00, -3.0548e+00, -2.7479e+00,
        -3.7336e+00, -3.2717e+00, -2.5569e+00, -3.3281e+00, -3.6420e+00,
        -2.4109e+00, -3.3987e+00, -3.2308e+00, -7.7376e-01, -2.9070e+00,
        -3.9515e+00, -2.4444e+00, -3.9655e+00, -2.7607e+00, -3.1360e+00,
        -1.5165e+00, -2.8188e+00, -3.8512e+00,  4.8550e-01, -1.9954e+00,
        -3.4139e+00,  3.5442e-01, -4.1108e+00, -4.1287e+00, -3.1294e+00,
        -3.3608e+00, -3.7604e+00, -3.4235e+00, -3.1493e+00, -3.3104e+00,
        -3.8303e+00, -3.7136e+00,  1.3416e+00, -2.8111e+00, -3.5440e+00,
        -4.1133e+00, -2.3209e+00, -2.4440e+00, -4.0162e+00, -3.5729e+00,
        -4.0724e+00, -4.0149e+00, -2.7649e+00, -3.8794e+00, -4.0644e+00,
        -3.9592e+00, -3.3108e+00, -2.9937e+00, -2.4864e+00, -3.3483e+00,
        -2.5671e+00, -2.8424e+00, -3.5630e+00, -4.0435e+00, -3.4026e+00,
        -4.0678e+00, -3.6792e+00, -1.6971e+00, -1.6895e+00, -6.3494e-01,
        -1.6368e+00, -3.1942e+00,  2.6250e+00, -4.0214e+00, -3.7998e+00,
        -5.6516e-01, -1.7992e+00, -9.9107e-01, -3.1547e+00, -4.1168e+00,
        -3.8404e+00,  1.5266e-01, -3.6694e+00, -9.4252e-01, -2.8074e+00,
        -2.7302e+00, -2.6417e+00, -3.4774e+00, -3.0791e-01, -1.7112e+00,
        -6.7354e-01, -1.9513e+00, -3.5770e+00, -2.4777e+00, -3.5770e+00,
        -3.4451e+00, -3.9409e+00, -3.2947e+00, -3.3488e+00, -5.0379e-01,
        -4.1252e+00,  9.1652e-01, -9.7066e-01, -2.0764e+00, -2.8865e+00,
        -1.1950e+00, -3.1178e+00, -3.7507e+00, -4.0250e+00, -3.5095e+00,
        -2.0883e+00, -2.7770e+00, -3.8647e+00, -3.4000e+00, -3.2730e+00,
        -3.5829e+00, -3.9552e+00, -3.6100e+00, -3.0703e+00, -2.3030e+00,
        -9.3067e-01, -3.5330e+00, -3.7433e+00, -3.6358e+00, -4.1415e+00,
        -2.2876e+00, -3.9272e+00, -3.4646e+00, -3.7593e+00, -3.5097e+00,
        -2.6972e+00, -3.9488e+00, -8.4266e-01, -3.9562e+00, -2.5519e+00,
        -3.6467e+00, -3.5360e+00, -2.9369e+00, -1.6502e+00, -2.1543e+00,
        -8.1699e-01, -2.3365e+00,  1.1730e+00, -4.0246e+00,  3.1758e-01,
        -3.5253e+00, -7.7557e-01, -4.0211e+00, -3.3112e+00, -4.0832e+00,
        -2.4529e+00, -3.9913e+00, -3.7275e+00, -4.0595e+00, -1.5369e+00,
         4.5798e+00, -3.5709e+00, -3.8184e+00, -2.4722e+00, -4.0426e+00,
        -3.7042e+00, -1.9561e+00, -2.8588e+00, -3.5002e+00, -1.7962e+00,
        -1.7323e+00, -5.9274e-01, -3.4758e+00, -3.8504e+00, -2.9465e+00,
        -4.0108e+00, -3.3693e+00, -2.4359e+00, -4.0607e+00, -3.8356e+00,
        -3.9059e+00, -1.8695e+00, -2.8093e+00, -2.1685e+00, -3.6307e+00,
        -3.9772e+00, -3.7898e+00, -3.8984e+00, -3.6486e+00, -4.0940e+00,
        -3.6014e+00, -9.0618e-02, -3.8843e+00, -3.8269e+00, -2.8925e+00,
        -1.6424e+00, -2.4611e+00], device='cuda:2'), 'gt_classes': tensor([13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:2'), 'gt_boxes': Boxes(tensor([[327.1680, 294.9120, 695.8080, 569.0880],
        [327.1680, 294.9120, 695.8080, 569.0880],
        [327.1680, 294.9120, 695.8080, 569.0880],
        ...,
        [327.1680, 294.9120, 695.8080, 569.0880],
        [327.1680, 294.9120, 695.8080, 569.0880],
        [327.1680, 294.9120, 695.8080, 569.0880]], device='cuda:2'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
{'proposal_boxes': Boxes(tensor([[577.7875,  55.2993, 811.0000, 259.1771],
        [653.8445,  77.2474, 770.9577, 300.5895],
        [680.3674, 132.2628, 811.0000, 333.7753],
        ...,
        [  0.0000, 167.0685, 210.8635, 349.2573],
        [192.7652, 194.2099, 263.7024, 275.5106],
        [405.7064, 232.6891, 427.4246, 278.4306]], device='cuda:1')), 'objectness_logits': tensor([ 3.3003,  0.2896, -0.5470,  1.2421, -0.4743, -1.5071,  1.4650,  0.7477,
        -1.2384,  0.7256,  0.7945, -4.7550, 23.0259, -0.4180,  7.2265,  3.2756,
         0.7582,  5.5714, -1.0142, -1.5753, -2.5627, -0.8645, -2.8666, -3.9965,
         1.2370, -5.2688, -4.4886, -4.8674, -1.1365,  3.7259, -4.9433, -4.7628,
        -4.1510, -1.1605,  4.1504, -4.2857, -3.5851, -2.0659, -1.7844, -5.4585,
        -5.6801, -4.6596,  3.0293, -5.3517, -4.1795, -4.6771, -3.0473, -4.9551,
        -5.5524, -4.3632, -4.4066, -4.4076, -4.5877, -1.7055, -5.0460, -5.1311,
        -3.7008, -4.0004, -4.0096, -5.5121, -5.5897, -4.8510, -4.1299, -4.6787,
         2.1535, -3.6816, -4.9022, -5.4919, -3.7922, -4.7681, -2.4538, -5.3930,
        -3.5613, -4.9712, -5.6487, -4.6749, -2.2351, -5.6375, -4.3759, -4.1634,
        -2.1356, -5.3582, -5.8160,  0.1796, -4.3391, -4.9241, -4.9732, -4.7864,
        -5.7963, -4.2390,  0.5223, -4.0205, -5.4779, -3.1882, -4.5254, -5.2507,
        -4.2022, -0.1078, -2.7921, -5.2565, -5.4174, -5.7554, -3.9173, -4.9221,
        -4.6716, -5.4154, -4.5967, -4.4799, -0.8018, -4.2529, -5.4705,  3.7348,
        -4.9199, -4.2260, -4.0895, -4.6215, -4.5203, -3.2237, -5.1563, -0.9859,
        -4.1567,  5.9927,  1.1206, -3.0756, -5.5305, -2.9002, -4.2220, -0.2559,
         5.6428, -5.6677, -5.3723, -3.0084,  0.9369, -5.6285, -4.2315, -2.7475,
        -4.4796, -4.2990, -3.9489, -3.0058, -4.3101, -3.8004, -4.7174,  2.1711,
        -4.8330, -2.5077, -1.9972, -5.7204, -5.7346, -4.7917, -3.6074, -3.0551,
        -4.7987, -3.6533,  0.2150, -4.6543, -2.5184, -5.2887, -1.8617, -4.3718,
        -5.6287, -5.6023, -5.0841, -4.8487, -5.4443,  2.9686, -4.6232, -3.2610,
        -4.5982, -5.7854, -5.6894, -2.5861, -1.3363, -3.7330, -5.7039, -4.6022,
        -4.3104, -5.6620, -1.0251,  6.0692, -5.2420, -1.6894, -5.5779, -3.9679,
        -3.1691, -5.6365, -5.1543, -0.9077, -5.7647, -2.4485, -5.7936, -5.5353,
        -4.0636,  3.0439, -5.3027, -4.7404,  0.5542, -5.4077, -5.0405, -5.5851,
        -4.1319, -5.2224, -4.5278, -1.5346, -5.3198, -5.5218,  6.1741, -2.0336,
        -5.0015, -5.6123, -0.2603, -3.6814, -4.3257, -4.2769, -5.7079,  2.3581,
        -4.8110, -4.6876, -5.2996,  1.5464, -3.3337, -2.0184, -0.4213, -2.2191,
        -2.4278, -5.5927,  1.4991, -5.4063, -5.2342, -5.3113, -5.5369, -5.3794,
        -5.8040, -5.6252, -2.9605, -5.0521, -5.1479, -3.7245,  7.9134, -5.5790,
        -2.3638, -4.5174, -3.4419, -3.5543, -2.0633, -5.6652, -3.4039, -2.7929,
        -2.3580, -4.4543,  0.9674,  2.5400, -5.0392, -4.0476, -5.2563, -5.1881,
        -3.0419, -3.9161, -5.6569, -4.6399, -3.0349, -5.6284, -2.2242, -5.7204,
        -5.5713, -5.7768,  3.3315, -4.5442, -2.7621, -2.5272, -4.8569, -3.1889,
        -5.5973, -5.5122, -5.0450, -2.5958, -0.2187, -3.8072, -5.0902, -2.6761,
        -5.7646, -4.3002, -1.8831, -5.1899, -5.6316, -4.3135,  1.5458, -5.5029,
        -3.4047, -5.1483, -2.8494, -5.7562, -5.1106, -5.1801, -5.1203, -4.5215,
        -2.8491, -4.1700, -5.6009, -0.0907,  1.4643, -4.1017, -4.6150, -5.5226,
        -4.5885, -3.3048, -1.2528, -3.5735, -1.7177, -5.1649, -5.7019, -5.7546,
        -4.1985, -5.4828, -4.1381, -3.5264, -5.5778, -5.5734, -5.6877, -5.5548,
        -4.2426, -2.2403, -4.7211, -1.1009,  0.4200, -0.0614, -5.7665, -5.7623,
         4.7265, -1.2679, -3.7631, -4.3600, -4.9431, -5.5941, -4.2705, -4.5319,
        -5.4719, -4.5398, -4.6048, -5.2412, -2.2661, -5.6346, -5.7705, -3.8089,
        -5.4469, -5.1598, -4.7313, -5.6483, -3.1246, -4.9774, -5.0275,  2.3660,
        -4.1283, -5.1389, -5.0066,  1.7089, -2.9903, -5.0461, -4.8817, -5.2610,
        -2.8642, -3.5898, -4.4043,  1.5014, -3.8829, -5.8191, -3.1160, -4.8134,
        -2.2264, -4.3366, -5.6256, -4.4677, -5.3690, -5.5486, -5.7673, -4.0672,
        -4.5006, -3.5012, -3.6815, -3.6154,  0.3366, -4.9186, -5.2709, -4.4836,
        -5.7267, -5.4254, -4.6009, -5.5872,  1.1935, -2.7208, -2.8641, -5.6733,
        -5.6488,  3.8782, -1.5167, -5.6664, -5.6324, -2.7229, -4.7436, -3.6545,
        -4.0372, -5.4103, -5.2931, -4.3982, -5.7962, -5.2688, -3.9398, -5.7575,
        -3.7014, -4.8786, -5.1251, -0.4384, -3.9825, -4.5533, -4.6134, -4.3371,
        -5.5458, -1.4881, -3.3043, -4.3313, -4.0097, -3.2221, -2.5065, -3.9567,
        -4.2960,  1.3913, -0.3859, -5.7138, -4.9445, -2.4915, -3.4772, -5.6517,
        -4.9151, -5.6008, -3.4052, -5.0964, -5.0487, -1.4614,  5.5076, -5.0357,
        -5.4714, -5.7437,  2.7762, -2.5674, -4.6398, -4.7232, -3.9387, -5.6436,
        -3.4006, -1.2676, -5.4262, -5.0257, -5.2525, -4.5301, -5.2398, -3.4375,
        -4.6059, -3.9044, -5.5069, -4.5519, -4.6208, -2.8627, -3.8968, -4.2326,
        -5.4274, -3.3382, -4.3694, -4.9818, -4.8098, -3.2477, -3.8681, -5.0475,
        -5.1998, -4.1196, -1.3180, -3.3907, -5.4302, -5.3434, -1.1973, -3.2221,
        -1.4636, -5.2700, -5.6057, -5.2316, -3.2819, -5.5334,  1.5803,  0.5615,
        -5.1619,  7.2346, -3.6534, -4.3640, -5.7618, -4.6635, -4.3061, -2.4564,
        -4.9643, -4.3855, -5.1699, -3.9145, -5.1211, -1.0496, -5.7712, -3.0517,
        -5.8257, -2.1368,  0.3569, -0.5864, -2.9292, -4.9528, -4.8162, -5.5504],
       device='cuda:1'), 'gt_classes': tensor([12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
        20, 20, 20, 20, 20, 20, 20, 20], device='cuda:1'), 'gt_boxes': Boxes(tensor([[648.8000,  58.3680, 811.0000, 327.5093],
        [648.8000,  58.3680, 811.0000, 327.5093],
        [648.8000,  58.3680, 811.0000, 327.5093],
        ...,
        [648.8000,  58.3680, 811.0000, 327.5093],
        [648.8000,  58.3680, 811.0000, 327.5093],
        [648.8000,  58.3680, 811.0000, 327.5093]], device='cuda:1'))}
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Traceback (most recent call last):
  File "main.py", line 38, in <module>
    launch(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 67, in launch
    mp.spawn(
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 230, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method='spawn')
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 188, in start_processes
    while not context.join():
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 150, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 0 terminated with the following error:
Traceback (most recent call last):
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/multiprocessing/spawn.py", line 59, in _wrap
    fn(i, *args)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/launch.py", line 126, in _distributed_worker
    main_func(*args)
  File "/users/acr23hk/paper/fsod-dc/main.py", line 30, in main
    return trainer.train()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 273, in run_step
    loss_dict = self.model(data)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 886, in forward
    output = self.module(*inputs[0], **kwargs[0])
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/rcnn.py", line 54, in forward
    self.refine.update_centroids(features["res4"], proposals)
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 68, in update_centroids
    confidence = self.calculate_confidence(features, proposals)
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in calculate_confidence
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/paper/fsod-dc/src/modeling/refine.py", line 103, in <listcomp>
    contour_scores = torch.tensor([x.contour_score for x in proposals]).cuda()
  File "/users/acr23hk/.conda/envs/paper1/lib/python3.8/site-packages/detectron2/structures/instances.py", line 65, in __getattr__
    raise AttributeError("Cannot find field '{}' in the given Instances!".format(name))
AttributeError: Cannot find field 'contour_score' in the given Instances!

